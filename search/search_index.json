{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Packages ponyzip","title":"ponyzip"},{"location":"ponyzip--index/","text":"PonyZip Package \u00b6 This package consists of two APIs: ABLibZIP - A direct 1:1 mapping of the libzip C API to Pony C-FFI calls. PonyZip - A safer 'Ponyesque' API which is designed to not crash if you do something which is not safe or supported. As a general rule you should prefer the PonyZip API over ABLibZIP and only use ABLibZIP if one of the functions you need isn't implemented. If there is functionality that is missing the PonyZip that is present in ABLibZIP please either open an Issue to request it or a Pull Request to add it. Public Types \u00b6 struct Zipsourceargsseek struct Ziperror struct Zipstat struct Zipbufferfragment struct Zipfileattributes struct Zip struct Zipfile struct Zipsource struct IOFILE class PonyZip primitive ABLibZIP type ZipFlags primitive ZipCreate primitive ZipExcl primitive ZipCheckcons primitive ZipTruncate primitive ZipRDOnly type ZipFLFlags primitive ZipFLNocase primitive ZipFLNodir primitive ZipFLCompressed primitive ZipFLUnchanged primitive ZipFLRecompress primitive ZipFLEncrypted primitive ZipFLEncGuess primitive ZipFLEncRaw primitive ZipFLEncStrict primitive ZipFLLocal primitive ZipFLCentral primitive ZipFLEncUtf8 primitive ZipFLEncCp437 primitive ZipFLOverwrite type ZipAflFlags primitive ZipAFLRDOnly type ZipER primitive ZipERR primitive ZipEROK primitive ZipERMultidisk primitive ZipERRename primitive ZipERClose primitive ZipERSeek primitive ZipERRead primitive ZipERWrite primitive ZipERCRC primitive ZipERZipclosed primitive ZipERNoent primitive ZipERExists primitive ZipEROpen primitive ZipERTmpopen primitive ZipERZlib primitive ZipERMemory primitive ZipERChanged primitive ZipERCompnotsupp primitive ZipEREof primitive ZipERInval primitive ZipERNozip primitive ZipERInternal primitive ZipERIncons primitive ZipERRemove primitive ZipERDeleted primitive ZipEREncrnotsupp primitive ZipERRDOnly primitive ZipERNopasswd primitive ZipERWrongpasswd primitive ZipEROpnotsupp primitive ZipERInuse primitive ZipERTell primitive ZipERCompresseddata primitive ZipERCancelled primitive ZipETNone primitive ZipETSys primitive ZipETZlib primitive ZipCMDefault primitive ZipCMStore primitive ZipCMShrink primitive ZipCMReduce1 primitive ZipCMReduce2 primitive ZipCMReduce3 primitive ZipCMReduce4 primitive ZipCMImplode primitive ZipCMDeflate primitive ZipCMDeflate64 primitive ZipCMPkwareimplode primitive ZipCMBzip2 primitive ZipCMLzma primitive ZipCMTerse primitive ZipCMLz77 primitive ZipCMLzma2 primitive ZipCMxz primitive ZipCMJpeg primitive ZipCMWavpack primitive ZipCMPpmd type ZipEMType primitive ZipEMNone primitive ZipEMTradpkware primitive ZipEMDes primitive ZipEMRc2old primitive ZipEM3des168 primitive ZipEM3des112 primitive ZipEMPkzipaes128 primitive ZipEMPkzipaes192 primitive ZipEMPkzipaes256 primitive ZipEMRc2 primitive ZipEMRc4 primitive ZipEMAes128 primitive ZipEMAes192 primitive ZipEMAes256 primitive ZipEMUnknown primitive ZipOPSYSDos primitive ZipOPSYSAmiga primitive ZipOPSYSOpenvms primitive ZipOPSYSUnix primitive ZipOPSYSVmcms primitive ZipOPSYSAtarist primitive ZipOPSYSOs2 primitive ZipOPSYSMacintosh primitive ZipOPSYSZsystem primitive ZipOPSYSCpm primitive ZipOPSYSWindowsntfs primitive ZipOPSYSMvs primitive ZipOPSYSVse primitive ZipOPSYSAcornrisc primitive ZipOPSYSVfat primitive ZipOPSYSAlternatemvs primitive ZipOPSYSBeos primitive ZipOPSYSTandem primitive ZipOPSYSOs400 primitive ZipOPSYSOsx type ZipOPSYSDefault type ZipSOURCESupportsReadable type ZipSOURCESupportsReadableFlags primitive ZipSOURCEOpen primitive ZipSOURCERead primitive ZipSOURCEClose primitive ZipSOURCEStat primitive ZipSOURCEError primitive ZipSOURCEFree type ZipSOURCESupportsSeekable type ZipSOURCESupportsSeekableFlags primitive ZipSOURCESeek primitive ZipSOURCETell primitive ZipSOURCESupports type ZipSOURCESupportsWritable type ZipSOURCESupportsWritableFlags primitive ZipSOURCEBeginWrite primitive ZipSOURCECommitWrite primitive ZipSOURCERollbackWrite primitive ZipSOURCEWrite primitive ZipSOURCESeekWrite primitive ZipSOURCETellWrite primitive ZipSOURCERemove primitive ZipSOURCEReserved1 primitive ZipSOURCEBeginWriteCloning primitive ZipSOURCEAcceptEmpty primitive ZipSOURCEGetFileAttributes type ZipStatFlags primitive ZipSTATName primitive ZipSTATIndex primitive ZipSTATSize primitive ZipSTATCompSize primitive ZipSTATMtime primitive ZipSTATCrc primitive ZipSTATCompMethod primitive ZipSTATEncryptionMethod primitive ZipSTATFlag type ZipFileAttributesFlags primitive ZipFileAttributesHostSystem primitive ZipFileAttributesAscii primitive ZipFileAttributesVersionNeeded primitive ZipFileAttributesExternalFileAttributes primitive ZipFileAttributesGeneralPurposeBitFlags primitive CRC32","title":"Package"},{"location":"ponyzip--index/#ponyzip-package","text":"This package consists of two APIs: ABLibZIP - A direct 1:1 mapping of the libzip C API to Pony C-FFI calls. PonyZip - A safer 'Ponyesque' API which is designed to not crash if you do something which is not safe or supported. As a general rule you should prefer the PonyZip API over ABLibZIP and only use ABLibZIP if one of the functions you need isn't implemented. If there is functionality that is missing the PonyZip that is present in ABLibZIP please either open an Issue to request it or a Pull Request to add it.","title":"PonyZip Package"},{"location":"ponyzip--index/#public-types","text":"struct Zipsourceargsseek struct Ziperror struct Zipstat struct Zipbufferfragment struct Zipfileattributes struct Zip struct Zipfile struct Zipsource struct IOFILE class PonyZip primitive ABLibZIP type ZipFlags primitive ZipCreate primitive ZipExcl primitive ZipCheckcons primitive ZipTruncate primitive ZipRDOnly type ZipFLFlags primitive ZipFLNocase primitive ZipFLNodir primitive ZipFLCompressed primitive ZipFLUnchanged primitive ZipFLRecompress primitive ZipFLEncrypted primitive ZipFLEncGuess primitive ZipFLEncRaw primitive ZipFLEncStrict primitive ZipFLLocal primitive ZipFLCentral primitive ZipFLEncUtf8 primitive ZipFLEncCp437 primitive ZipFLOverwrite type ZipAflFlags primitive ZipAFLRDOnly type ZipER primitive ZipERR primitive ZipEROK primitive ZipERMultidisk primitive ZipERRename primitive ZipERClose primitive ZipERSeek primitive ZipERRead primitive ZipERWrite primitive ZipERCRC primitive ZipERZipclosed primitive ZipERNoent primitive ZipERExists primitive ZipEROpen primitive ZipERTmpopen primitive ZipERZlib primitive ZipERMemory primitive ZipERChanged primitive ZipERCompnotsupp primitive ZipEREof primitive ZipERInval primitive ZipERNozip primitive ZipERInternal primitive ZipERIncons primitive ZipERRemove primitive ZipERDeleted primitive ZipEREncrnotsupp primitive ZipERRDOnly primitive ZipERNopasswd primitive ZipERWrongpasswd primitive ZipEROpnotsupp primitive ZipERInuse primitive ZipERTell primitive ZipERCompresseddata primitive ZipERCancelled primitive ZipETNone primitive ZipETSys primitive ZipETZlib primitive ZipCMDefault primitive ZipCMStore primitive ZipCMShrink primitive ZipCMReduce1 primitive ZipCMReduce2 primitive ZipCMReduce3 primitive ZipCMReduce4 primitive ZipCMImplode primitive ZipCMDeflate primitive ZipCMDeflate64 primitive ZipCMPkwareimplode primitive ZipCMBzip2 primitive ZipCMLzma primitive ZipCMTerse primitive ZipCMLz77 primitive ZipCMLzma2 primitive ZipCMxz primitive ZipCMJpeg primitive ZipCMWavpack primitive ZipCMPpmd type ZipEMType primitive ZipEMNone primitive ZipEMTradpkware primitive ZipEMDes primitive ZipEMRc2old primitive ZipEM3des168 primitive ZipEM3des112 primitive ZipEMPkzipaes128 primitive ZipEMPkzipaes192 primitive ZipEMPkzipaes256 primitive ZipEMRc2 primitive ZipEMRc4 primitive ZipEMAes128 primitive ZipEMAes192 primitive ZipEMAes256 primitive ZipEMUnknown primitive ZipOPSYSDos primitive ZipOPSYSAmiga primitive ZipOPSYSOpenvms primitive ZipOPSYSUnix primitive ZipOPSYSVmcms primitive ZipOPSYSAtarist primitive ZipOPSYSOs2 primitive ZipOPSYSMacintosh primitive ZipOPSYSZsystem primitive ZipOPSYSCpm primitive ZipOPSYSWindowsntfs primitive ZipOPSYSMvs primitive ZipOPSYSVse primitive ZipOPSYSAcornrisc primitive ZipOPSYSVfat primitive ZipOPSYSAlternatemvs primitive ZipOPSYSBeos primitive ZipOPSYSTandem primitive ZipOPSYSOs400 primitive ZipOPSYSOsx type ZipOPSYSDefault type ZipSOURCESupportsReadable type ZipSOURCESupportsReadableFlags primitive ZipSOURCEOpen primitive ZipSOURCERead primitive ZipSOURCEClose primitive ZipSOURCEStat primitive ZipSOURCEError primitive ZipSOURCEFree type ZipSOURCESupportsSeekable type ZipSOURCESupportsSeekableFlags primitive ZipSOURCESeek primitive ZipSOURCETell primitive ZipSOURCESupports type ZipSOURCESupportsWritable type ZipSOURCESupportsWritableFlags primitive ZipSOURCEBeginWrite primitive ZipSOURCECommitWrite primitive ZipSOURCERollbackWrite primitive ZipSOURCEWrite primitive ZipSOURCESeekWrite primitive ZipSOURCETellWrite primitive ZipSOURCERemove primitive ZipSOURCEReserved1 primitive ZipSOURCEBeginWriteCloning primitive ZipSOURCEAcceptEmpty primitive ZipSOURCEGetFileAttributes type ZipStatFlags primitive ZipSTATName primitive ZipSTATIndex primitive ZipSTATSize primitive ZipSTATCompSize primitive ZipSTATMtime primitive ZipSTATCrc primitive ZipSTATCompMethod primitive ZipSTATEncryptionMethod primitive ZipSTATFlag type ZipFileAttributesFlags primitive ZipFileAttributesHostSystem primitive ZipFileAttributesAscii primitive ZipFileAttributesVersionNeeded primitive ZipFileAttributesExternalFileAttributes primitive ZipFileAttributesGeneralPurposeBitFlags primitive CRC32","title":"Public Types"},{"location":"ponyzip-ABLibZIP/","text":"ABLibZIP \u00b6 [Source] primitive val ABLibZIP Constructors \u00b6 create \u00b6 [Source] new val create() : ABLibZIP val^ Returns \u00b6 ABLibZIP val^ Public Functions \u00b6 pzip_open \u00b6 [Source] DESCRIPTION \u00b6 The pzip_open() function opens the zip archive specified by path and returns a pointer to a struct zip, used to manipulate the archive. The flags are specified by or'ing the following values, or 0 for none of them. ZipCheckcons Perform additional stricter consistency checks on the archive, and error if they fail. ZipCreate Create the archive if it does not exist. ZipExcl Error if archive already exists. ZipTruncate If archive exists, ignore its current contents. In other words, handle it the same way as an empty archive. ZipRDOnly Open archive in read-only mode. If an error occurs and errorp is non-NULL, it will be set to the corresponding error code. The pzip_open_from_source() function opens a zip archive encapsulated by the zip_source zs using the provided flags. In case of error, the ZipError ze is filled in. RETURN VALUES \u00b6 Upon successful completion pzip_open() and pzip_open_from_source() return a struct zip pointer. Otherwise, NULL is returned and pzip_open() sets *errorp to indicate the error, while zip_open_from(source) sets ze to indicate the error. ERRORS \u00b6 The archive specified by path is opened unless: ZipERExists The file specified by path exists and ZIP_EXCL is set. ZipERIncons Inconsistencies were found in the file specified by path. This error is often caused by specifying ZIP_CHECKCONS but can also happen without it. ZipERInval The path argument is NULL. ZipERMemory Required memory could not be allocated. ZipERNoent The file specified by path does not exist and ZIP_CREATE is not set. ZipERNozip The file specified by path is not a zip archive. ZipEROpen The file specified by path could not be opened. ZipERRead A read error occurred; see errno for details. ZipERSeek The file specified by path does not allow seeks. fun box pzip_open( path: String val, flags: U32 val, errorp: Pointer[I32 val] tag) : NullablePointer[Zip ref] ref Parameters \u00b6 path: String val flags: U32 val errorp: Pointer [ I32 val] tag Returns \u00b6 NullablePointer [ Zip ref] ref pzip_fdopen \u00b6 [Source] fun box pzip_fdopen( filedescriptor: I32 val, flags: I32 val, errorp: Pointer[I32 val] tag) : NullablePointer[Zip ref] ref Parameters \u00b6 filedescriptor: I32 val flags: I32 val errorp: Pointer [ I32 val] tag Returns \u00b6 NullablePointer [ Zip ref] ref pzip_open_from_source \u00b6 [Source] fun box pzip_open_from_source( zipsource: NullablePointer[Zipsource ref] tag, flags: U32 val, errorp: Pointer[I32 val] tag) : NullablePointer[Zip ref] ref Parameters \u00b6 zipsource: NullablePointer [ Zipsource ref] tag flags: U32 val errorp: Pointer [ I32 val] tag Returns \u00b6 NullablePointer [ Zip ref] ref pzip_name_locate \u00b6 [Source] fun box pzip_name_locate( archive: NullablePointer[Zip ref] tag, filename: String val, flags: U32 val) : I64 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag filename: String val flags: U32 val Returns \u00b6 I64 val pzip_stat \u00b6 [Source] fun box pzip_stat( archive: NullablePointer[Zip ref] tag, filename: String val, flags: U32 val, zipstat: NullablePointer[Zipstat ref] tag) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag filename: String val flags: U32 val zipstat: NullablePointer [ Zipstat ref] tag Returns \u00b6 I32 val pzip_stat_index \u00b6 [Source] fun box pzip_stat_index( archive: NullablePointer[Zip ref] tag, index: U64 val, flags: U32 val, zipstat: NullablePointer[Zipstat ref] tag) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val flags: U32 val zipstat: NullablePointer [ Zipstat ref] tag Returns \u00b6 I32 val pzip_stat_init \u00b6 [Source] fun box pzip_stat_init( zipstat: NullablePointer[Zipstat ref] tag) : None val Parameters \u00b6 zipstat: NullablePointer [ Zipstat ref] tag Returns \u00b6 None val pzip_fopen \u00b6 [Source] fun box pzip_fopen( archive: NullablePointer[Zip ref] tag, filename: String val, flags: U32 val) : NullablePointer[Zipfile ref] ref Parameters \u00b6 archive: NullablePointer [ Zip ref] tag filename: String val flags: U32 val Returns \u00b6 NullablePointer [ Zipfile ref] ref pzip_fopen_encrypted \u00b6 [Source] fun box pzip_fopen_encrypted( archive: NullablePointer[Zip ref] tag, filename: String val, flags: U32 val, password: String val) : NullablePointer[Zipfile ref] ref Parameters \u00b6 archive: NullablePointer [ Zip ref] tag filename: String val flags: U32 val password: String val Returns \u00b6 NullablePointer [ Zipfile ref] ref pzip_fopen_index \u00b6 [Source] fun box pzip_fopen_index( archive: NullablePointer[Zip ref] tag, index: U64 val, flags: U32 val) : NullablePointer[Zipfile ref] ref Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val flags: U32 val Returns \u00b6 NullablePointer [ Zipfile ref] ref pzip_fopen_index_encrypted \u00b6 [Source] fun box pzip_fopen_index_encrypted( archive: NullablePointer[Zip ref] tag, index: U64 val, flags: U32 val, password: String val) : NullablePointer[Zipfile ref] ref Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val flags: U32 val password: String val Returns \u00b6 NullablePointer [ Zipfile ref] ref pzip_fread \u00b6 [Source] fun box pzip_fread( file: NullablePointer[Zipfile ref] tag, buffer: Pointer[U8 val] tag, length: U64 val) : I64 val Parameters \u00b6 file: NullablePointer [ Zipfile ref] tag buffer: Pointer [ U8 val] tag length: U64 val Returns \u00b6 I64 val pzip_fseek \u00b6 [Source] fun box pzip_fseek( file: NullablePointer[Zipfile ref] tag, offset: I64 val, whence: I32 val) : I8 val Parameters \u00b6 file: NullablePointer [ Zipfile ref] tag offset: I64 val whence: I32 val Returns \u00b6 I8 val pzip_ftell \u00b6 [Source] fun box pzip_ftell( file: NullablePointer[Zipfile ref] tag) : I64 val Parameters \u00b6 file: NullablePointer [ Zipfile ref] tag Returns \u00b6 I64 val pzip_fclose \u00b6 [Source] fun box pzip_fclose( file: NullablePointer[Zipfile ref] tag) : I32 val Parameters \u00b6 file: NullablePointer [ Zipfile ref] tag Returns \u00b6 I32 val pzip_file_extra_fields_count \u00b6 [Source] fun box pzip_file_extra_fields_count( archive: NullablePointer[Zip ref] tag, index: U64 val, flags: U32 val) : I16 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val flags: U32 val Returns \u00b6 I16 val pzip_file_extra_fields_count_by_id \u00b6 [Source] fun box pzip_file_extra_fields_count_by_id( archive: NullablePointer[Zip ref] tag, index: U64 val, extra_field_id: U16 val, flags: U32 val) : I16 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val extra_field_id: U16 val flags: U32 val Returns \u00b6 I16 val pzip_file_extra_field_get \u00b6 [Source] fun box pzip_file_extra_field_get( archive: NullablePointer[Zip ref] tag, index: U64 val, extra_field_index: U16 val, idp: Pointer[U16 val] tag, lenp: Pointer[U16 val] tag, flags: U32 val) : String val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val extra_field_index: U16 val idp: Pointer [ U16 val] tag lenp: Pointer [ U16 val] tag flags: U32 val Returns \u00b6 String val pzip_file_extra_field_get_by_id \u00b6 [Source] fun box pzip_file_extra_field_get_by_id( archive: NullablePointer[Zip ref] tag, index: U64 val, extra_field_id: U16 val, extra_field_index: U16 val, lenp: Pointer[U16 val] tag, flags: U32 val) : String val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val extra_field_id: U16 val extra_field_index: U16 val lenp: Pointer [ U16 val] tag flags: U32 val Returns \u00b6 String val pzip_file_get_comment \u00b6 [Source] fun box pzip_file_get_comment( archive: NullablePointer[Zip ref] tag, index: U64 val, lenp: Pointer[U32 val] tag, flags: U32 val) : String val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val lenp: Pointer [ U32 val] tag flags: U32 val Returns \u00b6 String val pzip_file_get_external_attributes \u00b6 [Source] fun box pzip_file_get_external_attributes( archive: NullablePointer[Zip ref] tag, index: U64 val, flags: U32 val, opsys: String val, attributes: Pointer[U32 val] tag) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val flags: U32 val opsys: String val attributes: Pointer [ U32 val] tag Returns \u00b6 I32 val pzip_get_archive_comment \u00b6 [Source] fun box pzip_get_archive_comment( archive: NullablePointer[Zip ref] tag, lenp: Pointer[I32 val] tag, flags: U32 val) : String val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag lenp: Pointer [ I32 val] tag flags: U32 val Returns \u00b6 String val pzip_get_archive_flag \u00b6 [Source] fun box pzip_get_archive_flag( archive: NullablePointer[Zip ref] tag, flag: U32 val, flags: U32 val) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag flag: U32 val flags: U32 val Returns \u00b6 I32 val pzip_get_name \u00b6 [Source] fun box pzip_get_name( archive: NullablePointer[Zip ref] tag, index: U64 val, flags: U32 val) : String val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val flags: U32 val Returns \u00b6 String val pzip_get_num_entries \u00b6 [Source] fun box pzip_get_num_entries( archive: NullablePointer[Zip ref] tag, flags: U32 val) : I64 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag flags: U32 val Returns \u00b6 I64 val pzip_source_get_file_attributes \u00b6 [Source] fun box pzip_source_get_file_attributes( archive: NullablePointer[Zipsource ref] tag, attributes: NullablePointer[Zipfileattributes ref] tag) : I32 val Parameters \u00b6 archive: NullablePointer [ Zipsource ref] tag attributes: NullablePointer [ Zipfileattributes ref] tag Returns \u00b6 I32 val pzip_close \u00b6 [Source] fun box pzip_close( archive: NullablePointer[Zip ref] tag) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag Returns \u00b6 I32 val pzip_discard \u00b6 [Source] fun box pzip_discard( archive: NullablePointer[Zip ref] tag) : None val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag Returns \u00b6 None val pzip_delete \u00b6 [Source] fun box pzip_delete( archive: NullablePointer[Zip ref] tag, index: U64 val) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val Returns \u00b6 I32 val pzip_dir_add \u00b6 [Source] fun box pzip_dir_add( archive: NullablePointer[Zip ref] tag, filename: String val, flags: U32 val) : I64 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag filename: String val flags: U32 val Returns \u00b6 I64 val pzip_file_add \u00b6 [Source] fun box pzip_file_add( archive: NullablePointer[Zip ref] tag, filename: String val, zipsource: NullablePointer[Zipsource ref] tag, flags: U32 val) : I64 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag filename: String val zipsource: NullablePointer [ Zipsource ref] tag flags: U32 val Returns \u00b6 I64 val pzip_file_replace \u00b6 [Source] fun box pzip_file_replace( archive: NullablePointer[Zip ref] tag, index: U64 val, zipsource: NullablePointer[Zipsource ref] tag, flags: U32 val) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val zipsource: NullablePointer [ Zipsource ref] tag flags: U32 val Returns \u00b6 I32 val pzip_file_attributes_init \u00b6 [Source] fun box pzip_file_attributes_init( attributes: NullablePointer[Zipfileattributes ref] tag) : None val Parameters \u00b6 attributes: NullablePointer [ Zipfileattributes ref] tag Returns \u00b6 None val pzip_file_extra_field_delete \u00b6 [Source] fun box pzip_file_extra_field_delete( archive: NullablePointer[Zip ref] tag, index: U64 val, extra_field_index: U16 val, flags: U32 val) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val extra_field_index: U16 val flags: U32 val Returns \u00b6 I32 val pzip_file_extra_field_delete_by_id \u00b6 [Source] fun box pzip_file_extra_field_delete_by_id( archive: NullablePointer[Zip ref] tag, index: U64 val, extra_field_id: U16 val, extra_field_index: U16 val, flags: U32 val) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val extra_field_id: U16 val extra_field_index: U16 val flags: U32 val Returns \u00b6 I32 val pzip_file_extra_field_set \u00b6 [Source] fun box pzip_file_extra_field_set( archive: NullablePointer[Zip ref] tag, index: U64 val, extra_field_id: U16 val, extra_field_index: U16 val, extra_field_data: String val, len: U16 val, flags: U32 val) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val extra_field_id: U16 val extra_field_index: U16 val extra_field_data: String val len: U16 val flags: U32 val Returns \u00b6 I32 val pzip_file_rename \u00b6 [Source] fun box pzip_file_rename( archive: NullablePointer[Zip ref] tag, index: U64 val, filename: String val, flags: U32 val) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val filename: String val flags: U32 val Returns \u00b6 I32 val pzip_file_set_comment \u00b6 [Source] fun box pzip_file_set_comment( archive: NullablePointer[Zip ref] tag, index: U64 val, comment: String val, length: U16 val, flags: U32 val) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val comment: String val length: U16 val flags: U32 val Returns \u00b6 I32 val pzip_file_set_dostime \u00b6 [Source] fun box pzip_file_set_dostime( archive: NullablePointer[Zip ref] tag, index: U64 val, dostime: U16 val, dosdate: U16 val, flags: U32 val) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val dostime: U16 val dosdate: U16 val flags: U32 val Returns \u00b6 I32 val pzip_file_set_mtime \u00b6 [Source] fun box pzip_file_set_mtime( archive: NullablePointer[Zip ref] tag, index: U64 val, mtime: I64 val, flags: U32 val) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val mtime: I64 val flags: U32 val Returns \u00b6 I32 val pzip_file_set_encryption \u00b6 [Source] fun box pzip_file_set_encryption( archive: NullablePointer[Zip ref] tag, index: U64 val, method: U16 val, password: String val) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val method: U16 val password: String val Returns \u00b6 I32 val pzip_file_set_external_attributes \u00b6 [Source] fun box pzip_file_set_external_attributes( archive: NullablePointer[Zip ref] tag, index: U64 val, flags: U32 val, opsys: U8 val, attributes: U32 val) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val flags: U32 val opsys: U8 val attributes: U32 val Returns \u00b6 I32 val pzip_set_archive_comment \u00b6 [Source] fun box pzip_set_archive_comment( archive: NullablePointer[Zip ref] tag, comment: String val, length: U16 val) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag comment: String val length: U16 val Returns \u00b6 I32 val pzip_set_archive_flag \u00b6 [Source] fun box pzip_set_archive_flag( archive: NullablePointer[Zip ref] tag, flags: U32 val, value: I32 val) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag flags: U32 val value: I32 val Returns \u00b6 I32 val pzip_set_default_password \u00b6 [Source] fun box pzip_set_default_password( archive: NullablePointer[Zip ref] tag, password: String val) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag password: String val Returns \u00b6 I32 val pzip_set_file_compression \u00b6 [Source] fun box pzip_set_file_compression( archive: NullablePointer[Zip ref] tag, index: U64 val, comp: I32 val, compflags: U32 val) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val comp: I32 val compflags: U32 val Returns \u00b6 I32 val pzip_source_begin_write \u00b6 [Source] fun box pzip_source_begin_write( source: NullablePointer[Zipsource ref] tag) : I32 val Parameters \u00b6 source: NullablePointer [ Zipsource ref] tag Returns \u00b6 I32 val pzip_source_begin_write_cloning \u00b6 [Source] fun box pzip_source_begin_write_cloning( source: NullablePointer[Zipsource ref] tag, offset: U64 val) : I32 val Parameters \u00b6 source: NullablePointer [ Zipsource ref] tag offset: U64 val Returns \u00b6 I32 val pzip_source_buffer \u00b6 [Source] fun box pzip_source_buffer( archive: NullablePointer[Zip ref] tag, data: Pointer[U8 val] tag, length: U64 val, free: I32 val) : NullablePointer[Zipsource ref] ref Parameters \u00b6 archive: NullablePointer [ Zip ref] tag data: Pointer [ U8 val] tag length: U64 val free: I32 val Returns \u00b6 NullablePointer [ Zipsource ref] ref pzip_source_buffer_create \u00b6 [Source] fun box pzip_source_buffer_create( data: Pointer[U8 val] tag, length: U64 val, free: I32 val, errorp: NullablePointer[Ziperror ref] tag) : NullablePointer[Zipsource ref] ref Parameters \u00b6 data: Pointer [ U8 val] tag length: U64 val free: I32 val errorp: NullablePointer [ Ziperror ref] tag Returns \u00b6 NullablePointer [ Zipsource ref] ref pzip_source_buffer_fragment \u00b6 [Source] fun box pzip_source_buffer_fragment( archive: NullablePointer[Zip ref] tag, fragment: NullablePointer[Zipbufferfragment ref] tag, nfrags: U64 val, free: I32 val) : NullablePointer[Zipsource ref] ref Parameters \u00b6 archive: NullablePointer [ Zip ref] tag fragment: NullablePointer [ Zipbufferfragment ref] tag nfrags: U64 val free: I32 val Returns \u00b6 NullablePointer [ Zipsource ref] ref pzip_source_buffer_fragment_create \u00b6 [Source] fun box pzip_source_buffer_fragment_create( fragment: NullablePointer[Zipbufferfragment ref] tag, nfrags: U64 val, free: I32 val, errorp: NullablePointer[Ziperror ref] tag) : NullablePointer[Zipsource ref] ref Parameters \u00b6 fragment: NullablePointer [ Zipbufferfragment ref] tag nfrags: U64 val free: I32 val errorp: NullablePointer [ Ziperror ref] tag Returns \u00b6 NullablePointer [ Zipsource ref] ref pzip_source_close \u00b6 [Source] fun box pzip_source_close( source: NullablePointer[Zipsource ref] tag) : I32 val Parameters \u00b6 source: NullablePointer [ Zipsource ref] tag Returns \u00b6 I32 val pzip_source_commit_write \u00b6 [Source] fun box pzip_source_commit_write( source: NullablePointer[Zipsource ref] tag) : I32 val Parameters \u00b6 source: NullablePointer [ Zipsource ref] tag Returns \u00b6 I32 val pzip_source_error \u00b6 [Source] fun box pzip_source_error( source: NullablePointer[Zipsource ref] tag) : NullablePointer[Ziperror ref] ref Parameters \u00b6 source: NullablePointer [ Zipsource ref] tag Returns \u00b6 NullablePointer [ Ziperror ref] ref pzip_source_file \u00b6 [Source] fun box pzip_source_file( zip: NullablePointer[Zip ref] tag, filename: String val, start: U64 val, length: I64 val) : NullablePointer[Zipsource ref] ref Parameters \u00b6 zip: NullablePointer [ Zip ref] tag filename: String val start: U64 val length: I64 val Returns \u00b6 NullablePointer [ Zipsource ref] ref pzip_source_file_create \u00b6 [Source] fun box pzip_source_file_create( filename: String val, start: U64 val, length: I64 val, errorp: NullablePointer[Ziperror ref] tag) : NullablePointer[Zipsource ref] ref Parameters \u00b6 filename: String val start: U64 val length: I64 val errorp: NullablePointer [ Ziperror ref] tag Returns \u00b6 NullablePointer [ Zipsource ref] ref pzip_source_free \u00b6 [Source] fun box pzip_source_free( source: NullablePointer[Zipsource ref] tag) : None val Parameters \u00b6 source: NullablePointer [ Zipsource ref] tag Returns \u00b6 None val pzip_source_keep \u00b6 [Source] fun box pzip_source_keep( source: NullablePointer[Zipsource ref] tag) : None val Parameters \u00b6 source: NullablePointer [ Zipsource ref] tag Returns \u00b6 None val pzip_source_open \u00b6 [Source] fun box pzip_source_open( source: NullablePointer[Zipsource ref] tag) : I32 val Parameters \u00b6 source: NullablePointer [ Zipsource ref] tag Returns \u00b6 I32 val pzip_source_read \u00b6 [Source] fun box pzip_source_read( source: NullablePointer[Zipsource ref] tag, data: Pointer[U8 val] tag, length: U64 val) : I64 val Parameters \u00b6 source: NullablePointer [ Zipsource ref] tag data: Pointer [ U8 val] tag length: U64 val Returns \u00b6 I64 val pzip_source_rollback_write \u00b6 [Source] fun box pzip_source_rollback_write( source: NullablePointer[Zipsource ref] tag) : None val Parameters \u00b6 source: NullablePointer [ Zipsource ref] tag Returns \u00b6 None val pzip_source_seek \u00b6 [Source] fun box pzip_source_seek( source: NullablePointer[Zipsource ref] tag, offset: I64 val, whence: I32 val) : I32 val Parameters \u00b6 source: NullablePointer [ Zipsource ref] tag offset: I64 val whence: I32 val Returns \u00b6 I32 val pzip_source_seek_compute_offset \u00b6 [Source] fun box pzip_source_seek_compute_offset( offset: U64 val, length: U64 val, data: Pointer[U8 val] tag, data_length: U64 val, errorp: NullablePointer[Ziperror ref] tag) : I64 val Parameters \u00b6 offset: U64 val length: U64 val data: Pointer [ U8 val] tag data_length: U64 val errorp: NullablePointer [ Ziperror ref] tag Returns \u00b6 I64 val pzip_source_seek_write \u00b6 [Source] fun box pzip_source_seek_write( source: NullablePointer[Zipsource ref] tag, offset: I64 val, whence: I32 val) : I32 val Parameters \u00b6 source: NullablePointer [ Zipsource ref] tag offset: I64 val whence: I32 val Returns \u00b6 I32 val pzip_source_stat \u00b6 [Source] fun box pzip_source_stat( source: NullablePointer[Zipsource ref] tag, zipstat: NullablePointer[Zipstat ref] tag) : I32 val Parameters \u00b6 source: NullablePointer [ Zipsource ref] tag zipstat: NullablePointer [ Zipstat ref] tag Returns \u00b6 I32 val pzip_source_tell \u00b6 [Source] fun box pzip_source_tell( source: NullablePointer[Zipsource ref] tag) : I64 val Parameters \u00b6 source: NullablePointer [ Zipsource ref] tag Returns \u00b6 I64 val pzip_source_tell_write \u00b6 [Source] fun box pzip_source_tell_write( source: NullablePointer[Zipsource ref] tag) : I64 val Parameters \u00b6 source: NullablePointer [ Zipsource ref] tag Returns \u00b6 I64 val pzip_source_write \u00b6 [Source] fun box pzip_source_write( source: NullablePointer[Zipsource ref] tag, data: Pointer[U8 val] tag, length: U64 val) : I64 val Parameters \u00b6 source: NullablePointer [ Zipsource ref] tag data: Pointer [ U8 val] tag length: U64 val Returns \u00b6 I64 val pzip_source_zip \u00b6 [Source] fun box pzip_source_zip( archive: NullablePointer[Zip ref] tag, sourcearchive: NullablePointer[Zip ref] tag, srcindex: U64 val, flags: U32 val, start: U64 val, length: I64 val) : NullablePointer[Zipsource ref] ref Parameters \u00b6 archive: NullablePointer [ Zip ref] tag sourcearchive: NullablePointer [ Zip ref] tag srcindex: U64 val flags: U32 val start: U64 val length: I64 val Returns \u00b6 NullablePointer [ Zipsource ref] ref pzip_unchange \u00b6 [Source] fun box pzip_unchange( archive: NullablePointer[Zip ref] tag, index: U64 val) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag index: U64 val Returns \u00b6 I32 val pzip_unchange_all \u00b6 [Source] fun box pzip_unchange_all( archive: NullablePointer[Zip ref] tag) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag Returns \u00b6 I32 val pzip_unchange_archive \u00b6 [Source] fun box pzip_unchange_archive( archive: NullablePointer[Zip ref] tag) : I32 val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag Returns \u00b6 I32 val pzip_compression_method_supported \u00b6 [Source] fun box pzip_compression_method_supported( pmethod: I32 val, pcompress: I32 val) : I32 val Parameters \u00b6 pmethod: I32 val pcompress: I32 val Returns \u00b6 I32 val pzip_encryption_method_supported \u00b6 [Source] fun box pzip_encryption_method_supported( pmethod: U16 val, pencode: I32 val) : I32 val Parameters \u00b6 pmethod: U16 val pencode: I32 val Returns \u00b6 I32 val pzip_get_error \u00b6 [Source] fun box pzip_get_error( archive: NullablePointer[Zip ref] tag) : NullablePointer[Ziperror ref] ref Parameters \u00b6 archive: NullablePointer [ Zip ref] tag Returns \u00b6 NullablePointer [ Ziperror ref] ref pzip_error_clear \u00b6 [Source] fun box pzip_error_clear( archive: NullablePointer[Zip ref] tag) : None val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag Returns \u00b6 None val pzip_error_code_zip \u00b6 [Source] fun box pzip_error_code_zip( perror: NullablePointer[Ziperror ref] tag) : I32 val Parameters \u00b6 perror: NullablePointer [ Ziperror ref] tag Returns \u00b6 I32 val pzip_error_code_system \u00b6 [Source] fun box pzip_error_code_system( perror: NullablePointer[Ziperror ref] tag) : I32 val Parameters \u00b6 perror: NullablePointer [ Ziperror ref] tag Returns \u00b6 I32 val pzip_error_fini \u00b6 [Source] fun box pzip_error_fini( perror: NullablePointer[Ziperror ref] tag) : None val Parameters \u00b6 perror: NullablePointer [ Ziperror ref] tag Returns \u00b6 None val pzip_error_init \u00b6 [Source] fun box pzip_error_init( perror: NullablePointer[Ziperror ref] tag) : None val Parameters \u00b6 perror: NullablePointer [ Ziperror ref] tag Returns \u00b6 None val pzip_error_init_with_code \u00b6 [Source] fun box pzip_error_init_with_code( perror: NullablePointer[Ziperror ref] tag, errorno: I32 val) : None val Parameters \u00b6 perror: NullablePointer [ Ziperror ref] tag errorno: I32 val Returns \u00b6 None val pzip_error_set \u00b6 [Source] fun box pzip_error_set( errorp: NullablePointer[Ziperror ref] tag, le: I32 val, se: I32 val) : None val Parameters \u00b6 errorp: NullablePointer [ Ziperror ref] tag le: I32 val se: I32 val Returns \u00b6 None val pzip_error_strerror \u00b6 [Source] fun box pzip_error_strerror( errorp: NullablePointer[Ziperror ref] tag) : String val Parameters \u00b6 errorp: NullablePointer [ Ziperror ref] tag Returns \u00b6 String val pzip_error_system_type \u00b6 [Source] fun box pzip_error_system_type( errorp: NullablePointer[Ziperror ref] tag) : I32 val Parameters \u00b6 errorp: NullablePointer [ Ziperror ref] tag Returns \u00b6 I32 val pzip_error_to_data \u00b6 [Source] fun box pzip_error_to_data( errorp: NullablePointer[Ziperror ref] tag, data: Pointer[U8 val] tag, length: U64 val) : I64 val Parameters \u00b6 errorp: NullablePointer [ Ziperror ref] tag data: Pointer [ U8 val] tag length: U64 val Returns \u00b6 I64 val pzip_file_error_clear \u00b6 [Source] fun box pzip_file_error_clear( file: NullablePointer[Zipfile ref] tag) : None val Parameters \u00b6 file: NullablePointer [ Zipfile ref] tag Returns \u00b6 None val pzip_file_get_error \u00b6 [Source] fun box pzip_file_get_error( file: NullablePointer[Zipfile ref] tag) : NullablePointer[Ziperror ref] ref Parameters \u00b6 file: NullablePointer [ Zipfile ref] tag Returns \u00b6 NullablePointer [ Ziperror ref] ref pzip_file_strerror \u00b6 [Source] fun box pzip_file_strerror( file: NullablePointer[Zipfile ref] tag) : String val Parameters \u00b6 file: NullablePointer [ Zipfile ref] tag Returns \u00b6 String val pzip_strerror \u00b6 [Source] fun box pzip_strerror( archive: NullablePointer[Zip ref] tag) : String val Parameters \u00b6 archive: NullablePointer [ Zip ref] tag Returns \u00b6 String val pzip_libzip_version \u00b6 [Source] fun box pzip_libzip_version() : String val Returns \u00b6 String val pzip_source_is_deleted \u00b6 [Source] fun box pzip_source_is_deleted( source: NullablePointer[Zipsource ref] tag) : I32 val Parameters \u00b6 source: NullablePointer [ Zipsource ref] tag Returns \u00b6 I32 val obsolete_pzip_add \u00b6 [Source] fun box obsolete_pzip_add( pparg0: NullablePointer[Zip ref] tag, pparg1: String val, pparg2: NullablePointer[Zipsource ref] tag) : I64 val Parameters \u00b6 pparg0: NullablePointer [ Zip ref] tag pparg1: String val pparg2: NullablePointer [ Zipsource ref] tag Returns \u00b6 I64 val obsolete_pzip_add_dir \u00b6 [Source] fun box obsolete_pzip_add_dir( pparg0: NullablePointer[Zip ref] tag, pparg1: String val) : I64 val Parameters \u00b6 pparg0: NullablePointer [ Zip ref] tag pparg1: String val Returns \u00b6 I64 val obsolete_pzip_get_file_comment \u00b6 [Source] fun box obsolete_pzip_get_file_comment( pparg0: NullablePointer[Zip ref] tag, pparg1: U64 val, pparg2: Pointer[I32 val] tag, pparg3: I32 val) : String val Parameters \u00b6 pparg0: NullablePointer [ Zip ref] tag pparg1: U64 val pparg2: Pointer [ I32 val] tag pparg3: I32 val Returns \u00b6 String val obsolete_pzip_get_num_files \u00b6 [Source] fun box obsolete_pzip_get_num_files( pparg0: NullablePointer[Zip ref] tag) : I32 val Parameters \u00b6 pparg0: NullablePointer [ Zip ref] tag Returns \u00b6 I32 val obsolete_pzip_rename \u00b6 [Source] fun box obsolete_pzip_rename( pparg0: NullablePointer[Zip ref] tag, pparg1: U64 val, pparg2: String val) : I32 val Parameters \u00b6 pparg0: NullablePointer [ Zip ref] tag pparg1: U64 val pparg2: String val Returns \u00b6 I32 val obsolete_pzip_replace \u00b6 [Source] fun box obsolete_pzip_replace( pparg0: NullablePointer[Zip ref] tag, pparg1: U64 val, pparg2: NullablePointer[Zipsource ref] tag) : I32 val Parameters \u00b6 pparg0: NullablePointer [ Zip ref] tag pparg1: U64 val pparg2: NullablePointer [ Zipsource ref] tag Returns \u00b6 I32 val obsolete_pzip_set_file_comment \u00b6 [Source] fun box obsolete_pzip_set_file_comment( pparg0: NullablePointer[Zip ref] tag, pparg1: U64 val, pparg2: String val, pparg3: I32 val) : I32 val Parameters \u00b6 pparg0: NullablePointer [ Zip ref] tag pparg1: U64 val pparg2: String val pparg3: I32 val Returns \u00b6 I32 val obsolete_pzip_error_get_sys_type \u00b6 [Source] fun box obsolete_pzip_error_get_sys_type( pparg0: I32 val) : I32 val Parameters \u00b6 pparg0: I32 val Returns \u00b6 I32 val obsolete_pzip_error_get \u00b6 [Source] fun box obsolete_pzip_error_get( pparg0: NullablePointer[Zip ref] tag, pparg1: Pointer[I32 val] tag, pparg2: Pointer[I32 val] tag) : None val Parameters \u00b6 pparg0: NullablePointer [ Zip ref] tag pparg1: Pointer [ I32 val] tag pparg2: Pointer [ I32 val] tag Returns \u00b6 None val obsolete_pzip_error_to_str \u00b6 [Source] fun box obsolete_pzip_error_to_str( pparg0: String val, pparg1: U64 val, pparg2: I32 val, pparg3: I32 val) : I32 val Parameters \u00b6 pparg0: String val pparg1: U64 val pparg2: I32 val pparg3: I32 val Returns \u00b6 I32 val obsolete_pzip_file_error_get \u00b6 [Source] fun box obsolete_pzip_file_error_get( pparg0: NullablePointer[Zipfile ref] tag, pparg1: Pointer[I32 val] tag, pparg2: Pointer[I32 val] tag) : None val Parameters \u00b6 pparg0: NullablePointer [ Zipfile ref] tag pparg1: Pointer [ I32 val] tag pparg2: Pointer [ I32 val] tag Returns \u00b6 None val eq \u00b6 [Source] fun box eq( that: ABLibZIP val) : Bool val Parameters \u00b6 that: ABLibZIP val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ABLibZIP val) : Bool val Parameters \u00b6 that: ABLibZIP val Returns \u00b6 Bool val","title":"primitive ABLibZIP"},{"location":"ponyzip-ABLibZIP/#ablibzip","text":"[Source] primitive val ABLibZIP","title":"ABLibZIP"},{"location":"ponyzip-ABLibZIP/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ABLibZIP/#create","text":"[Source] new val create() : ABLibZIP val^","title":"create"},{"location":"ponyzip-ABLibZIP/#returns","text":"ABLibZIP val^","title":"Returns"},{"location":"ponyzip-ABLibZIP/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ABLibZIP/#pzip_open","text":"[Source]","title":"pzip_open"},{"location":"ponyzip-ABLibZIP/#description","text":"The pzip_open() function opens the zip archive specified by path and returns a pointer to a struct zip, used to manipulate the archive. The flags are specified by or'ing the following values, or 0 for none of them. ZipCheckcons Perform additional stricter consistency checks on the archive, and error if they fail. ZipCreate Create the archive if it does not exist. ZipExcl Error if archive already exists. ZipTruncate If archive exists, ignore its current contents. In other words, handle it the same way as an empty archive. ZipRDOnly Open archive in read-only mode. If an error occurs and errorp is non-NULL, it will be set to the corresponding error code. The pzip_open_from_source() function opens a zip archive encapsulated by the zip_source zs using the provided flags. In case of error, the ZipError ze is filled in.","title":"DESCRIPTION"},{"location":"ponyzip-ABLibZIP/#return-values","text":"Upon successful completion pzip_open() and pzip_open_from_source() return a struct zip pointer. Otherwise, NULL is returned and pzip_open() sets *errorp to indicate the error, while zip_open_from(source) sets ze to indicate the error.","title":"RETURN VALUES"},{"location":"ponyzip-ABLibZIP/#errors","text":"The archive specified by path is opened unless: ZipERExists The file specified by path exists and ZIP_EXCL is set. ZipERIncons Inconsistencies were found in the file specified by path. This error is often caused by specifying ZIP_CHECKCONS but can also happen without it. ZipERInval The path argument is NULL. ZipERMemory Required memory could not be allocated. ZipERNoent The file specified by path does not exist and ZIP_CREATE is not set. ZipERNozip The file specified by path is not a zip archive. ZipEROpen The file specified by path could not be opened. ZipERRead A read error occurred; see errno for details. ZipERSeek The file specified by path does not allow seeks. fun box pzip_open( path: String val, flags: U32 val, errorp: Pointer[I32 val] tag) : NullablePointer[Zip ref] ref","title":"ERRORS"},{"location":"ponyzip-ABLibZIP/#parameters","text":"path: String val flags: U32 val errorp: Pointer [ I32 val] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_1","text":"NullablePointer [ Zip ref] ref","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_fdopen","text":"[Source] fun box pzip_fdopen( filedescriptor: I32 val, flags: I32 val, errorp: Pointer[I32 val] tag) : NullablePointer[Zip ref] ref","title":"pzip_fdopen"},{"location":"ponyzip-ABLibZIP/#parameters_1","text":"filedescriptor: I32 val flags: I32 val errorp: Pointer [ I32 val] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_2","text":"NullablePointer [ Zip ref] ref","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_open_from_source","text":"[Source] fun box pzip_open_from_source( zipsource: NullablePointer[Zipsource ref] tag, flags: U32 val, errorp: Pointer[I32 val] tag) : NullablePointer[Zip ref] ref","title":"pzip_open_from_source"},{"location":"ponyzip-ABLibZIP/#parameters_2","text":"zipsource: NullablePointer [ Zipsource ref] tag flags: U32 val errorp: Pointer [ I32 val] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_3","text":"NullablePointer [ Zip ref] ref","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_name_locate","text":"[Source] fun box pzip_name_locate( archive: NullablePointer[Zip ref] tag, filename: String val, flags: U32 val) : I64 val","title":"pzip_name_locate"},{"location":"ponyzip-ABLibZIP/#parameters_3","text":"archive: NullablePointer [ Zip ref] tag filename: String val flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_4","text":"I64 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_stat","text":"[Source] fun box pzip_stat( archive: NullablePointer[Zip ref] tag, filename: String val, flags: U32 val, zipstat: NullablePointer[Zipstat ref] tag) : I32 val","title":"pzip_stat"},{"location":"ponyzip-ABLibZIP/#parameters_4","text":"archive: NullablePointer [ Zip ref] tag filename: String val flags: U32 val zipstat: NullablePointer [ Zipstat ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_5","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_stat_index","text":"[Source] fun box pzip_stat_index( archive: NullablePointer[Zip ref] tag, index: U64 val, flags: U32 val, zipstat: NullablePointer[Zipstat ref] tag) : I32 val","title":"pzip_stat_index"},{"location":"ponyzip-ABLibZIP/#parameters_5","text":"archive: NullablePointer [ Zip ref] tag index: U64 val flags: U32 val zipstat: NullablePointer [ Zipstat ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_6","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_stat_init","text":"[Source] fun box pzip_stat_init( zipstat: NullablePointer[Zipstat ref] tag) : None val","title":"pzip_stat_init"},{"location":"ponyzip-ABLibZIP/#parameters_6","text":"zipstat: NullablePointer [ Zipstat ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_7","text":"None val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_fopen","text":"[Source] fun box pzip_fopen( archive: NullablePointer[Zip ref] tag, filename: String val, flags: U32 val) : NullablePointer[Zipfile ref] ref","title":"pzip_fopen"},{"location":"ponyzip-ABLibZIP/#parameters_7","text":"archive: NullablePointer [ Zip ref] tag filename: String val flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_8","text":"NullablePointer [ Zipfile ref] ref","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_fopen_encrypted","text":"[Source] fun box pzip_fopen_encrypted( archive: NullablePointer[Zip ref] tag, filename: String val, flags: U32 val, password: String val) : NullablePointer[Zipfile ref] ref","title":"pzip_fopen_encrypted"},{"location":"ponyzip-ABLibZIP/#parameters_8","text":"archive: NullablePointer [ Zip ref] tag filename: String val flags: U32 val password: String val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_9","text":"NullablePointer [ Zipfile ref] ref","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_fopen_index","text":"[Source] fun box pzip_fopen_index( archive: NullablePointer[Zip ref] tag, index: U64 val, flags: U32 val) : NullablePointer[Zipfile ref] ref","title":"pzip_fopen_index"},{"location":"ponyzip-ABLibZIP/#parameters_9","text":"archive: NullablePointer [ Zip ref] tag index: U64 val flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_10","text":"NullablePointer [ Zipfile ref] ref","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_fopen_index_encrypted","text":"[Source] fun box pzip_fopen_index_encrypted( archive: NullablePointer[Zip ref] tag, index: U64 val, flags: U32 val, password: String val) : NullablePointer[Zipfile ref] ref","title":"pzip_fopen_index_encrypted"},{"location":"ponyzip-ABLibZIP/#parameters_10","text":"archive: NullablePointer [ Zip ref] tag index: U64 val flags: U32 val password: String val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_11","text":"NullablePointer [ Zipfile ref] ref","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_fread","text":"[Source] fun box pzip_fread( file: NullablePointer[Zipfile ref] tag, buffer: Pointer[U8 val] tag, length: U64 val) : I64 val","title":"pzip_fread"},{"location":"ponyzip-ABLibZIP/#parameters_11","text":"file: NullablePointer [ Zipfile ref] tag buffer: Pointer [ U8 val] tag length: U64 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_12","text":"I64 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_fseek","text":"[Source] fun box pzip_fseek( file: NullablePointer[Zipfile ref] tag, offset: I64 val, whence: I32 val) : I8 val","title":"pzip_fseek"},{"location":"ponyzip-ABLibZIP/#parameters_12","text":"file: NullablePointer [ Zipfile ref] tag offset: I64 val whence: I32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_13","text":"I8 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_ftell","text":"[Source] fun box pzip_ftell( file: NullablePointer[Zipfile ref] tag) : I64 val","title":"pzip_ftell"},{"location":"ponyzip-ABLibZIP/#parameters_13","text":"file: NullablePointer [ Zipfile ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_14","text":"I64 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_fclose","text":"[Source] fun box pzip_fclose( file: NullablePointer[Zipfile ref] tag) : I32 val","title":"pzip_fclose"},{"location":"ponyzip-ABLibZIP/#parameters_14","text":"file: NullablePointer [ Zipfile ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_15","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_extra_fields_count","text":"[Source] fun box pzip_file_extra_fields_count( archive: NullablePointer[Zip ref] tag, index: U64 val, flags: U32 val) : I16 val","title":"pzip_file_extra_fields_count"},{"location":"ponyzip-ABLibZIP/#parameters_15","text":"archive: NullablePointer [ Zip ref] tag index: U64 val flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_16","text":"I16 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_extra_fields_count_by_id","text":"[Source] fun box pzip_file_extra_fields_count_by_id( archive: NullablePointer[Zip ref] tag, index: U64 val, extra_field_id: U16 val, flags: U32 val) : I16 val","title":"pzip_file_extra_fields_count_by_id"},{"location":"ponyzip-ABLibZIP/#parameters_16","text":"archive: NullablePointer [ Zip ref] tag index: U64 val extra_field_id: U16 val flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_17","text":"I16 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_extra_field_get","text":"[Source] fun box pzip_file_extra_field_get( archive: NullablePointer[Zip ref] tag, index: U64 val, extra_field_index: U16 val, idp: Pointer[U16 val] tag, lenp: Pointer[U16 val] tag, flags: U32 val) : String val","title":"pzip_file_extra_field_get"},{"location":"ponyzip-ABLibZIP/#parameters_17","text":"archive: NullablePointer [ Zip ref] tag index: U64 val extra_field_index: U16 val idp: Pointer [ U16 val] tag lenp: Pointer [ U16 val] tag flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_18","text":"String val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_extra_field_get_by_id","text":"[Source] fun box pzip_file_extra_field_get_by_id( archive: NullablePointer[Zip ref] tag, index: U64 val, extra_field_id: U16 val, extra_field_index: U16 val, lenp: Pointer[U16 val] tag, flags: U32 val) : String val","title":"pzip_file_extra_field_get_by_id"},{"location":"ponyzip-ABLibZIP/#parameters_18","text":"archive: NullablePointer [ Zip ref] tag index: U64 val extra_field_id: U16 val extra_field_index: U16 val lenp: Pointer [ U16 val] tag flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_19","text":"String val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_get_comment","text":"[Source] fun box pzip_file_get_comment( archive: NullablePointer[Zip ref] tag, index: U64 val, lenp: Pointer[U32 val] tag, flags: U32 val) : String val","title":"pzip_file_get_comment"},{"location":"ponyzip-ABLibZIP/#parameters_19","text":"archive: NullablePointer [ Zip ref] tag index: U64 val lenp: Pointer [ U32 val] tag flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_20","text":"String val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_get_external_attributes","text":"[Source] fun box pzip_file_get_external_attributes( archive: NullablePointer[Zip ref] tag, index: U64 val, flags: U32 val, opsys: String val, attributes: Pointer[U32 val] tag) : I32 val","title":"pzip_file_get_external_attributes"},{"location":"ponyzip-ABLibZIP/#parameters_20","text":"archive: NullablePointer [ Zip ref] tag index: U64 val flags: U32 val opsys: String val attributes: Pointer [ U32 val] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_21","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_get_archive_comment","text":"[Source] fun box pzip_get_archive_comment( archive: NullablePointer[Zip ref] tag, lenp: Pointer[I32 val] tag, flags: U32 val) : String val","title":"pzip_get_archive_comment"},{"location":"ponyzip-ABLibZIP/#parameters_21","text":"archive: NullablePointer [ Zip ref] tag lenp: Pointer [ I32 val] tag flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_22","text":"String val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_get_archive_flag","text":"[Source] fun box pzip_get_archive_flag( archive: NullablePointer[Zip ref] tag, flag: U32 val, flags: U32 val) : I32 val","title":"pzip_get_archive_flag"},{"location":"ponyzip-ABLibZIP/#parameters_22","text":"archive: NullablePointer [ Zip ref] tag flag: U32 val flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_23","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_get_name","text":"[Source] fun box pzip_get_name( archive: NullablePointer[Zip ref] tag, index: U64 val, flags: U32 val) : String val","title":"pzip_get_name"},{"location":"ponyzip-ABLibZIP/#parameters_23","text":"archive: NullablePointer [ Zip ref] tag index: U64 val flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_24","text":"String val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_get_num_entries","text":"[Source] fun box pzip_get_num_entries( archive: NullablePointer[Zip ref] tag, flags: U32 val) : I64 val","title":"pzip_get_num_entries"},{"location":"ponyzip-ABLibZIP/#parameters_24","text":"archive: NullablePointer [ Zip ref] tag flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_25","text":"I64 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_get_file_attributes","text":"[Source] fun box pzip_source_get_file_attributes( archive: NullablePointer[Zipsource ref] tag, attributes: NullablePointer[Zipfileattributes ref] tag) : I32 val","title":"pzip_source_get_file_attributes"},{"location":"ponyzip-ABLibZIP/#parameters_25","text":"archive: NullablePointer [ Zipsource ref] tag attributes: NullablePointer [ Zipfileattributes ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_26","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_close","text":"[Source] fun box pzip_close( archive: NullablePointer[Zip ref] tag) : I32 val","title":"pzip_close"},{"location":"ponyzip-ABLibZIP/#parameters_26","text":"archive: NullablePointer [ Zip ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_27","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_discard","text":"[Source] fun box pzip_discard( archive: NullablePointer[Zip ref] tag) : None val","title":"pzip_discard"},{"location":"ponyzip-ABLibZIP/#parameters_27","text":"archive: NullablePointer [ Zip ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_28","text":"None val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_delete","text":"[Source] fun box pzip_delete( archive: NullablePointer[Zip ref] tag, index: U64 val) : I32 val","title":"pzip_delete"},{"location":"ponyzip-ABLibZIP/#parameters_28","text":"archive: NullablePointer [ Zip ref] tag index: U64 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_29","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_dir_add","text":"[Source] fun box pzip_dir_add( archive: NullablePointer[Zip ref] tag, filename: String val, flags: U32 val) : I64 val","title":"pzip_dir_add"},{"location":"ponyzip-ABLibZIP/#parameters_29","text":"archive: NullablePointer [ Zip ref] tag filename: String val flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_30","text":"I64 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_add","text":"[Source] fun box pzip_file_add( archive: NullablePointer[Zip ref] tag, filename: String val, zipsource: NullablePointer[Zipsource ref] tag, flags: U32 val) : I64 val","title":"pzip_file_add"},{"location":"ponyzip-ABLibZIP/#parameters_30","text":"archive: NullablePointer [ Zip ref] tag filename: String val zipsource: NullablePointer [ Zipsource ref] tag flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_31","text":"I64 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_replace","text":"[Source] fun box pzip_file_replace( archive: NullablePointer[Zip ref] tag, index: U64 val, zipsource: NullablePointer[Zipsource ref] tag, flags: U32 val) : I32 val","title":"pzip_file_replace"},{"location":"ponyzip-ABLibZIP/#parameters_31","text":"archive: NullablePointer [ Zip ref] tag index: U64 val zipsource: NullablePointer [ Zipsource ref] tag flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_32","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_attributes_init","text":"[Source] fun box pzip_file_attributes_init( attributes: NullablePointer[Zipfileattributes ref] tag) : None val","title":"pzip_file_attributes_init"},{"location":"ponyzip-ABLibZIP/#parameters_32","text":"attributes: NullablePointer [ Zipfileattributes ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_33","text":"None val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_extra_field_delete","text":"[Source] fun box pzip_file_extra_field_delete( archive: NullablePointer[Zip ref] tag, index: U64 val, extra_field_index: U16 val, flags: U32 val) : I32 val","title":"pzip_file_extra_field_delete"},{"location":"ponyzip-ABLibZIP/#parameters_33","text":"archive: NullablePointer [ Zip ref] tag index: U64 val extra_field_index: U16 val flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_34","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_extra_field_delete_by_id","text":"[Source] fun box pzip_file_extra_field_delete_by_id( archive: NullablePointer[Zip ref] tag, index: U64 val, extra_field_id: U16 val, extra_field_index: U16 val, flags: U32 val) : I32 val","title":"pzip_file_extra_field_delete_by_id"},{"location":"ponyzip-ABLibZIP/#parameters_34","text":"archive: NullablePointer [ Zip ref] tag index: U64 val extra_field_id: U16 val extra_field_index: U16 val flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_35","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_extra_field_set","text":"[Source] fun box pzip_file_extra_field_set( archive: NullablePointer[Zip ref] tag, index: U64 val, extra_field_id: U16 val, extra_field_index: U16 val, extra_field_data: String val, len: U16 val, flags: U32 val) : I32 val","title":"pzip_file_extra_field_set"},{"location":"ponyzip-ABLibZIP/#parameters_35","text":"archive: NullablePointer [ Zip ref] tag index: U64 val extra_field_id: U16 val extra_field_index: U16 val extra_field_data: String val len: U16 val flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_36","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_rename","text":"[Source] fun box pzip_file_rename( archive: NullablePointer[Zip ref] tag, index: U64 val, filename: String val, flags: U32 val) : I32 val","title":"pzip_file_rename"},{"location":"ponyzip-ABLibZIP/#parameters_36","text":"archive: NullablePointer [ Zip ref] tag index: U64 val filename: String val flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_37","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_set_comment","text":"[Source] fun box pzip_file_set_comment( archive: NullablePointer[Zip ref] tag, index: U64 val, comment: String val, length: U16 val, flags: U32 val) : I32 val","title":"pzip_file_set_comment"},{"location":"ponyzip-ABLibZIP/#parameters_37","text":"archive: NullablePointer [ Zip ref] tag index: U64 val comment: String val length: U16 val flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_38","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_set_dostime","text":"[Source] fun box pzip_file_set_dostime( archive: NullablePointer[Zip ref] tag, index: U64 val, dostime: U16 val, dosdate: U16 val, flags: U32 val) : I32 val","title":"pzip_file_set_dostime"},{"location":"ponyzip-ABLibZIP/#parameters_38","text":"archive: NullablePointer [ Zip ref] tag index: U64 val dostime: U16 val dosdate: U16 val flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_39","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_set_mtime","text":"[Source] fun box pzip_file_set_mtime( archive: NullablePointer[Zip ref] tag, index: U64 val, mtime: I64 val, flags: U32 val) : I32 val","title":"pzip_file_set_mtime"},{"location":"ponyzip-ABLibZIP/#parameters_39","text":"archive: NullablePointer [ Zip ref] tag index: U64 val mtime: I64 val flags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_40","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_set_encryption","text":"[Source] fun box pzip_file_set_encryption( archive: NullablePointer[Zip ref] tag, index: U64 val, method: U16 val, password: String val) : I32 val","title":"pzip_file_set_encryption"},{"location":"ponyzip-ABLibZIP/#parameters_40","text":"archive: NullablePointer [ Zip ref] tag index: U64 val method: U16 val password: String val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_41","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_set_external_attributes","text":"[Source] fun box pzip_file_set_external_attributes( archive: NullablePointer[Zip ref] tag, index: U64 val, flags: U32 val, opsys: U8 val, attributes: U32 val) : I32 val","title":"pzip_file_set_external_attributes"},{"location":"ponyzip-ABLibZIP/#parameters_41","text":"archive: NullablePointer [ Zip ref] tag index: U64 val flags: U32 val opsys: U8 val attributes: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_42","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_set_archive_comment","text":"[Source] fun box pzip_set_archive_comment( archive: NullablePointer[Zip ref] tag, comment: String val, length: U16 val) : I32 val","title":"pzip_set_archive_comment"},{"location":"ponyzip-ABLibZIP/#parameters_42","text":"archive: NullablePointer [ Zip ref] tag comment: String val length: U16 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_43","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_set_archive_flag","text":"[Source] fun box pzip_set_archive_flag( archive: NullablePointer[Zip ref] tag, flags: U32 val, value: I32 val) : I32 val","title":"pzip_set_archive_flag"},{"location":"ponyzip-ABLibZIP/#parameters_43","text":"archive: NullablePointer [ Zip ref] tag flags: U32 val value: I32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_44","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_set_default_password","text":"[Source] fun box pzip_set_default_password( archive: NullablePointer[Zip ref] tag, password: String val) : I32 val","title":"pzip_set_default_password"},{"location":"ponyzip-ABLibZIP/#parameters_44","text":"archive: NullablePointer [ Zip ref] tag password: String val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_45","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_set_file_compression","text":"[Source] fun box pzip_set_file_compression( archive: NullablePointer[Zip ref] tag, index: U64 val, comp: I32 val, compflags: U32 val) : I32 val","title":"pzip_set_file_compression"},{"location":"ponyzip-ABLibZIP/#parameters_45","text":"archive: NullablePointer [ Zip ref] tag index: U64 val comp: I32 val compflags: U32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_46","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_begin_write","text":"[Source] fun box pzip_source_begin_write( source: NullablePointer[Zipsource ref] tag) : I32 val","title":"pzip_source_begin_write"},{"location":"ponyzip-ABLibZIP/#parameters_46","text":"source: NullablePointer [ Zipsource ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_47","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_begin_write_cloning","text":"[Source] fun box pzip_source_begin_write_cloning( source: NullablePointer[Zipsource ref] tag, offset: U64 val) : I32 val","title":"pzip_source_begin_write_cloning"},{"location":"ponyzip-ABLibZIP/#parameters_47","text":"source: NullablePointer [ Zipsource ref] tag offset: U64 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_48","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_buffer","text":"[Source] fun box pzip_source_buffer( archive: NullablePointer[Zip ref] tag, data: Pointer[U8 val] tag, length: U64 val, free: I32 val) : NullablePointer[Zipsource ref] ref","title":"pzip_source_buffer"},{"location":"ponyzip-ABLibZIP/#parameters_48","text":"archive: NullablePointer [ Zip ref] tag data: Pointer [ U8 val] tag length: U64 val free: I32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_49","text":"NullablePointer [ Zipsource ref] ref","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_buffer_create","text":"[Source] fun box pzip_source_buffer_create( data: Pointer[U8 val] tag, length: U64 val, free: I32 val, errorp: NullablePointer[Ziperror ref] tag) : NullablePointer[Zipsource ref] ref","title":"pzip_source_buffer_create"},{"location":"ponyzip-ABLibZIP/#parameters_49","text":"data: Pointer [ U8 val] tag length: U64 val free: I32 val errorp: NullablePointer [ Ziperror ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_50","text":"NullablePointer [ Zipsource ref] ref","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_buffer_fragment","text":"[Source] fun box pzip_source_buffer_fragment( archive: NullablePointer[Zip ref] tag, fragment: NullablePointer[Zipbufferfragment ref] tag, nfrags: U64 val, free: I32 val) : NullablePointer[Zipsource ref] ref","title":"pzip_source_buffer_fragment"},{"location":"ponyzip-ABLibZIP/#parameters_50","text":"archive: NullablePointer [ Zip ref] tag fragment: NullablePointer [ Zipbufferfragment ref] tag nfrags: U64 val free: I32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_51","text":"NullablePointer [ Zipsource ref] ref","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_buffer_fragment_create","text":"[Source] fun box pzip_source_buffer_fragment_create( fragment: NullablePointer[Zipbufferfragment ref] tag, nfrags: U64 val, free: I32 val, errorp: NullablePointer[Ziperror ref] tag) : NullablePointer[Zipsource ref] ref","title":"pzip_source_buffer_fragment_create"},{"location":"ponyzip-ABLibZIP/#parameters_51","text":"fragment: NullablePointer [ Zipbufferfragment ref] tag nfrags: U64 val free: I32 val errorp: NullablePointer [ Ziperror ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_52","text":"NullablePointer [ Zipsource ref] ref","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_close","text":"[Source] fun box pzip_source_close( source: NullablePointer[Zipsource ref] tag) : I32 val","title":"pzip_source_close"},{"location":"ponyzip-ABLibZIP/#parameters_52","text":"source: NullablePointer [ Zipsource ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_53","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_commit_write","text":"[Source] fun box pzip_source_commit_write( source: NullablePointer[Zipsource ref] tag) : I32 val","title":"pzip_source_commit_write"},{"location":"ponyzip-ABLibZIP/#parameters_53","text":"source: NullablePointer [ Zipsource ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_54","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_error","text":"[Source] fun box pzip_source_error( source: NullablePointer[Zipsource ref] tag) : NullablePointer[Ziperror ref] ref","title":"pzip_source_error"},{"location":"ponyzip-ABLibZIP/#parameters_54","text":"source: NullablePointer [ Zipsource ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_55","text":"NullablePointer [ Ziperror ref] ref","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_file","text":"[Source] fun box pzip_source_file( zip: NullablePointer[Zip ref] tag, filename: String val, start: U64 val, length: I64 val) : NullablePointer[Zipsource ref] ref","title":"pzip_source_file"},{"location":"ponyzip-ABLibZIP/#parameters_55","text":"zip: NullablePointer [ Zip ref] tag filename: String val start: U64 val length: I64 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_56","text":"NullablePointer [ Zipsource ref] ref","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_file_create","text":"[Source] fun box pzip_source_file_create( filename: String val, start: U64 val, length: I64 val, errorp: NullablePointer[Ziperror ref] tag) : NullablePointer[Zipsource ref] ref","title":"pzip_source_file_create"},{"location":"ponyzip-ABLibZIP/#parameters_56","text":"filename: String val start: U64 val length: I64 val errorp: NullablePointer [ Ziperror ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_57","text":"NullablePointer [ Zipsource ref] ref","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_free","text":"[Source] fun box pzip_source_free( source: NullablePointer[Zipsource ref] tag) : None val","title":"pzip_source_free"},{"location":"ponyzip-ABLibZIP/#parameters_57","text":"source: NullablePointer [ Zipsource ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_58","text":"None val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_keep","text":"[Source] fun box pzip_source_keep( source: NullablePointer[Zipsource ref] tag) : None val","title":"pzip_source_keep"},{"location":"ponyzip-ABLibZIP/#parameters_58","text":"source: NullablePointer [ Zipsource ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_59","text":"None val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_open","text":"[Source] fun box pzip_source_open( source: NullablePointer[Zipsource ref] tag) : I32 val","title":"pzip_source_open"},{"location":"ponyzip-ABLibZIP/#parameters_59","text":"source: NullablePointer [ Zipsource ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_60","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_read","text":"[Source] fun box pzip_source_read( source: NullablePointer[Zipsource ref] tag, data: Pointer[U8 val] tag, length: U64 val) : I64 val","title":"pzip_source_read"},{"location":"ponyzip-ABLibZIP/#parameters_60","text":"source: NullablePointer [ Zipsource ref] tag data: Pointer [ U8 val] tag length: U64 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_61","text":"I64 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_rollback_write","text":"[Source] fun box pzip_source_rollback_write( source: NullablePointer[Zipsource ref] tag) : None val","title":"pzip_source_rollback_write"},{"location":"ponyzip-ABLibZIP/#parameters_61","text":"source: NullablePointer [ Zipsource ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_62","text":"None val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_seek","text":"[Source] fun box pzip_source_seek( source: NullablePointer[Zipsource ref] tag, offset: I64 val, whence: I32 val) : I32 val","title":"pzip_source_seek"},{"location":"ponyzip-ABLibZIP/#parameters_62","text":"source: NullablePointer [ Zipsource ref] tag offset: I64 val whence: I32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_63","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_seek_compute_offset","text":"[Source] fun box pzip_source_seek_compute_offset( offset: U64 val, length: U64 val, data: Pointer[U8 val] tag, data_length: U64 val, errorp: NullablePointer[Ziperror ref] tag) : I64 val","title":"pzip_source_seek_compute_offset"},{"location":"ponyzip-ABLibZIP/#parameters_63","text":"offset: U64 val length: U64 val data: Pointer [ U8 val] tag data_length: U64 val errorp: NullablePointer [ Ziperror ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_64","text":"I64 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_seek_write","text":"[Source] fun box pzip_source_seek_write( source: NullablePointer[Zipsource ref] tag, offset: I64 val, whence: I32 val) : I32 val","title":"pzip_source_seek_write"},{"location":"ponyzip-ABLibZIP/#parameters_64","text":"source: NullablePointer [ Zipsource ref] tag offset: I64 val whence: I32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_65","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_stat","text":"[Source] fun box pzip_source_stat( source: NullablePointer[Zipsource ref] tag, zipstat: NullablePointer[Zipstat ref] tag) : I32 val","title":"pzip_source_stat"},{"location":"ponyzip-ABLibZIP/#parameters_65","text":"source: NullablePointer [ Zipsource ref] tag zipstat: NullablePointer [ Zipstat ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_66","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_tell","text":"[Source] fun box pzip_source_tell( source: NullablePointer[Zipsource ref] tag) : I64 val","title":"pzip_source_tell"},{"location":"ponyzip-ABLibZIP/#parameters_66","text":"source: NullablePointer [ Zipsource ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_67","text":"I64 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_tell_write","text":"[Source] fun box pzip_source_tell_write( source: NullablePointer[Zipsource ref] tag) : I64 val","title":"pzip_source_tell_write"},{"location":"ponyzip-ABLibZIP/#parameters_67","text":"source: NullablePointer [ Zipsource ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_68","text":"I64 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_write","text":"[Source] fun box pzip_source_write( source: NullablePointer[Zipsource ref] tag, data: Pointer[U8 val] tag, length: U64 val) : I64 val","title":"pzip_source_write"},{"location":"ponyzip-ABLibZIP/#parameters_68","text":"source: NullablePointer [ Zipsource ref] tag data: Pointer [ U8 val] tag length: U64 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_69","text":"I64 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_zip","text":"[Source] fun box pzip_source_zip( archive: NullablePointer[Zip ref] tag, sourcearchive: NullablePointer[Zip ref] tag, srcindex: U64 val, flags: U32 val, start: U64 val, length: I64 val) : NullablePointer[Zipsource ref] ref","title":"pzip_source_zip"},{"location":"ponyzip-ABLibZIP/#parameters_69","text":"archive: NullablePointer [ Zip ref] tag sourcearchive: NullablePointer [ Zip ref] tag srcindex: U64 val flags: U32 val start: U64 val length: I64 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_70","text":"NullablePointer [ Zipsource ref] ref","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_unchange","text":"[Source] fun box pzip_unchange( archive: NullablePointer[Zip ref] tag, index: U64 val) : I32 val","title":"pzip_unchange"},{"location":"ponyzip-ABLibZIP/#parameters_70","text":"archive: NullablePointer [ Zip ref] tag index: U64 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_71","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_unchange_all","text":"[Source] fun box pzip_unchange_all( archive: NullablePointer[Zip ref] tag) : I32 val","title":"pzip_unchange_all"},{"location":"ponyzip-ABLibZIP/#parameters_71","text":"archive: NullablePointer [ Zip ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_72","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_unchange_archive","text":"[Source] fun box pzip_unchange_archive( archive: NullablePointer[Zip ref] tag) : I32 val","title":"pzip_unchange_archive"},{"location":"ponyzip-ABLibZIP/#parameters_72","text":"archive: NullablePointer [ Zip ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_73","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_compression_method_supported","text":"[Source] fun box pzip_compression_method_supported( pmethod: I32 val, pcompress: I32 val) : I32 val","title":"pzip_compression_method_supported"},{"location":"ponyzip-ABLibZIP/#parameters_73","text":"pmethod: I32 val pcompress: I32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_74","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_encryption_method_supported","text":"[Source] fun box pzip_encryption_method_supported( pmethod: U16 val, pencode: I32 val) : I32 val","title":"pzip_encryption_method_supported"},{"location":"ponyzip-ABLibZIP/#parameters_74","text":"pmethod: U16 val pencode: I32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_75","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_get_error","text":"[Source] fun box pzip_get_error( archive: NullablePointer[Zip ref] tag) : NullablePointer[Ziperror ref] ref","title":"pzip_get_error"},{"location":"ponyzip-ABLibZIP/#parameters_75","text":"archive: NullablePointer [ Zip ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_76","text":"NullablePointer [ Ziperror ref] ref","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_error_clear","text":"[Source] fun box pzip_error_clear( archive: NullablePointer[Zip ref] tag) : None val","title":"pzip_error_clear"},{"location":"ponyzip-ABLibZIP/#parameters_76","text":"archive: NullablePointer [ Zip ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_77","text":"None val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_error_code_zip","text":"[Source] fun box pzip_error_code_zip( perror: NullablePointer[Ziperror ref] tag) : I32 val","title":"pzip_error_code_zip"},{"location":"ponyzip-ABLibZIP/#parameters_77","text":"perror: NullablePointer [ Ziperror ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_78","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_error_code_system","text":"[Source] fun box pzip_error_code_system( perror: NullablePointer[Ziperror ref] tag) : I32 val","title":"pzip_error_code_system"},{"location":"ponyzip-ABLibZIP/#parameters_78","text":"perror: NullablePointer [ Ziperror ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_79","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_error_fini","text":"[Source] fun box pzip_error_fini( perror: NullablePointer[Ziperror ref] tag) : None val","title":"pzip_error_fini"},{"location":"ponyzip-ABLibZIP/#parameters_79","text":"perror: NullablePointer [ Ziperror ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_80","text":"None val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_error_init","text":"[Source] fun box pzip_error_init( perror: NullablePointer[Ziperror ref] tag) : None val","title":"pzip_error_init"},{"location":"ponyzip-ABLibZIP/#parameters_80","text":"perror: NullablePointer [ Ziperror ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_81","text":"None val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_error_init_with_code","text":"[Source] fun box pzip_error_init_with_code( perror: NullablePointer[Ziperror ref] tag, errorno: I32 val) : None val","title":"pzip_error_init_with_code"},{"location":"ponyzip-ABLibZIP/#parameters_81","text":"perror: NullablePointer [ Ziperror ref] tag errorno: I32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_82","text":"None val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_error_set","text":"[Source] fun box pzip_error_set( errorp: NullablePointer[Ziperror ref] tag, le: I32 val, se: I32 val) : None val","title":"pzip_error_set"},{"location":"ponyzip-ABLibZIP/#parameters_82","text":"errorp: NullablePointer [ Ziperror ref] tag le: I32 val se: I32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_83","text":"None val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_error_strerror","text":"[Source] fun box pzip_error_strerror( errorp: NullablePointer[Ziperror ref] tag) : String val","title":"pzip_error_strerror"},{"location":"ponyzip-ABLibZIP/#parameters_83","text":"errorp: NullablePointer [ Ziperror ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_84","text":"String val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_error_system_type","text":"[Source] fun box pzip_error_system_type( errorp: NullablePointer[Ziperror ref] tag) : I32 val","title":"pzip_error_system_type"},{"location":"ponyzip-ABLibZIP/#parameters_84","text":"errorp: NullablePointer [ Ziperror ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_85","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_error_to_data","text":"[Source] fun box pzip_error_to_data( errorp: NullablePointer[Ziperror ref] tag, data: Pointer[U8 val] tag, length: U64 val) : I64 val","title":"pzip_error_to_data"},{"location":"ponyzip-ABLibZIP/#parameters_85","text":"errorp: NullablePointer [ Ziperror ref] tag data: Pointer [ U8 val] tag length: U64 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_86","text":"I64 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_error_clear","text":"[Source] fun box pzip_file_error_clear( file: NullablePointer[Zipfile ref] tag) : None val","title":"pzip_file_error_clear"},{"location":"ponyzip-ABLibZIP/#parameters_86","text":"file: NullablePointer [ Zipfile ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_87","text":"None val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_get_error","text":"[Source] fun box pzip_file_get_error( file: NullablePointer[Zipfile ref] tag) : NullablePointer[Ziperror ref] ref","title":"pzip_file_get_error"},{"location":"ponyzip-ABLibZIP/#parameters_87","text":"file: NullablePointer [ Zipfile ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_88","text":"NullablePointer [ Ziperror ref] ref","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_file_strerror","text":"[Source] fun box pzip_file_strerror( file: NullablePointer[Zipfile ref] tag) : String val","title":"pzip_file_strerror"},{"location":"ponyzip-ABLibZIP/#parameters_88","text":"file: NullablePointer [ Zipfile ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_89","text":"String val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_strerror","text":"[Source] fun box pzip_strerror( archive: NullablePointer[Zip ref] tag) : String val","title":"pzip_strerror"},{"location":"ponyzip-ABLibZIP/#parameters_89","text":"archive: NullablePointer [ Zip ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_90","text":"String val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_libzip_version","text":"[Source] fun box pzip_libzip_version() : String val","title":"pzip_libzip_version"},{"location":"ponyzip-ABLibZIP/#returns_91","text":"String val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#pzip_source_is_deleted","text":"[Source] fun box pzip_source_is_deleted( source: NullablePointer[Zipsource ref] tag) : I32 val","title":"pzip_source_is_deleted"},{"location":"ponyzip-ABLibZIP/#parameters_90","text":"source: NullablePointer [ Zipsource ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_92","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#obsolete_pzip_add","text":"[Source] fun box obsolete_pzip_add( pparg0: NullablePointer[Zip ref] tag, pparg1: String val, pparg2: NullablePointer[Zipsource ref] tag) : I64 val","title":"obsolete_pzip_add"},{"location":"ponyzip-ABLibZIP/#parameters_91","text":"pparg0: NullablePointer [ Zip ref] tag pparg1: String val pparg2: NullablePointer [ Zipsource ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_93","text":"I64 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#obsolete_pzip_add_dir","text":"[Source] fun box obsolete_pzip_add_dir( pparg0: NullablePointer[Zip ref] tag, pparg1: String val) : I64 val","title":"obsolete_pzip_add_dir"},{"location":"ponyzip-ABLibZIP/#parameters_92","text":"pparg0: NullablePointer [ Zip ref] tag pparg1: String val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_94","text":"I64 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#obsolete_pzip_get_file_comment","text":"[Source] fun box obsolete_pzip_get_file_comment( pparg0: NullablePointer[Zip ref] tag, pparg1: U64 val, pparg2: Pointer[I32 val] tag, pparg3: I32 val) : String val","title":"obsolete_pzip_get_file_comment"},{"location":"ponyzip-ABLibZIP/#parameters_93","text":"pparg0: NullablePointer [ Zip ref] tag pparg1: U64 val pparg2: Pointer [ I32 val] tag pparg3: I32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_95","text":"String val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#obsolete_pzip_get_num_files","text":"[Source] fun box obsolete_pzip_get_num_files( pparg0: NullablePointer[Zip ref] tag) : I32 val","title":"obsolete_pzip_get_num_files"},{"location":"ponyzip-ABLibZIP/#parameters_94","text":"pparg0: NullablePointer [ Zip ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_96","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#obsolete_pzip_rename","text":"[Source] fun box obsolete_pzip_rename( pparg0: NullablePointer[Zip ref] tag, pparg1: U64 val, pparg2: String val) : I32 val","title":"obsolete_pzip_rename"},{"location":"ponyzip-ABLibZIP/#parameters_95","text":"pparg0: NullablePointer [ Zip ref] tag pparg1: U64 val pparg2: String val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_97","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#obsolete_pzip_replace","text":"[Source] fun box obsolete_pzip_replace( pparg0: NullablePointer[Zip ref] tag, pparg1: U64 val, pparg2: NullablePointer[Zipsource ref] tag) : I32 val","title":"obsolete_pzip_replace"},{"location":"ponyzip-ABLibZIP/#parameters_96","text":"pparg0: NullablePointer [ Zip ref] tag pparg1: U64 val pparg2: NullablePointer [ Zipsource ref] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_98","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#obsolete_pzip_set_file_comment","text":"[Source] fun box obsolete_pzip_set_file_comment( pparg0: NullablePointer[Zip ref] tag, pparg1: U64 val, pparg2: String val, pparg3: I32 val) : I32 val","title":"obsolete_pzip_set_file_comment"},{"location":"ponyzip-ABLibZIP/#parameters_97","text":"pparg0: NullablePointer [ Zip ref] tag pparg1: U64 val pparg2: String val pparg3: I32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_99","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#obsolete_pzip_error_get_sys_type","text":"[Source] fun box obsolete_pzip_error_get_sys_type( pparg0: I32 val) : I32 val","title":"obsolete_pzip_error_get_sys_type"},{"location":"ponyzip-ABLibZIP/#parameters_98","text":"pparg0: I32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_100","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#obsolete_pzip_error_get","text":"[Source] fun box obsolete_pzip_error_get( pparg0: NullablePointer[Zip ref] tag, pparg1: Pointer[I32 val] tag, pparg2: Pointer[I32 val] tag) : None val","title":"obsolete_pzip_error_get"},{"location":"ponyzip-ABLibZIP/#parameters_99","text":"pparg0: NullablePointer [ Zip ref] tag pparg1: Pointer [ I32 val] tag pparg2: Pointer [ I32 val] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_101","text":"None val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#obsolete_pzip_error_to_str","text":"[Source] fun box obsolete_pzip_error_to_str( pparg0: String val, pparg1: U64 val, pparg2: I32 val, pparg3: I32 val) : I32 val","title":"obsolete_pzip_error_to_str"},{"location":"ponyzip-ABLibZIP/#parameters_100","text":"pparg0: String val pparg1: U64 val pparg2: I32 val pparg3: I32 val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_102","text":"I32 val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#obsolete_pzip_file_error_get","text":"[Source] fun box obsolete_pzip_file_error_get( pparg0: NullablePointer[Zipfile ref] tag, pparg1: Pointer[I32 val] tag, pparg2: Pointer[I32 val] tag) : None val","title":"obsolete_pzip_file_error_get"},{"location":"ponyzip-ABLibZIP/#parameters_101","text":"pparg0: NullablePointer [ Zipfile ref] tag pparg1: Pointer [ I32 val] tag pparg2: Pointer [ I32 val] tag","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_103","text":"None val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#eq","text":"[Source] fun box eq( that: ABLibZIP val) : Bool val","title":"eq"},{"location":"ponyzip-ABLibZIP/#parameters_102","text":"that: ABLibZIP val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_104","text":"Bool val","title":"Returns"},{"location":"ponyzip-ABLibZIP/#ne","text":"[Source] fun box ne( that: ABLibZIP val) : Bool val","title":"ne"},{"location":"ponyzip-ABLibZIP/#parameters_103","text":"that: ABLibZIP val","title":"Parameters"},{"location":"ponyzip-ABLibZIP/#returns_105","text":"Bool val","title":"Returns"},{"location":"ponyzip-CRC32/","text":"CRC32 \u00b6 [Source] primitive val CRC32 Constructors \u00b6 create \u00b6 [Source] new val create() : CRC32 val^ Returns \u00b6 CRC32 val^ Public Functions \u00b6 calc \u00b6 [Source] Returns the CRC32 of a blob of data fun box calc( data: Array[U8 val] val) : U32 val Parameters \u00b6 data: Array [ U8 val] val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: CRC32 val) : Bool val Parameters \u00b6 that: CRC32 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: CRC32 val) : Bool val Parameters \u00b6 that: CRC32 val Returns \u00b6 Bool val","title":"primitive CRC32"},{"location":"ponyzip-CRC32/#crc32","text":"[Source] primitive val CRC32","title":"CRC32"},{"location":"ponyzip-CRC32/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-CRC32/#create","text":"[Source] new val create() : CRC32 val^","title":"create"},{"location":"ponyzip-CRC32/#returns","text":"CRC32 val^","title":"Returns"},{"location":"ponyzip-CRC32/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-CRC32/#calc","text":"[Source] Returns the CRC32 of a blob of data fun box calc( data: Array[U8 val] val) : U32 val","title":"calc"},{"location":"ponyzip-CRC32/#parameters","text":"data: Array [ U8 val] val","title":"Parameters"},{"location":"ponyzip-CRC32/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-CRC32/#eq","text":"[Source] fun box eq( that: CRC32 val) : Bool val","title":"eq"},{"location":"ponyzip-CRC32/#parameters_1","text":"that: CRC32 val","title":"Parameters"},{"location":"ponyzip-CRC32/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-CRC32/#ne","text":"[Source] fun box ne( that: CRC32 val) : Bool val","title":"ne"},{"location":"ponyzip-CRC32/#parameters_2","text":"that: CRC32 val","title":"Parameters"},{"location":"ponyzip-CRC32/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-IOFILE/","text":"IOFILE \u00b6 [Source] struct ref IOFILE Constructors \u00b6 create \u00b6 [Source] new iso create() : IOFILE iso^ Returns \u00b6 IOFILE iso^","title":"struct IOFILE"},{"location":"ponyzip-IOFILE/#iofile","text":"[Source] struct ref IOFILE","title":"IOFILE"},{"location":"ponyzip-IOFILE/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-IOFILE/#create","text":"[Source] new iso create() : IOFILE iso^","title":"create"},{"location":"ponyzip-IOFILE/#returns","text":"IOFILE iso^","title":"Returns"},{"location":"ponyzip-PonyZip/","text":"PonyZip \u00b6 [Source] class ref PonyZip Constructors \u00b6 create \u00b6 [Source] The create() constructor opens the zip archive specified by filename and returns a PonyZip object instance. The flags available are: * ZipCheckcons Perform additional stricter consistency checks on the archive, and error if they fail. * ZipCreate Create the archive if it does not exist. * ZipExcl Error if archive already exists. * ZipTruncate If archive exists, ignore its current contents. In other words, handle it the same way as an empty archive. * ZipRDOnly Open archive in read-only mode. After creation you should immediately verify that the creation was successful by calling the valid() function. new ref create( filename: String val, flags: Flags[(ZipCreate val | ZipExcl val | ZipCheckcons val | ZipTruncate val | ZipRDOnly val), U32 val] ref) : PonyZip ref^ Parameters \u00b6 filename: String val flags: Flags [( ZipCreate val | ZipExcl val | ZipCheckcons val | ZipTruncate val | ZipRDOnly val), U32 val] ref Returns \u00b6 PonyZip ref^ create_from_source \u00b6 [Source] The create_from_source() constructor opens the zip archive referenced by the provided Zipsource and returns a PonyZip object instance. The flags available are: * ZipCheckcons Perform additional stricter consistency checks on the archive, and error if they fail. * ZipCreate Create the archive if it does not exist. * ZipExcl Error if archive already exists. * ZipTruncate If archive exists, ignore its current contents. In other words, handle it the same way as an empty archive. * ZipRDOnly Open archive in read-only mode. After creation you should immediately verify that the creation was successful by calling the valid() function. new ref create_from_source( source: NullablePointer[Zipsource ref] ref, flags: Flags[(ZipCreate val | ZipExcl val | ZipCheckcons val | ZipTruncate val | ZipRDOnly val), U32 val] ref) : PonyZip ref^ Parameters \u00b6 source: NullablePointer [ Zipsource ref] ref flags: Flags [( ZipCreate val | ZipExcl val | ZipCheckcons val | ZipTruncate val | ZipRDOnly val), U32 val] ref Returns \u00b6 PonyZip ref^ Public fields \u00b6 var zip: NullablePointer [ Zip ref] ref \u00b6 [Source] var errortype: ( ZipEROK val | ZipERMultidisk val | ZipERRename val | \u00b6 [ZipERClose](ponyzip-ZipERClose.md) val | [ZipERSeek](ponyzip-ZipERSeek.md) val | [ZipERRead](ponyzip-ZipERRead.md) val | [ZipERWrite](ponyzip-ZipERWrite.md) val | [ZipERCRC](ponyzip-ZipERCRC.md) val | [ZipERZipclosed](ponyzip-ZipERZipclosed.md) val | [ZipERNoent](ponyzip-ZipERNoent.md) val | [ZipERExists](ponyzip-ZipERExists.md) val | [ZipEROpen](ponyzip-ZipEROpen.md) val | [ZipERTmpopen](ponyzip-ZipERTmpopen.md) val | [ZipERZlib](ponyzip-ZipERZlib.md) val | [ZipERMemory](ponyzip-ZipERMemory.md) val | [ZipERChanged](ponyzip-ZipERChanged.md) val | [ZipERCompnotsupp](ponyzip-ZipERCompnotsupp.md) val | [ZipEREof](ponyzip-ZipEREof.md) val | [ZipERInval](ponyzip-ZipERInval.md) val | [ZipERNozip](ponyzip-ZipERNozip.md) val | [ZipERInternal](ponyzip-ZipERInternal.md) val | [ZipERIncons](ponyzip-ZipERIncons.md) val | [ZipERRemove](ponyzip-ZipERRemove.md) val | [ZipERDeleted](ponyzip-ZipERDeleted.md) val | [ZipEREncrnotsupp](ponyzip-ZipEREncrnotsupp.md) val | [ZipERRDOnly](ponyzip-ZipERRDOnly.md) val | [ZipERNopasswd](ponyzip-ZipERNopasswd.md) val | [ZipERWrongpasswd](ponyzip-ZipERWrongpasswd.md) val | [ZipEROpnotsupp](ponyzip-ZipEROpnotsupp.md) val | [ZipERInuse](ponyzip-ZipERInuse.md) val | [ZipERTell](ponyzip-ZipERTell.md) val | [ZipERCompresseddata](ponyzip-ZipERCompresseddata.md) val | [ZipERCancelled](ponyzip-ZipERCancelled.md) val) [Source] var errorstr: String val \u00b6 [Source] var initflags: U32 val \u00b6 [Source] Public Functions \u00b6 valid \u00b6 [Source] Validatates if the associated open* creator was successful in opening the specified zip archive. Returns boolean true/false. If creation was unsuccessful, the cause of the error can be accessed via the errorstr field. fun box valid() : Bool val Returns \u00b6 Bool val count \u00b6 [Source] Returns the total number of entries in the provided zip archive. fun box count( flags: Flags[(ZipFLNocase val | ZipFLNodir val | ZipFLCompressed val | ZipFLUnchanged val | ZipFLRecompress val | ZipFLEncrypted val | ZipFLEncGuess val | ZipFLEncRaw val | ZipFLEncStrict val | ZipFLLocal val | ZipFLCentral val | ZipFLEncUtf8 val | ZipFLEncCp437 val | ZipFLOverwrite val), U32 val] ref = reference) : USize val ? Parameters \u00b6 flags: Flags [( ZipFLNocase val | ZipFLNodir val | ZipFLCompressed val | ZipFLUnchanged val | ZipFLRecompress val | ZipFLEncrypted val | ZipFLEncGuess val | ZipFLEncRaw val | ZipFLEncStrict val | ZipFLLocal val | ZipFLCentral val | ZipFLEncUtf8 val | ZipFLEncCp437 val | ZipFLOverwrite val), U32 val] ref = reference Returns \u00b6 USize val ? zip_stat_index \u00b6 [Source] Returns a Zipstat struct containing the file metadata for the file at the provided index value. fun box zip_stat_index( index: USize val) : Zipstat ref ? Parameters \u00b6 index: USize val Returns \u00b6 Zipstat ref ? readfile \u00b6 [Source] Returns the contents of the file defined by the provided Zipstat. Currently only supports unencrypted files. fun ref readfile( zipstat: Zipstat ref) : Array[U8 val] iso^ ? Parameters \u00b6 zipstat: Zipstat ref Returns \u00b6 Array [ U8 val] iso^ ? add_file \u00b6 [Source] Adds the contents of the provided data-field to the archive with the specified filename. This is a convenience function which combines Source creation and file addition. fun ref add_file( filename: String val, data: Array[U8 val] val, flags: Array[Flags[(ZipFLNocase val | ZipFLNodir val | ZipFLCompressed val | ZipFLUnchanged val | ZipFLRecompress val | ZipFLEncrypted val | ZipFLEncGuess val | ZipFLEncRaw val | ZipFLEncStrict val | ZipFLLocal val | ZipFLCentral val | ZipFLEncUtf8 val | ZipFLEncCp437 val | ZipFLOverwrite val), U32 val] ref] ref) : USize val ? Parameters \u00b6 filename: String val data: Array [ U8 val] val flags: Array [ Flags [( ZipFLNocase val | ZipFLNodir val | ZipFLCompressed val | ZipFLUnchanged val | ZipFLRecompress val | ZipFLEncrypted val | ZipFLEncGuess val | ZipFLEncRaw val | ZipFLEncStrict val | ZipFLLocal val | ZipFLCentral val | ZipFLEncUtf8 val | ZipFLEncCp437 val | ZipFLOverwrite val), U32 val] ref] ref Returns \u00b6 USize val ? add_file_from_source \u00b6 [Source] Adds the file represented by the provided NullablePointer[Zipsource] to the archive. fun box add_file_from_source( filename: String val, source: NullablePointer[Zipsource ref] ref, flags: Flags[(ZipFLNocase val | ZipFLNodir val | ZipFLCompressed val | ZipFLUnchanged val | ZipFLRecompress val | ZipFLEncrypted val | ZipFLEncGuess val | ZipFLEncRaw val | ZipFLEncStrict val | ZipFLLocal val | ZipFLCentral val | ZipFLEncUtf8 val | ZipFLEncCp437 val | ZipFLOverwrite val), U32 val] ref = reference) : I64 val ? Parameters \u00b6 filename: String val source: NullablePointer [ Zipsource ref] ref flags: Flags [( ZipFLNocase val | ZipFLNodir val | ZipFLCompressed val | ZipFLUnchanged val | ZipFLRecompress val | ZipFLEncrypted val | ZipFLEncGuess val | ZipFLEncRaw val | ZipFLEncStrict val | ZipFLLocal val | ZipFLCentral val | ZipFLEncUtf8 val | ZipFLEncCp437 val | ZipFLOverwrite val), U32 val] ref = reference Returns \u00b6 I64 val ? zip_source_file \u00b6 [Source] Creates a NullablePointer[Zipsource] for a specified file. This can either be used to read a zip archive in a zip archive... Zipception! ... or to directly write files into a zip archive without having to do the memory allocation yourself. fun ref zip_source_file( filename: String val, start: U64 val, length: I64 val) : NullablePointer[Zipsource ref] ref ? Parameters \u00b6 filename: String val start: U64 val length: I64 val Returns \u00b6 NullablePointer [ Zipsource ref] ref ? close \u00b6 [Source] Closes the specified archive. Will not complete until any changes to the archive have been committed to disk. Success results in a return-code of 0. fun box close() : I32 val Returns \u00b6 I32 val","title":"class PonyZip"},{"location":"ponyzip-PonyZip/#ponyzip","text":"[Source] class ref PonyZip","title":"PonyZip"},{"location":"ponyzip-PonyZip/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-PonyZip/#create","text":"[Source] The create() constructor opens the zip archive specified by filename and returns a PonyZip object instance. The flags available are: * ZipCheckcons Perform additional stricter consistency checks on the archive, and error if they fail. * ZipCreate Create the archive if it does not exist. * ZipExcl Error if archive already exists. * ZipTruncate If archive exists, ignore its current contents. In other words, handle it the same way as an empty archive. * ZipRDOnly Open archive in read-only mode. After creation you should immediately verify that the creation was successful by calling the valid() function. new ref create( filename: String val, flags: Flags[(ZipCreate val | ZipExcl val | ZipCheckcons val | ZipTruncate val | ZipRDOnly val), U32 val] ref) : PonyZip ref^","title":"create"},{"location":"ponyzip-PonyZip/#parameters","text":"filename: String val flags: Flags [( ZipCreate val | ZipExcl val | ZipCheckcons val | ZipTruncate val | ZipRDOnly val), U32 val] ref","title":"Parameters"},{"location":"ponyzip-PonyZip/#returns","text":"PonyZip ref^","title":"Returns"},{"location":"ponyzip-PonyZip/#create_from_source","text":"[Source] The create_from_source() constructor opens the zip archive referenced by the provided Zipsource and returns a PonyZip object instance. The flags available are: * ZipCheckcons Perform additional stricter consistency checks on the archive, and error if they fail. * ZipCreate Create the archive if it does not exist. * ZipExcl Error if archive already exists. * ZipTruncate If archive exists, ignore its current contents. In other words, handle it the same way as an empty archive. * ZipRDOnly Open archive in read-only mode. After creation you should immediately verify that the creation was successful by calling the valid() function. new ref create_from_source( source: NullablePointer[Zipsource ref] ref, flags: Flags[(ZipCreate val | ZipExcl val | ZipCheckcons val | ZipTruncate val | ZipRDOnly val), U32 val] ref) : PonyZip ref^","title":"create_from_source"},{"location":"ponyzip-PonyZip/#parameters_1","text":"source: NullablePointer [ Zipsource ref] ref flags: Flags [( ZipCreate val | ZipExcl val | ZipCheckcons val | ZipTruncate val | ZipRDOnly val), U32 val] ref","title":"Parameters"},{"location":"ponyzip-PonyZip/#returns_1","text":"PonyZip ref^","title":"Returns"},{"location":"ponyzip-PonyZip/#public-fields","text":"","title":"Public fields"},{"location":"ponyzip-PonyZip/#var-zip-nullablepointerzip-ref-ref","text":"[Source]","title":"var zip: NullablePointer[Zip ref] ref"},{"location":"ponyzip-PonyZip/#var-errortype-ziperok-val-zipermultidisk-val-ziperrename-val","text":"[ZipERClose](ponyzip-ZipERClose.md) val | [ZipERSeek](ponyzip-ZipERSeek.md) val | [ZipERRead](ponyzip-ZipERRead.md) val | [ZipERWrite](ponyzip-ZipERWrite.md) val | [ZipERCRC](ponyzip-ZipERCRC.md) val | [ZipERZipclosed](ponyzip-ZipERZipclosed.md) val | [ZipERNoent](ponyzip-ZipERNoent.md) val | [ZipERExists](ponyzip-ZipERExists.md) val | [ZipEROpen](ponyzip-ZipEROpen.md) val | [ZipERTmpopen](ponyzip-ZipERTmpopen.md) val | [ZipERZlib](ponyzip-ZipERZlib.md) val | [ZipERMemory](ponyzip-ZipERMemory.md) val | [ZipERChanged](ponyzip-ZipERChanged.md) val | [ZipERCompnotsupp](ponyzip-ZipERCompnotsupp.md) val | [ZipEREof](ponyzip-ZipEREof.md) val | [ZipERInval](ponyzip-ZipERInval.md) val | [ZipERNozip](ponyzip-ZipERNozip.md) val | [ZipERInternal](ponyzip-ZipERInternal.md) val | [ZipERIncons](ponyzip-ZipERIncons.md) val | [ZipERRemove](ponyzip-ZipERRemove.md) val | [ZipERDeleted](ponyzip-ZipERDeleted.md) val | [ZipEREncrnotsupp](ponyzip-ZipEREncrnotsupp.md) val | [ZipERRDOnly](ponyzip-ZipERRDOnly.md) val | [ZipERNopasswd](ponyzip-ZipERNopasswd.md) val | [ZipERWrongpasswd](ponyzip-ZipERWrongpasswd.md) val | [ZipEROpnotsupp](ponyzip-ZipEROpnotsupp.md) val | [ZipERInuse](ponyzip-ZipERInuse.md) val | [ZipERTell](ponyzip-ZipERTell.md) val | [ZipERCompresseddata](ponyzip-ZipERCompresseddata.md) val | [ZipERCancelled](ponyzip-ZipERCancelled.md) val) [Source]","title":"var errortype: (ZipEROK val | ZipERMultidisk val | ZipERRename val |"},{"location":"ponyzip-PonyZip/#var-errorstr-string-val","text":"[Source]","title":"var errorstr: String val"},{"location":"ponyzip-PonyZip/#var-initflags-u32-val","text":"[Source]","title":"var initflags: U32 val"},{"location":"ponyzip-PonyZip/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-PonyZip/#valid","text":"[Source] Validatates if the associated open* creator was successful in opening the specified zip archive. Returns boolean true/false. If creation was unsuccessful, the cause of the error can be accessed via the errorstr field. fun box valid() : Bool val","title":"valid"},{"location":"ponyzip-PonyZip/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-PonyZip/#count","text":"[Source] Returns the total number of entries in the provided zip archive. fun box count( flags: Flags[(ZipFLNocase val | ZipFLNodir val | ZipFLCompressed val | ZipFLUnchanged val | ZipFLRecompress val | ZipFLEncrypted val | ZipFLEncGuess val | ZipFLEncRaw val | ZipFLEncStrict val | ZipFLLocal val | ZipFLCentral val | ZipFLEncUtf8 val | ZipFLEncCp437 val | ZipFLOverwrite val), U32 val] ref = reference) : USize val ?","title":"count"},{"location":"ponyzip-PonyZip/#parameters_2","text":"flags: Flags [( ZipFLNocase val | ZipFLNodir val | ZipFLCompressed val | ZipFLUnchanged val | ZipFLRecompress val | ZipFLEncrypted val | ZipFLEncGuess val | ZipFLEncRaw val | ZipFLEncStrict val | ZipFLLocal val | ZipFLCentral val | ZipFLEncUtf8 val | ZipFLEncCp437 val | ZipFLOverwrite val), U32 val] ref = reference","title":"Parameters"},{"location":"ponyzip-PonyZip/#returns_3","text":"USize val ?","title":"Returns"},{"location":"ponyzip-PonyZip/#zip_stat_index","text":"[Source] Returns a Zipstat struct containing the file metadata for the file at the provided index value. fun box zip_stat_index( index: USize val) : Zipstat ref ?","title":"zip_stat_index"},{"location":"ponyzip-PonyZip/#parameters_3","text":"index: USize val","title":"Parameters"},{"location":"ponyzip-PonyZip/#returns_4","text":"Zipstat ref ?","title":"Returns"},{"location":"ponyzip-PonyZip/#readfile","text":"[Source] Returns the contents of the file defined by the provided Zipstat. Currently only supports unencrypted files. fun ref readfile( zipstat: Zipstat ref) : Array[U8 val] iso^ ?","title":"readfile"},{"location":"ponyzip-PonyZip/#parameters_4","text":"zipstat: Zipstat ref","title":"Parameters"},{"location":"ponyzip-PonyZip/#returns_5","text":"Array [ U8 val] iso^ ?","title":"Returns"},{"location":"ponyzip-PonyZip/#add_file","text":"[Source] Adds the contents of the provided data-field to the archive with the specified filename. This is a convenience function which combines Source creation and file addition. fun ref add_file( filename: String val, data: Array[U8 val] val, flags: Array[Flags[(ZipFLNocase val | ZipFLNodir val | ZipFLCompressed val | ZipFLUnchanged val | ZipFLRecompress val | ZipFLEncrypted val | ZipFLEncGuess val | ZipFLEncRaw val | ZipFLEncStrict val | ZipFLLocal val | ZipFLCentral val | ZipFLEncUtf8 val | ZipFLEncCp437 val | ZipFLOverwrite val), U32 val] ref] ref) : USize val ?","title":"add_file"},{"location":"ponyzip-PonyZip/#parameters_5","text":"filename: String val data: Array [ U8 val] val flags: Array [ Flags [( ZipFLNocase val | ZipFLNodir val | ZipFLCompressed val | ZipFLUnchanged val | ZipFLRecompress val | ZipFLEncrypted val | ZipFLEncGuess val | ZipFLEncRaw val | ZipFLEncStrict val | ZipFLLocal val | ZipFLCentral val | ZipFLEncUtf8 val | ZipFLEncCp437 val | ZipFLOverwrite val), U32 val] ref] ref","title":"Parameters"},{"location":"ponyzip-PonyZip/#returns_6","text":"USize val ?","title":"Returns"},{"location":"ponyzip-PonyZip/#add_file_from_source","text":"[Source] Adds the file represented by the provided NullablePointer[Zipsource] to the archive. fun box add_file_from_source( filename: String val, source: NullablePointer[Zipsource ref] ref, flags: Flags[(ZipFLNocase val | ZipFLNodir val | ZipFLCompressed val | ZipFLUnchanged val | ZipFLRecompress val | ZipFLEncrypted val | ZipFLEncGuess val | ZipFLEncRaw val | ZipFLEncStrict val | ZipFLLocal val | ZipFLCentral val | ZipFLEncUtf8 val | ZipFLEncCp437 val | ZipFLOverwrite val), U32 val] ref = reference) : I64 val ?","title":"add_file_from_source"},{"location":"ponyzip-PonyZip/#parameters_6","text":"filename: String val source: NullablePointer [ Zipsource ref] ref flags: Flags [( ZipFLNocase val | ZipFLNodir val | ZipFLCompressed val | ZipFLUnchanged val | ZipFLRecompress val | ZipFLEncrypted val | ZipFLEncGuess val | ZipFLEncRaw val | ZipFLEncStrict val | ZipFLLocal val | ZipFLCentral val | ZipFLEncUtf8 val | ZipFLEncCp437 val | ZipFLOverwrite val), U32 val] ref = reference","title":"Parameters"},{"location":"ponyzip-PonyZip/#returns_7","text":"I64 val ?","title":"Returns"},{"location":"ponyzip-PonyZip/#zip_source_file","text":"[Source] Creates a NullablePointer[Zipsource] for a specified file. This can either be used to read a zip archive in a zip archive... Zipception! ... or to directly write files into a zip archive without having to do the memory allocation yourself. fun ref zip_source_file( filename: String val, start: U64 val, length: I64 val) : NullablePointer[Zipsource ref] ref ?","title":"zip_source_file"},{"location":"ponyzip-PonyZip/#parameters_7","text":"filename: String val start: U64 val length: I64 val","title":"Parameters"},{"location":"ponyzip-PonyZip/#returns_8","text":"NullablePointer [ Zipsource ref] ref ?","title":"Returns"},{"location":"ponyzip-PonyZip/#close","text":"[Source] Closes the specified archive. Will not complete until any changes to the archive have been committed to disk. Success results in a return-code of 0. fun box close() : I32 val","title":"close"},{"location":"ponyzip-PonyZip/#returns_9","text":"I32 val","title":"Returns"},{"location":"ponyzip-Zip/","text":"Zip \u00b6 [Source] struct ref Zip Constructors \u00b6 create \u00b6 [Source] new iso create() : Zip iso^ Returns \u00b6 Zip iso^","title":"struct Zip"},{"location":"ponyzip-Zip/#zip","text":"[Source] struct ref Zip","title":"Zip"},{"location":"ponyzip-Zip/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-Zip/#create","text":"[Source] new iso create() : Zip iso^","title":"create"},{"location":"ponyzip-Zip/#returns","text":"Zip iso^","title":"Returns"},{"location":"ponyzip-ZipAFLRDOnly/","text":"ZipAFLRDOnly \u00b6 [Source] primitive val ZipAFLRDOnly Constructors \u00b6 create \u00b6 [Source] new val create() : ZipAFLRDOnly val^ Returns \u00b6 ZipAFLRDOnly val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipAFLRDOnly val) : Bool val Parameters \u00b6 that: ZipAFLRDOnly val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipAFLRDOnly val) : Bool val Parameters \u00b6 that: ZipAFLRDOnly val Returns \u00b6 Bool val","title":"primitive ZipAFLRDOnly"},{"location":"ponyzip-ZipAFLRDOnly/#zipaflrdonly","text":"[Source] primitive val ZipAFLRDOnly","title":"ZipAFLRDOnly"},{"location":"ponyzip-ZipAFLRDOnly/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipAFLRDOnly/#create","text":"[Source] new val create() : ZipAFLRDOnly val^","title":"create"},{"location":"ponyzip-ZipAFLRDOnly/#returns","text":"ZipAFLRDOnly val^","title":"Returns"},{"location":"ponyzip-ZipAFLRDOnly/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipAFLRDOnly/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipAFLRDOnly/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipAFLRDOnly/#eq","text":"[Source] fun box eq( that: ZipAFLRDOnly val) : Bool val","title":"eq"},{"location":"ponyzip-ZipAFLRDOnly/#parameters","text":"that: ZipAFLRDOnly val","title":"Parameters"},{"location":"ponyzip-ZipAFLRDOnly/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipAFLRDOnly/#ne","text":"[Source] fun box ne( that: ZipAFLRDOnly val) : Bool val","title":"ne"},{"location":"ponyzip-ZipAFLRDOnly/#parameters_1","text":"that: ZipAFLRDOnly val","title":"Parameters"},{"location":"ponyzip-ZipAFLRDOnly/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipAflFlags/","text":"ZipAflFlags \u00b6 [Source] type ZipAflFlags is Flags[ZipAFLRDOnly val, U32 val] ref Type Alias For \u00b6 Flags [ ZipAFLRDOnly val, U32 val] ref","title":"type ZipAflFlags"},{"location":"ponyzip-ZipAflFlags/#zipaflflags","text":"[Source] type ZipAflFlags is Flags[ZipAFLRDOnly val, U32 val] ref","title":"ZipAflFlags"},{"location":"ponyzip-ZipAflFlags/#type-alias-for","text":"Flags [ ZipAFLRDOnly val, U32 val] ref","title":"Type Alias For"},{"location":"ponyzip-ZipCMBzip2/","text":"ZipCMBzip2 \u00b6 [Source] primitive val ZipCMBzip2 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCMBzip2 val^ Returns \u00b6 ZipCMBzip2 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipCMBzip2 val) : Bool val Parameters \u00b6 that: ZipCMBzip2 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCMBzip2 val) : Bool val Parameters \u00b6 that: ZipCMBzip2 val Returns \u00b6 Bool val","title":"primitive ZipCMBzip2"},{"location":"ponyzip-ZipCMBzip2/#zipcmbzip2","text":"[Source] primitive val ZipCMBzip2","title":"ZipCMBzip2"},{"location":"ponyzip-ZipCMBzip2/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCMBzip2/#create","text":"[Source] new val create() : ZipCMBzip2 val^","title":"create"},{"location":"ponyzip-ZipCMBzip2/#returns","text":"ZipCMBzip2 val^","title":"Returns"},{"location":"ponyzip-ZipCMBzip2/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCMBzip2/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipCMBzip2/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipCMBzip2/#eq","text":"[Source] fun box eq( that: ZipCMBzip2 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCMBzip2/#parameters","text":"that: ZipCMBzip2 val","title":"Parameters"},{"location":"ponyzip-ZipCMBzip2/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMBzip2/#ne","text":"[Source] fun box ne( that: ZipCMBzip2 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCMBzip2/#parameters_1","text":"that: ZipCMBzip2 val","title":"Parameters"},{"location":"ponyzip-ZipCMBzip2/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMDefault/","text":"ZipCMDefault \u00b6 [Source] primitive val ZipCMDefault Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCMDefault val^ Returns \u00b6 ZipCMDefault val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipCMDefault val) : Bool val Parameters \u00b6 that: ZipCMDefault val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCMDefault val) : Bool val Parameters \u00b6 that: ZipCMDefault val Returns \u00b6 Bool val","title":"primitive ZipCMDefault"},{"location":"ponyzip-ZipCMDefault/#zipcmdefault","text":"[Source] primitive val ZipCMDefault","title":"ZipCMDefault"},{"location":"ponyzip-ZipCMDefault/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCMDefault/#create","text":"[Source] new val create() : ZipCMDefault val^","title":"create"},{"location":"ponyzip-ZipCMDefault/#returns","text":"ZipCMDefault val^","title":"Returns"},{"location":"ponyzip-ZipCMDefault/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCMDefault/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipCMDefault/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipCMDefault/#eq","text":"[Source] fun box eq( that: ZipCMDefault val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCMDefault/#parameters","text":"that: ZipCMDefault val","title":"Parameters"},{"location":"ponyzip-ZipCMDefault/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMDefault/#ne","text":"[Source] fun box ne( that: ZipCMDefault val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCMDefault/#parameters_1","text":"that: ZipCMDefault val","title":"Parameters"},{"location":"ponyzip-ZipCMDefault/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMDeflate/","text":"ZipCMDeflate \u00b6 [Source] primitive val ZipCMDeflate Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCMDeflate val^ Returns \u00b6 ZipCMDeflate val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipCMDeflate val) : Bool val Parameters \u00b6 that: ZipCMDeflate val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCMDeflate val) : Bool val Parameters \u00b6 that: ZipCMDeflate val Returns \u00b6 Bool val","title":"primitive ZipCMDeflate"},{"location":"ponyzip-ZipCMDeflate/#zipcmdeflate","text":"[Source] primitive val ZipCMDeflate","title":"ZipCMDeflate"},{"location":"ponyzip-ZipCMDeflate/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCMDeflate/#create","text":"[Source] new val create() : ZipCMDeflate val^","title":"create"},{"location":"ponyzip-ZipCMDeflate/#returns","text":"ZipCMDeflate val^","title":"Returns"},{"location":"ponyzip-ZipCMDeflate/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCMDeflate/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipCMDeflate/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipCMDeflate/#eq","text":"[Source] fun box eq( that: ZipCMDeflate val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCMDeflate/#parameters","text":"that: ZipCMDeflate val","title":"Parameters"},{"location":"ponyzip-ZipCMDeflate/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMDeflate/#ne","text":"[Source] fun box ne( that: ZipCMDeflate val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCMDeflate/#parameters_1","text":"that: ZipCMDeflate val","title":"Parameters"},{"location":"ponyzip-ZipCMDeflate/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMDeflate64/","text":"ZipCMDeflate64 \u00b6 [Source] primitive val ZipCMDeflate64 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCMDeflate64 val^ Returns \u00b6 ZipCMDeflate64 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipCMDeflate64 val) : Bool val Parameters \u00b6 that: ZipCMDeflate64 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCMDeflate64 val) : Bool val Parameters \u00b6 that: ZipCMDeflate64 val Returns \u00b6 Bool val","title":"primitive ZipCMDeflate64"},{"location":"ponyzip-ZipCMDeflate64/#zipcmdeflate64","text":"[Source] primitive val ZipCMDeflate64","title":"ZipCMDeflate64"},{"location":"ponyzip-ZipCMDeflate64/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCMDeflate64/#create","text":"[Source] new val create() : ZipCMDeflate64 val^","title":"create"},{"location":"ponyzip-ZipCMDeflate64/#returns","text":"ZipCMDeflate64 val^","title":"Returns"},{"location":"ponyzip-ZipCMDeflate64/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCMDeflate64/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipCMDeflate64/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipCMDeflate64/#eq","text":"[Source] fun box eq( that: ZipCMDeflate64 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCMDeflate64/#parameters","text":"that: ZipCMDeflate64 val","title":"Parameters"},{"location":"ponyzip-ZipCMDeflate64/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMDeflate64/#ne","text":"[Source] fun box ne( that: ZipCMDeflate64 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCMDeflate64/#parameters_1","text":"that: ZipCMDeflate64 val","title":"Parameters"},{"location":"ponyzip-ZipCMDeflate64/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMImplode/","text":"ZipCMImplode \u00b6 [Source] primitive val ZipCMImplode Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCMImplode val^ Returns \u00b6 ZipCMImplode val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipCMImplode val) : Bool val Parameters \u00b6 that: ZipCMImplode val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCMImplode val) : Bool val Parameters \u00b6 that: ZipCMImplode val Returns \u00b6 Bool val","title":"primitive ZipCMImplode"},{"location":"ponyzip-ZipCMImplode/#zipcmimplode","text":"[Source] primitive val ZipCMImplode","title":"ZipCMImplode"},{"location":"ponyzip-ZipCMImplode/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCMImplode/#create","text":"[Source] new val create() : ZipCMImplode val^","title":"create"},{"location":"ponyzip-ZipCMImplode/#returns","text":"ZipCMImplode val^","title":"Returns"},{"location":"ponyzip-ZipCMImplode/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCMImplode/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipCMImplode/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipCMImplode/#eq","text":"[Source] fun box eq( that: ZipCMImplode val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCMImplode/#parameters","text":"that: ZipCMImplode val","title":"Parameters"},{"location":"ponyzip-ZipCMImplode/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMImplode/#ne","text":"[Source] fun box ne( that: ZipCMImplode val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCMImplode/#parameters_1","text":"that: ZipCMImplode val","title":"Parameters"},{"location":"ponyzip-ZipCMImplode/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMJpeg/","text":"ZipCMJpeg \u00b6 [Source] primitive val ZipCMJpeg Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCMJpeg val^ Returns \u00b6 ZipCMJpeg val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipCMJpeg val) : Bool val Parameters \u00b6 that: ZipCMJpeg val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCMJpeg val) : Bool val Parameters \u00b6 that: ZipCMJpeg val Returns \u00b6 Bool val","title":"primitive ZipCMJpeg"},{"location":"ponyzip-ZipCMJpeg/#zipcmjpeg","text":"[Source] primitive val ZipCMJpeg","title":"ZipCMJpeg"},{"location":"ponyzip-ZipCMJpeg/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCMJpeg/#create","text":"[Source] new val create() : ZipCMJpeg val^","title":"create"},{"location":"ponyzip-ZipCMJpeg/#returns","text":"ZipCMJpeg val^","title":"Returns"},{"location":"ponyzip-ZipCMJpeg/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCMJpeg/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipCMJpeg/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipCMJpeg/#eq","text":"[Source] fun box eq( that: ZipCMJpeg val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCMJpeg/#parameters","text":"that: ZipCMJpeg val","title":"Parameters"},{"location":"ponyzip-ZipCMJpeg/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMJpeg/#ne","text":"[Source] fun box ne( that: ZipCMJpeg val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCMJpeg/#parameters_1","text":"that: ZipCMJpeg val","title":"Parameters"},{"location":"ponyzip-ZipCMJpeg/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMLz77/","text":"ZipCMLz77 \u00b6 [Source] primitive val ZipCMLz77 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCMLz77 val^ Returns \u00b6 ZipCMLz77 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipCMLz77 val) : Bool val Parameters \u00b6 that: ZipCMLz77 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCMLz77 val) : Bool val Parameters \u00b6 that: ZipCMLz77 val Returns \u00b6 Bool val","title":"primitive ZipCMLz77"},{"location":"ponyzip-ZipCMLz77/#zipcmlz77","text":"[Source] primitive val ZipCMLz77","title":"ZipCMLz77"},{"location":"ponyzip-ZipCMLz77/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCMLz77/#create","text":"[Source] new val create() : ZipCMLz77 val^","title":"create"},{"location":"ponyzip-ZipCMLz77/#returns","text":"ZipCMLz77 val^","title":"Returns"},{"location":"ponyzip-ZipCMLz77/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCMLz77/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipCMLz77/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipCMLz77/#eq","text":"[Source] fun box eq( that: ZipCMLz77 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCMLz77/#parameters","text":"that: ZipCMLz77 val","title":"Parameters"},{"location":"ponyzip-ZipCMLz77/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMLz77/#ne","text":"[Source] fun box ne( that: ZipCMLz77 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCMLz77/#parameters_1","text":"that: ZipCMLz77 val","title":"Parameters"},{"location":"ponyzip-ZipCMLz77/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMLzma/","text":"ZipCMLzma \u00b6 [Source] primitive val ZipCMLzma Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCMLzma val^ Returns \u00b6 ZipCMLzma val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipCMLzma val) : Bool val Parameters \u00b6 that: ZipCMLzma val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCMLzma val) : Bool val Parameters \u00b6 that: ZipCMLzma val Returns \u00b6 Bool val","title":"primitive ZipCMLzma"},{"location":"ponyzip-ZipCMLzma/#zipcmlzma","text":"[Source] primitive val ZipCMLzma","title":"ZipCMLzma"},{"location":"ponyzip-ZipCMLzma/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCMLzma/#create","text":"[Source] new val create() : ZipCMLzma val^","title":"create"},{"location":"ponyzip-ZipCMLzma/#returns","text":"ZipCMLzma val^","title":"Returns"},{"location":"ponyzip-ZipCMLzma/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCMLzma/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipCMLzma/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipCMLzma/#eq","text":"[Source] fun box eq( that: ZipCMLzma val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCMLzma/#parameters","text":"that: ZipCMLzma val","title":"Parameters"},{"location":"ponyzip-ZipCMLzma/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMLzma/#ne","text":"[Source] fun box ne( that: ZipCMLzma val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCMLzma/#parameters_1","text":"that: ZipCMLzma val","title":"Parameters"},{"location":"ponyzip-ZipCMLzma/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMLzma2/","text":"ZipCMLzma2 \u00b6 [Source] primitive val ZipCMLzma2 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCMLzma2 val^ Returns \u00b6 ZipCMLzma2 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipCMLzma2 val) : Bool val Parameters \u00b6 that: ZipCMLzma2 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCMLzma2 val) : Bool val Parameters \u00b6 that: ZipCMLzma2 val Returns \u00b6 Bool val","title":"primitive ZipCMLzma2"},{"location":"ponyzip-ZipCMLzma2/#zipcmlzma2","text":"[Source] primitive val ZipCMLzma2","title":"ZipCMLzma2"},{"location":"ponyzip-ZipCMLzma2/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCMLzma2/#create","text":"[Source] new val create() : ZipCMLzma2 val^","title":"create"},{"location":"ponyzip-ZipCMLzma2/#returns","text":"ZipCMLzma2 val^","title":"Returns"},{"location":"ponyzip-ZipCMLzma2/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCMLzma2/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipCMLzma2/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipCMLzma2/#eq","text":"[Source] fun box eq( that: ZipCMLzma2 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCMLzma2/#parameters","text":"that: ZipCMLzma2 val","title":"Parameters"},{"location":"ponyzip-ZipCMLzma2/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMLzma2/#ne","text":"[Source] fun box ne( that: ZipCMLzma2 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCMLzma2/#parameters_1","text":"that: ZipCMLzma2 val","title":"Parameters"},{"location":"ponyzip-ZipCMLzma2/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMPkwareimplode/","text":"ZipCMPkwareimplode \u00b6 [Source] primitive val ZipCMPkwareimplode Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCMPkwareimplode val^ Returns \u00b6 ZipCMPkwareimplode val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipCMPkwareimplode val) : Bool val Parameters \u00b6 that: ZipCMPkwareimplode val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCMPkwareimplode val) : Bool val Parameters \u00b6 that: ZipCMPkwareimplode val Returns \u00b6 Bool val","title":"primitive ZipCMPkwareimplode"},{"location":"ponyzip-ZipCMPkwareimplode/#zipcmpkwareimplode","text":"[Source] primitive val ZipCMPkwareimplode","title":"ZipCMPkwareimplode"},{"location":"ponyzip-ZipCMPkwareimplode/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCMPkwareimplode/#create","text":"[Source] new val create() : ZipCMPkwareimplode val^","title":"create"},{"location":"ponyzip-ZipCMPkwareimplode/#returns","text":"ZipCMPkwareimplode val^","title":"Returns"},{"location":"ponyzip-ZipCMPkwareimplode/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCMPkwareimplode/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipCMPkwareimplode/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipCMPkwareimplode/#eq","text":"[Source] fun box eq( that: ZipCMPkwareimplode val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCMPkwareimplode/#parameters","text":"that: ZipCMPkwareimplode val","title":"Parameters"},{"location":"ponyzip-ZipCMPkwareimplode/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMPkwareimplode/#ne","text":"[Source] fun box ne( that: ZipCMPkwareimplode val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCMPkwareimplode/#parameters_1","text":"that: ZipCMPkwareimplode val","title":"Parameters"},{"location":"ponyzip-ZipCMPkwareimplode/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMPpmd/","text":"ZipCMPpmd \u00b6 [Source] primitive val ZipCMPpmd Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCMPpmd val^ Returns \u00b6 ZipCMPpmd val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipCMPpmd val) : Bool val Parameters \u00b6 that: ZipCMPpmd val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCMPpmd val) : Bool val Parameters \u00b6 that: ZipCMPpmd val Returns \u00b6 Bool val","title":"primitive ZipCMPpmd"},{"location":"ponyzip-ZipCMPpmd/#zipcmppmd","text":"[Source] primitive val ZipCMPpmd","title":"ZipCMPpmd"},{"location":"ponyzip-ZipCMPpmd/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCMPpmd/#create","text":"[Source] new val create() : ZipCMPpmd val^","title":"create"},{"location":"ponyzip-ZipCMPpmd/#returns","text":"ZipCMPpmd val^","title":"Returns"},{"location":"ponyzip-ZipCMPpmd/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCMPpmd/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipCMPpmd/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipCMPpmd/#eq","text":"[Source] fun box eq( that: ZipCMPpmd val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCMPpmd/#parameters","text":"that: ZipCMPpmd val","title":"Parameters"},{"location":"ponyzip-ZipCMPpmd/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMPpmd/#ne","text":"[Source] fun box ne( that: ZipCMPpmd val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCMPpmd/#parameters_1","text":"that: ZipCMPpmd val","title":"Parameters"},{"location":"ponyzip-ZipCMPpmd/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMReduce1/","text":"ZipCMReduce1 \u00b6 [Source] primitive val ZipCMReduce1 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCMReduce1 val^ Returns \u00b6 ZipCMReduce1 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipCMReduce1 val) : Bool val Parameters \u00b6 that: ZipCMReduce1 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCMReduce1 val) : Bool val Parameters \u00b6 that: ZipCMReduce1 val Returns \u00b6 Bool val","title":"primitive ZipCMReduce1"},{"location":"ponyzip-ZipCMReduce1/#zipcmreduce1","text":"[Source] primitive val ZipCMReduce1","title":"ZipCMReduce1"},{"location":"ponyzip-ZipCMReduce1/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCMReduce1/#create","text":"[Source] new val create() : ZipCMReduce1 val^","title":"create"},{"location":"ponyzip-ZipCMReduce1/#returns","text":"ZipCMReduce1 val^","title":"Returns"},{"location":"ponyzip-ZipCMReduce1/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCMReduce1/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipCMReduce1/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipCMReduce1/#eq","text":"[Source] fun box eq( that: ZipCMReduce1 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCMReduce1/#parameters","text":"that: ZipCMReduce1 val","title":"Parameters"},{"location":"ponyzip-ZipCMReduce1/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMReduce1/#ne","text":"[Source] fun box ne( that: ZipCMReduce1 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCMReduce1/#parameters_1","text":"that: ZipCMReduce1 val","title":"Parameters"},{"location":"ponyzip-ZipCMReduce1/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMReduce2/","text":"ZipCMReduce2 \u00b6 [Source] primitive val ZipCMReduce2 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCMReduce2 val^ Returns \u00b6 ZipCMReduce2 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipCMReduce2 val) : Bool val Parameters \u00b6 that: ZipCMReduce2 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCMReduce2 val) : Bool val Parameters \u00b6 that: ZipCMReduce2 val Returns \u00b6 Bool val","title":"primitive ZipCMReduce2"},{"location":"ponyzip-ZipCMReduce2/#zipcmreduce2","text":"[Source] primitive val ZipCMReduce2","title":"ZipCMReduce2"},{"location":"ponyzip-ZipCMReduce2/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCMReduce2/#create","text":"[Source] new val create() : ZipCMReduce2 val^","title":"create"},{"location":"ponyzip-ZipCMReduce2/#returns","text":"ZipCMReduce2 val^","title":"Returns"},{"location":"ponyzip-ZipCMReduce2/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCMReduce2/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipCMReduce2/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipCMReduce2/#eq","text":"[Source] fun box eq( that: ZipCMReduce2 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCMReduce2/#parameters","text":"that: ZipCMReduce2 val","title":"Parameters"},{"location":"ponyzip-ZipCMReduce2/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMReduce2/#ne","text":"[Source] fun box ne( that: ZipCMReduce2 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCMReduce2/#parameters_1","text":"that: ZipCMReduce2 val","title":"Parameters"},{"location":"ponyzip-ZipCMReduce2/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMReduce3/","text":"ZipCMReduce3 \u00b6 [Source] primitive val ZipCMReduce3 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCMReduce3 val^ Returns \u00b6 ZipCMReduce3 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipCMReduce3 val) : Bool val Parameters \u00b6 that: ZipCMReduce3 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCMReduce3 val) : Bool val Parameters \u00b6 that: ZipCMReduce3 val Returns \u00b6 Bool val","title":"primitive ZipCMReduce3"},{"location":"ponyzip-ZipCMReduce3/#zipcmreduce3","text":"[Source] primitive val ZipCMReduce3","title":"ZipCMReduce3"},{"location":"ponyzip-ZipCMReduce3/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCMReduce3/#create","text":"[Source] new val create() : ZipCMReduce3 val^","title":"create"},{"location":"ponyzip-ZipCMReduce3/#returns","text":"ZipCMReduce3 val^","title":"Returns"},{"location":"ponyzip-ZipCMReduce3/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCMReduce3/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipCMReduce3/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipCMReduce3/#eq","text":"[Source] fun box eq( that: ZipCMReduce3 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCMReduce3/#parameters","text":"that: ZipCMReduce3 val","title":"Parameters"},{"location":"ponyzip-ZipCMReduce3/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMReduce3/#ne","text":"[Source] fun box ne( that: ZipCMReduce3 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCMReduce3/#parameters_1","text":"that: ZipCMReduce3 val","title":"Parameters"},{"location":"ponyzip-ZipCMReduce3/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMReduce4/","text":"ZipCMReduce4 \u00b6 [Source] primitive val ZipCMReduce4 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCMReduce4 val^ Returns \u00b6 ZipCMReduce4 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipCMReduce4 val) : Bool val Parameters \u00b6 that: ZipCMReduce4 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCMReduce4 val) : Bool val Parameters \u00b6 that: ZipCMReduce4 val Returns \u00b6 Bool val","title":"primitive ZipCMReduce4"},{"location":"ponyzip-ZipCMReduce4/#zipcmreduce4","text":"[Source] primitive val ZipCMReduce4","title":"ZipCMReduce4"},{"location":"ponyzip-ZipCMReduce4/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCMReduce4/#create","text":"[Source] new val create() : ZipCMReduce4 val^","title":"create"},{"location":"ponyzip-ZipCMReduce4/#returns","text":"ZipCMReduce4 val^","title":"Returns"},{"location":"ponyzip-ZipCMReduce4/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCMReduce4/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipCMReduce4/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipCMReduce4/#eq","text":"[Source] fun box eq( that: ZipCMReduce4 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCMReduce4/#parameters","text":"that: ZipCMReduce4 val","title":"Parameters"},{"location":"ponyzip-ZipCMReduce4/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMReduce4/#ne","text":"[Source] fun box ne( that: ZipCMReduce4 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCMReduce4/#parameters_1","text":"that: ZipCMReduce4 val","title":"Parameters"},{"location":"ponyzip-ZipCMReduce4/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMShrink/","text":"ZipCMShrink \u00b6 [Source] primitive val ZipCMShrink Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCMShrink val^ Returns \u00b6 ZipCMShrink val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipCMShrink val) : Bool val Parameters \u00b6 that: ZipCMShrink val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCMShrink val) : Bool val Parameters \u00b6 that: ZipCMShrink val Returns \u00b6 Bool val","title":"primitive ZipCMShrink"},{"location":"ponyzip-ZipCMShrink/#zipcmshrink","text":"[Source] primitive val ZipCMShrink","title":"ZipCMShrink"},{"location":"ponyzip-ZipCMShrink/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCMShrink/#create","text":"[Source] new val create() : ZipCMShrink val^","title":"create"},{"location":"ponyzip-ZipCMShrink/#returns","text":"ZipCMShrink val^","title":"Returns"},{"location":"ponyzip-ZipCMShrink/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCMShrink/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipCMShrink/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipCMShrink/#eq","text":"[Source] fun box eq( that: ZipCMShrink val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCMShrink/#parameters","text":"that: ZipCMShrink val","title":"Parameters"},{"location":"ponyzip-ZipCMShrink/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMShrink/#ne","text":"[Source] fun box ne( that: ZipCMShrink val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCMShrink/#parameters_1","text":"that: ZipCMShrink val","title":"Parameters"},{"location":"ponyzip-ZipCMShrink/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMStore/","text":"ZipCMStore \u00b6 [Source] primitive val ZipCMStore Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCMStore val^ Returns \u00b6 ZipCMStore val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipCMStore val) : Bool val Parameters \u00b6 that: ZipCMStore val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCMStore val) : Bool val Parameters \u00b6 that: ZipCMStore val Returns \u00b6 Bool val","title":"primitive ZipCMStore"},{"location":"ponyzip-ZipCMStore/#zipcmstore","text":"[Source] primitive val ZipCMStore","title":"ZipCMStore"},{"location":"ponyzip-ZipCMStore/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCMStore/#create","text":"[Source] new val create() : ZipCMStore val^","title":"create"},{"location":"ponyzip-ZipCMStore/#returns","text":"ZipCMStore val^","title":"Returns"},{"location":"ponyzip-ZipCMStore/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCMStore/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipCMStore/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipCMStore/#eq","text":"[Source] fun box eq( that: ZipCMStore val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCMStore/#parameters","text":"that: ZipCMStore val","title":"Parameters"},{"location":"ponyzip-ZipCMStore/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMStore/#ne","text":"[Source] fun box ne( that: ZipCMStore val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCMStore/#parameters_1","text":"that: ZipCMStore val","title":"Parameters"},{"location":"ponyzip-ZipCMStore/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMTerse/","text":"ZipCMTerse \u00b6 [Source] primitive val ZipCMTerse Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCMTerse val^ Returns \u00b6 ZipCMTerse val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipCMTerse val) : Bool val Parameters \u00b6 that: ZipCMTerse val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCMTerse val) : Bool val Parameters \u00b6 that: ZipCMTerse val Returns \u00b6 Bool val","title":"primitive ZipCMTerse"},{"location":"ponyzip-ZipCMTerse/#zipcmterse","text":"[Source] primitive val ZipCMTerse","title":"ZipCMTerse"},{"location":"ponyzip-ZipCMTerse/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCMTerse/#create","text":"[Source] new val create() : ZipCMTerse val^","title":"create"},{"location":"ponyzip-ZipCMTerse/#returns","text":"ZipCMTerse val^","title":"Returns"},{"location":"ponyzip-ZipCMTerse/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCMTerse/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipCMTerse/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipCMTerse/#eq","text":"[Source] fun box eq( that: ZipCMTerse val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCMTerse/#parameters","text":"that: ZipCMTerse val","title":"Parameters"},{"location":"ponyzip-ZipCMTerse/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMTerse/#ne","text":"[Source] fun box ne( that: ZipCMTerse val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCMTerse/#parameters_1","text":"that: ZipCMTerse val","title":"Parameters"},{"location":"ponyzip-ZipCMTerse/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMWavpack/","text":"ZipCMWavpack \u00b6 [Source] primitive val ZipCMWavpack Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCMWavpack val^ Returns \u00b6 ZipCMWavpack val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipCMWavpack val) : Bool val Parameters \u00b6 that: ZipCMWavpack val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCMWavpack val) : Bool val Parameters \u00b6 that: ZipCMWavpack val Returns \u00b6 Bool val","title":"primitive ZipCMWavpack"},{"location":"ponyzip-ZipCMWavpack/#zipcmwavpack","text":"[Source] primitive val ZipCMWavpack","title":"ZipCMWavpack"},{"location":"ponyzip-ZipCMWavpack/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCMWavpack/#create","text":"[Source] new val create() : ZipCMWavpack val^","title":"create"},{"location":"ponyzip-ZipCMWavpack/#returns","text":"ZipCMWavpack val^","title":"Returns"},{"location":"ponyzip-ZipCMWavpack/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCMWavpack/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipCMWavpack/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipCMWavpack/#eq","text":"[Source] fun box eq( that: ZipCMWavpack val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCMWavpack/#parameters","text":"that: ZipCMWavpack val","title":"Parameters"},{"location":"ponyzip-ZipCMWavpack/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMWavpack/#ne","text":"[Source] fun box ne( that: ZipCMWavpack val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCMWavpack/#parameters_1","text":"that: ZipCMWavpack val","title":"Parameters"},{"location":"ponyzip-ZipCMWavpack/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMxz/","text":"ZipCMxz \u00b6 [Source] primitive val ZipCMxz Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCMxz val^ Returns \u00b6 ZipCMxz val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipCMxz val) : Bool val Parameters \u00b6 that: ZipCMxz val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCMxz val) : Bool val Parameters \u00b6 that: ZipCMxz val Returns \u00b6 Bool val","title":"primitive ZipCMxz"},{"location":"ponyzip-ZipCMxz/#zipcmxz","text":"[Source] primitive val ZipCMxz","title":"ZipCMxz"},{"location":"ponyzip-ZipCMxz/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCMxz/#create","text":"[Source] new val create() : ZipCMxz val^","title":"create"},{"location":"ponyzip-ZipCMxz/#returns","text":"ZipCMxz val^","title":"Returns"},{"location":"ponyzip-ZipCMxz/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCMxz/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipCMxz/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipCMxz/#eq","text":"[Source] fun box eq( that: ZipCMxz val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCMxz/#parameters","text":"that: ZipCMxz val","title":"Parameters"},{"location":"ponyzip-ZipCMxz/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCMxz/#ne","text":"[Source] fun box ne( that: ZipCMxz val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCMxz/#parameters_1","text":"that: ZipCMxz val","title":"Parameters"},{"location":"ponyzip-ZipCMxz/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCheckcons/","text":"ZipCheckcons \u00b6 [Source] primitive val ZipCheckcons Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCheckcons val^ Returns \u00b6 ZipCheckcons val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipCheckcons val) : Bool val Parameters \u00b6 that: ZipCheckcons val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCheckcons val) : Bool val Parameters \u00b6 that: ZipCheckcons val Returns \u00b6 Bool val","title":"primitive ZipCheckcons"},{"location":"ponyzip-ZipCheckcons/#zipcheckcons","text":"[Source] primitive val ZipCheckcons","title":"ZipCheckcons"},{"location":"ponyzip-ZipCheckcons/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCheckcons/#create","text":"[Source] new val create() : ZipCheckcons val^","title":"create"},{"location":"ponyzip-ZipCheckcons/#returns","text":"ZipCheckcons val^","title":"Returns"},{"location":"ponyzip-ZipCheckcons/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCheckcons/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipCheckcons/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipCheckcons/#eq","text":"[Source] fun box eq( that: ZipCheckcons val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCheckcons/#parameters","text":"that: ZipCheckcons val","title":"Parameters"},{"location":"ponyzip-ZipCheckcons/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCheckcons/#ne","text":"[Source] fun box ne( that: ZipCheckcons val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCheckcons/#parameters_1","text":"that: ZipCheckcons val","title":"Parameters"},{"location":"ponyzip-ZipCheckcons/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCreate/","text":"ZipCreate \u00b6 [Source] primitive val ZipCreate Constructors \u00b6 create \u00b6 [Source] new val create() : ZipCreate val^ Returns \u00b6 ZipCreate val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipCreate val) : Bool val Parameters \u00b6 that: ZipCreate val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipCreate val) : Bool val Parameters \u00b6 that: ZipCreate val Returns \u00b6 Bool val","title":"primitive ZipCreate"},{"location":"ponyzip-ZipCreate/#zipcreate","text":"[Source] primitive val ZipCreate","title":"ZipCreate"},{"location":"ponyzip-ZipCreate/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipCreate/#create","text":"[Source] new val create() : ZipCreate val^","title":"create"},{"location":"ponyzip-ZipCreate/#returns","text":"ZipCreate val^","title":"Returns"},{"location":"ponyzip-ZipCreate/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipCreate/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipCreate/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipCreate/#eq","text":"[Source] fun box eq( that: ZipCreate val) : Bool val","title":"eq"},{"location":"ponyzip-ZipCreate/#parameters","text":"that: ZipCreate val","title":"Parameters"},{"location":"ponyzip-ZipCreate/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipCreate/#ne","text":"[Source] fun box ne( that: ZipCreate val) : Bool val","title":"ne"},{"location":"ponyzip-ZipCreate/#parameters_1","text":"that: ZipCreate val","title":"Parameters"},{"location":"ponyzip-ZipCreate/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEM3des112/","text":"ZipEM3des112 \u00b6 [Source] primitive val ZipEM3des112 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipEM3des112 val^ Returns \u00b6 ZipEM3des112 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipEM3des112 val) : Bool val Parameters \u00b6 that: ZipEM3des112 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipEM3des112 val) : Bool val Parameters \u00b6 that: ZipEM3des112 val Returns \u00b6 Bool val","title":"primitive ZipEM3des112"},{"location":"ponyzip-ZipEM3des112/#zipem3des112","text":"[Source] primitive val ZipEM3des112","title":"ZipEM3des112"},{"location":"ponyzip-ZipEM3des112/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipEM3des112/#create","text":"[Source] new val create() : ZipEM3des112 val^","title":"create"},{"location":"ponyzip-ZipEM3des112/#returns","text":"ZipEM3des112 val^","title":"Returns"},{"location":"ponyzip-ZipEM3des112/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipEM3des112/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipEM3des112/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipEM3des112/#eq","text":"[Source] fun box eq( that: ZipEM3des112 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipEM3des112/#parameters","text":"that: ZipEM3des112 val","title":"Parameters"},{"location":"ponyzip-ZipEM3des112/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEM3des112/#ne","text":"[Source] fun box ne( that: ZipEM3des112 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipEM3des112/#parameters_1","text":"that: ZipEM3des112 val","title":"Parameters"},{"location":"ponyzip-ZipEM3des112/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEM3des168/","text":"ZipEM3des168 \u00b6 [Source] primitive val ZipEM3des168 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipEM3des168 val^ Returns \u00b6 ZipEM3des168 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipEM3des168 val) : Bool val Parameters \u00b6 that: ZipEM3des168 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipEM3des168 val) : Bool val Parameters \u00b6 that: ZipEM3des168 val Returns \u00b6 Bool val","title":"primitive ZipEM3des168"},{"location":"ponyzip-ZipEM3des168/#zipem3des168","text":"[Source] primitive val ZipEM3des168","title":"ZipEM3des168"},{"location":"ponyzip-ZipEM3des168/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipEM3des168/#create","text":"[Source] new val create() : ZipEM3des168 val^","title":"create"},{"location":"ponyzip-ZipEM3des168/#returns","text":"ZipEM3des168 val^","title":"Returns"},{"location":"ponyzip-ZipEM3des168/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipEM3des168/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipEM3des168/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipEM3des168/#eq","text":"[Source] fun box eq( that: ZipEM3des168 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipEM3des168/#parameters","text":"that: ZipEM3des168 val","title":"Parameters"},{"location":"ponyzip-ZipEM3des168/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEM3des168/#ne","text":"[Source] fun box ne( that: ZipEM3des168 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipEM3des168/#parameters_1","text":"that: ZipEM3des168 val","title":"Parameters"},{"location":"ponyzip-ZipEM3des168/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMAes128/","text":"ZipEMAes128 \u00b6 [Source] primitive val ZipEMAes128 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipEMAes128 val^ Returns \u00b6 ZipEMAes128 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipEMAes128 val) : Bool val Parameters \u00b6 that: ZipEMAes128 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipEMAes128 val) : Bool val Parameters \u00b6 that: ZipEMAes128 val Returns \u00b6 Bool val","title":"primitive ZipEMAes128"},{"location":"ponyzip-ZipEMAes128/#zipemaes128","text":"[Source] primitive val ZipEMAes128","title":"ZipEMAes128"},{"location":"ponyzip-ZipEMAes128/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipEMAes128/#create","text":"[Source] new val create() : ZipEMAes128 val^","title":"create"},{"location":"ponyzip-ZipEMAes128/#returns","text":"ZipEMAes128 val^","title":"Returns"},{"location":"ponyzip-ZipEMAes128/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipEMAes128/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipEMAes128/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipEMAes128/#eq","text":"[Source] fun box eq( that: ZipEMAes128 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipEMAes128/#parameters","text":"that: ZipEMAes128 val","title":"Parameters"},{"location":"ponyzip-ZipEMAes128/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMAes128/#ne","text":"[Source] fun box ne( that: ZipEMAes128 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipEMAes128/#parameters_1","text":"that: ZipEMAes128 val","title":"Parameters"},{"location":"ponyzip-ZipEMAes128/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMAes192/","text":"ZipEMAes192 \u00b6 [Source] primitive val ZipEMAes192 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipEMAes192 val^ Returns \u00b6 ZipEMAes192 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipEMAes192 val) : Bool val Parameters \u00b6 that: ZipEMAes192 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipEMAes192 val) : Bool val Parameters \u00b6 that: ZipEMAes192 val Returns \u00b6 Bool val","title":"primitive ZipEMAes192"},{"location":"ponyzip-ZipEMAes192/#zipemaes192","text":"[Source] primitive val ZipEMAes192","title":"ZipEMAes192"},{"location":"ponyzip-ZipEMAes192/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipEMAes192/#create","text":"[Source] new val create() : ZipEMAes192 val^","title":"create"},{"location":"ponyzip-ZipEMAes192/#returns","text":"ZipEMAes192 val^","title":"Returns"},{"location":"ponyzip-ZipEMAes192/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipEMAes192/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipEMAes192/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipEMAes192/#eq","text":"[Source] fun box eq( that: ZipEMAes192 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipEMAes192/#parameters","text":"that: ZipEMAes192 val","title":"Parameters"},{"location":"ponyzip-ZipEMAes192/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMAes192/#ne","text":"[Source] fun box ne( that: ZipEMAes192 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipEMAes192/#parameters_1","text":"that: ZipEMAes192 val","title":"Parameters"},{"location":"ponyzip-ZipEMAes192/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMAes256/","text":"ZipEMAes256 \u00b6 [Source] primitive val ZipEMAes256 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipEMAes256 val^ Returns \u00b6 ZipEMAes256 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipEMAes256 val) : Bool val Parameters \u00b6 that: ZipEMAes256 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipEMAes256 val) : Bool val Parameters \u00b6 that: ZipEMAes256 val Returns \u00b6 Bool val","title":"primitive ZipEMAes256"},{"location":"ponyzip-ZipEMAes256/#zipemaes256","text":"[Source] primitive val ZipEMAes256","title":"ZipEMAes256"},{"location":"ponyzip-ZipEMAes256/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipEMAes256/#create","text":"[Source] new val create() : ZipEMAes256 val^","title":"create"},{"location":"ponyzip-ZipEMAes256/#returns","text":"ZipEMAes256 val^","title":"Returns"},{"location":"ponyzip-ZipEMAes256/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipEMAes256/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipEMAes256/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipEMAes256/#eq","text":"[Source] fun box eq( that: ZipEMAes256 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipEMAes256/#parameters","text":"that: ZipEMAes256 val","title":"Parameters"},{"location":"ponyzip-ZipEMAes256/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMAes256/#ne","text":"[Source] fun box ne( that: ZipEMAes256 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipEMAes256/#parameters_1","text":"that: ZipEMAes256 val","title":"Parameters"},{"location":"ponyzip-ZipEMAes256/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMDes/","text":"ZipEMDes \u00b6 [Source] primitive val ZipEMDes Constructors \u00b6 create \u00b6 [Source] new val create() : ZipEMDes val^ Returns \u00b6 ZipEMDes val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipEMDes val) : Bool val Parameters \u00b6 that: ZipEMDes val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipEMDes val) : Bool val Parameters \u00b6 that: ZipEMDes val Returns \u00b6 Bool val","title":"primitive ZipEMDes"},{"location":"ponyzip-ZipEMDes/#zipemdes","text":"[Source] primitive val ZipEMDes","title":"ZipEMDes"},{"location":"ponyzip-ZipEMDes/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipEMDes/#create","text":"[Source] new val create() : ZipEMDes val^","title":"create"},{"location":"ponyzip-ZipEMDes/#returns","text":"ZipEMDes val^","title":"Returns"},{"location":"ponyzip-ZipEMDes/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipEMDes/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipEMDes/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipEMDes/#eq","text":"[Source] fun box eq( that: ZipEMDes val) : Bool val","title":"eq"},{"location":"ponyzip-ZipEMDes/#parameters","text":"that: ZipEMDes val","title":"Parameters"},{"location":"ponyzip-ZipEMDes/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMDes/#ne","text":"[Source] fun box ne( that: ZipEMDes val) : Bool val","title":"ne"},{"location":"ponyzip-ZipEMDes/#parameters_1","text":"that: ZipEMDes val","title":"Parameters"},{"location":"ponyzip-ZipEMDes/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMNone/","text":"ZipEMNone \u00b6 [Source] primitive val ZipEMNone Constructors \u00b6 create \u00b6 [Source] new val create() : ZipEMNone val^ Returns \u00b6 ZipEMNone val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipEMNone val) : Bool val Parameters \u00b6 that: ZipEMNone val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipEMNone val) : Bool val Parameters \u00b6 that: ZipEMNone val Returns \u00b6 Bool val","title":"primitive ZipEMNone"},{"location":"ponyzip-ZipEMNone/#zipemnone","text":"[Source] primitive val ZipEMNone","title":"ZipEMNone"},{"location":"ponyzip-ZipEMNone/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipEMNone/#create","text":"[Source] new val create() : ZipEMNone val^","title":"create"},{"location":"ponyzip-ZipEMNone/#returns","text":"ZipEMNone val^","title":"Returns"},{"location":"ponyzip-ZipEMNone/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipEMNone/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipEMNone/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipEMNone/#eq","text":"[Source] fun box eq( that: ZipEMNone val) : Bool val","title":"eq"},{"location":"ponyzip-ZipEMNone/#parameters","text":"that: ZipEMNone val","title":"Parameters"},{"location":"ponyzip-ZipEMNone/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMNone/#ne","text":"[Source] fun box ne( that: ZipEMNone val) : Bool val","title":"ne"},{"location":"ponyzip-ZipEMNone/#parameters_1","text":"that: ZipEMNone val","title":"Parameters"},{"location":"ponyzip-ZipEMNone/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMPkzipaes128/","text":"ZipEMPkzipaes128 \u00b6 [Source] primitive val ZipEMPkzipaes128 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipEMPkzipaes128 val^ Returns \u00b6 ZipEMPkzipaes128 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipEMPkzipaes128 val) : Bool val Parameters \u00b6 that: ZipEMPkzipaes128 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipEMPkzipaes128 val) : Bool val Parameters \u00b6 that: ZipEMPkzipaes128 val Returns \u00b6 Bool val","title":"primitive ZipEMPkzipaes128"},{"location":"ponyzip-ZipEMPkzipaes128/#zipempkzipaes128","text":"[Source] primitive val ZipEMPkzipaes128","title":"ZipEMPkzipaes128"},{"location":"ponyzip-ZipEMPkzipaes128/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipEMPkzipaes128/#create","text":"[Source] new val create() : ZipEMPkzipaes128 val^","title":"create"},{"location":"ponyzip-ZipEMPkzipaes128/#returns","text":"ZipEMPkzipaes128 val^","title":"Returns"},{"location":"ponyzip-ZipEMPkzipaes128/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipEMPkzipaes128/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipEMPkzipaes128/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipEMPkzipaes128/#eq","text":"[Source] fun box eq( that: ZipEMPkzipaes128 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipEMPkzipaes128/#parameters","text":"that: ZipEMPkzipaes128 val","title":"Parameters"},{"location":"ponyzip-ZipEMPkzipaes128/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMPkzipaes128/#ne","text":"[Source] fun box ne( that: ZipEMPkzipaes128 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipEMPkzipaes128/#parameters_1","text":"that: ZipEMPkzipaes128 val","title":"Parameters"},{"location":"ponyzip-ZipEMPkzipaes128/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMPkzipaes192/","text":"ZipEMPkzipaes192 \u00b6 [Source] primitive val ZipEMPkzipaes192 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipEMPkzipaes192 val^ Returns \u00b6 ZipEMPkzipaes192 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipEMPkzipaes192 val) : Bool val Parameters \u00b6 that: ZipEMPkzipaes192 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipEMPkzipaes192 val) : Bool val Parameters \u00b6 that: ZipEMPkzipaes192 val Returns \u00b6 Bool val","title":"primitive ZipEMPkzipaes192"},{"location":"ponyzip-ZipEMPkzipaes192/#zipempkzipaes192","text":"[Source] primitive val ZipEMPkzipaes192","title":"ZipEMPkzipaes192"},{"location":"ponyzip-ZipEMPkzipaes192/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipEMPkzipaes192/#create","text":"[Source] new val create() : ZipEMPkzipaes192 val^","title":"create"},{"location":"ponyzip-ZipEMPkzipaes192/#returns","text":"ZipEMPkzipaes192 val^","title":"Returns"},{"location":"ponyzip-ZipEMPkzipaes192/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipEMPkzipaes192/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipEMPkzipaes192/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipEMPkzipaes192/#eq","text":"[Source] fun box eq( that: ZipEMPkzipaes192 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipEMPkzipaes192/#parameters","text":"that: ZipEMPkzipaes192 val","title":"Parameters"},{"location":"ponyzip-ZipEMPkzipaes192/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMPkzipaes192/#ne","text":"[Source] fun box ne( that: ZipEMPkzipaes192 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipEMPkzipaes192/#parameters_1","text":"that: ZipEMPkzipaes192 val","title":"Parameters"},{"location":"ponyzip-ZipEMPkzipaes192/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMPkzipaes256/","text":"ZipEMPkzipaes256 \u00b6 [Source] primitive val ZipEMPkzipaes256 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipEMPkzipaes256 val^ Returns \u00b6 ZipEMPkzipaes256 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipEMPkzipaes256 val) : Bool val Parameters \u00b6 that: ZipEMPkzipaes256 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipEMPkzipaes256 val) : Bool val Parameters \u00b6 that: ZipEMPkzipaes256 val Returns \u00b6 Bool val","title":"primitive ZipEMPkzipaes256"},{"location":"ponyzip-ZipEMPkzipaes256/#zipempkzipaes256","text":"[Source] primitive val ZipEMPkzipaes256","title":"ZipEMPkzipaes256"},{"location":"ponyzip-ZipEMPkzipaes256/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipEMPkzipaes256/#create","text":"[Source] new val create() : ZipEMPkzipaes256 val^","title":"create"},{"location":"ponyzip-ZipEMPkzipaes256/#returns","text":"ZipEMPkzipaes256 val^","title":"Returns"},{"location":"ponyzip-ZipEMPkzipaes256/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipEMPkzipaes256/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipEMPkzipaes256/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipEMPkzipaes256/#eq","text":"[Source] fun box eq( that: ZipEMPkzipaes256 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipEMPkzipaes256/#parameters","text":"that: ZipEMPkzipaes256 val","title":"Parameters"},{"location":"ponyzip-ZipEMPkzipaes256/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMPkzipaes256/#ne","text":"[Source] fun box ne( that: ZipEMPkzipaes256 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipEMPkzipaes256/#parameters_1","text":"that: ZipEMPkzipaes256 val","title":"Parameters"},{"location":"ponyzip-ZipEMPkzipaes256/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMRc2/","text":"ZipEMRc2 \u00b6 [Source] primitive val ZipEMRc2 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipEMRc2 val^ Returns \u00b6 ZipEMRc2 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipEMRc2 val) : Bool val Parameters \u00b6 that: ZipEMRc2 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipEMRc2 val) : Bool val Parameters \u00b6 that: ZipEMRc2 val Returns \u00b6 Bool val","title":"primitive ZipEMRc2"},{"location":"ponyzip-ZipEMRc2/#zipemrc2","text":"[Source] primitive val ZipEMRc2","title":"ZipEMRc2"},{"location":"ponyzip-ZipEMRc2/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipEMRc2/#create","text":"[Source] new val create() : ZipEMRc2 val^","title":"create"},{"location":"ponyzip-ZipEMRc2/#returns","text":"ZipEMRc2 val^","title":"Returns"},{"location":"ponyzip-ZipEMRc2/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipEMRc2/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipEMRc2/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipEMRc2/#eq","text":"[Source] fun box eq( that: ZipEMRc2 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipEMRc2/#parameters","text":"that: ZipEMRc2 val","title":"Parameters"},{"location":"ponyzip-ZipEMRc2/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMRc2/#ne","text":"[Source] fun box ne( that: ZipEMRc2 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipEMRc2/#parameters_1","text":"that: ZipEMRc2 val","title":"Parameters"},{"location":"ponyzip-ZipEMRc2/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMRc2old/","text":"ZipEMRc2old \u00b6 [Source] primitive val ZipEMRc2old Constructors \u00b6 create \u00b6 [Source] new val create() : ZipEMRc2old val^ Returns \u00b6 ZipEMRc2old val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipEMRc2old val) : Bool val Parameters \u00b6 that: ZipEMRc2old val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipEMRc2old val) : Bool val Parameters \u00b6 that: ZipEMRc2old val Returns \u00b6 Bool val","title":"primitive ZipEMRc2old"},{"location":"ponyzip-ZipEMRc2old/#zipemrc2old","text":"[Source] primitive val ZipEMRc2old","title":"ZipEMRc2old"},{"location":"ponyzip-ZipEMRc2old/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipEMRc2old/#create","text":"[Source] new val create() : ZipEMRc2old val^","title":"create"},{"location":"ponyzip-ZipEMRc2old/#returns","text":"ZipEMRc2old val^","title":"Returns"},{"location":"ponyzip-ZipEMRc2old/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipEMRc2old/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipEMRc2old/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipEMRc2old/#eq","text":"[Source] fun box eq( that: ZipEMRc2old val) : Bool val","title":"eq"},{"location":"ponyzip-ZipEMRc2old/#parameters","text":"that: ZipEMRc2old val","title":"Parameters"},{"location":"ponyzip-ZipEMRc2old/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMRc2old/#ne","text":"[Source] fun box ne( that: ZipEMRc2old val) : Bool val","title":"ne"},{"location":"ponyzip-ZipEMRc2old/#parameters_1","text":"that: ZipEMRc2old val","title":"Parameters"},{"location":"ponyzip-ZipEMRc2old/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMRc4/","text":"ZipEMRc4 \u00b6 [Source] primitive val ZipEMRc4 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipEMRc4 val^ Returns \u00b6 ZipEMRc4 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipEMRc4 val) : Bool val Parameters \u00b6 that: ZipEMRc4 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipEMRc4 val) : Bool val Parameters \u00b6 that: ZipEMRc4 val Returns \u00b6 Bool val","title":"primitive ZipEMRc4"},{"location":"ponyzip-ZipEMRc4/#zipemrc4","text":"[Source] primitive val ZipEMRc4","title":"ZipEMRc4"},{"location":"ponyzip-ZipEMRc4/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipEMRc4/#create","text":"[Source] new val create() : ZipEMRc4 val^","title":"create"},{"location":"ponyzip-ZipEMRc4/#returns","text":"ZipEMRc4 val^","title":"Returns"},{"location":"ponyzip-ZipEMRc4/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipEMRc4/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipEMRc4/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipEMRc4/#eq","text":"[Source] fun box eq( that: ZipEMRc4 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipEMRc4/#parameters","text":"that: ZipEMRc4 val","title":"Parameters"},{"location":"ponyzip-ZipEMRc4/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMRc4/#ne","text":"[Source] fun box ne( that: ZipEMRc4 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipEMRc4/#parameters_1","text":"that: ZipEMRc4 val","title":"Parameters"},{"location":"ponyzip-ZipEMRc4/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMTradpkware/","text":"ZipEMTradpkware \u00b6 [Source] primitive val ZipEMTradpkware Constructors \u00b6 create \u00b6 [Source] new val create() : ZipEMTradpkware val^ Returns \u00b6 ZipEMTradpkware val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipEMTradpkware val) : Bool val Parameters \u00b6 that: ZipEMTradpkware val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipEMTradpkware val) : Bool val Parameters \u00b6 that: ZipEMTradpkware val Returns \u00b6 Bool val","title":"primitive ZipEMTradpkware"},{"location":"ponyzip-ZipEMTradpkware/#zipemtradpkware","text":"[Source] primitive val ZipEMTradpkware","title":"ZipEMTradpkware"},{"location":"ponyzip-ZipEMTradpkware/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipEMTradpkware/#create","text":"[Source] new val create() : ZipEMTradpkware val^","title":"create"},{"location":"ponyzip-ZipEMTradpkware/#returns","text":"ZipEMTradpkware val^","title":"Returns"},{"location":"ponyzip-ZipEMTradpkware/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipEMTradpkware/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipEMTradpkware/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipEMTradpkware/#eq","text":"[Source] fun box eq( that: ZipEMTradpkware val) : Bool val","title":"eq"},{"location":"ponyzip-ZipEMTradpkware/#parameters","text":"that: ZipEMTradpkware val","title":"Parameters"},{"location":"ponyzip-ZipEMTradpkware/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMTradpkware/#ne","text":"[Source] fun box ne( that: ZipEMTradpkware val) : Bool val","title":"ne"},{"location":"ponyzip-ZipEMTradpkware/#parameters_1","text":"that: ZipEMTradpkware val","title":"Parameters"},{"location":"ponyzip-ZipEMTradpkware/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMType/","text":"ZipEMType \u00b6 [Source] type ZipEMType is (ZipEMNone val | ZipEMTradpkware val | ZipEMDes val | ZipEMRc2old val | ZipEM3des168 val | ZipEM3des112 val | ZipEMPkzipaes128 val | ZipEMPkzipaes192 val | ZipEMPkzipaes256 val | ZipEMRc2 val | ZipEMRc4 val | ZipEMAes128 val | ZipEMAes192 val | ZipEMAes256 val | ZipEMUnknown val) Type Alias For \u00b6 ( ZipEMNone val | ZipEMTradpkware val | ZipEMDes val | ZipEMRc2old val | ZipEM3des168 val | ZipEM3des112 val | ZipEMPkzipaes128 val | ZipEMPkzipaes192 val | ZipEMPkzipaes256 val | ZipEMRc2 val | ZipEMRc4 val | ZipEMAes128 val | ZipEMAes192 val | ZipEMAes256 val | ZipEMUnknown val)","title":"type ZipEMType"},{"location":"ponyzip-ZipEMType/#zipemtype","text":"[Source] type ZipEMType is (ZipEMNone val | ZipEMTradpkware val | ZipEMDes val | ZipEMRc2old val | ZipEM3des168 val | ZipEM3des112 val | ZipEMPkzipaes128 val | ZipEMPkzipaes192 val | ZipEMPkzipaes256 val | ZipEMRc2 val | ZipEMRc4 val | ZipEMAes128 val | ZipEMAes192 val | ZipEMAes256 val | ZipEMUnknown val)","title":"ZipEMType"},{"location":"ponyzip-ZipEMType/#type-alias-for","text":"( ZipEMNone val | ZipEMTradpkware val | ZipEMDes val | ZipEMRc2old val | ZipEM3des168 val | ZipEM3des112 val | ZipEMPkzipaes128 val | ZipEMPkzipaes192 val | ZipEMPkzipaes256 val | ZipEMRc2 val | ZipEMRc4 val | ZipEMAes128 val | ZipEMAes192 val | ZipEMAes256 val | ZipEMUnknown val)","title":"Type Alias For"},{"location":"ponyzip-ZipEMUnknown/","text":"ZipEMUnknown \u00b6 [Source] primitive val ZipEMUnknown Constructors \u00b6 create \u00b6 [Source] new val create() : ZipEMUnknown val^ Returns \u00b6 ZipEMUnknown val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipEMUnknown val) : Bool val Parameters \u00b6 that: ZipEMUnknown val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipEMUnknown val) : Bool val Parameters \u00b6 that: ZipEMUnknown val Returns \u00b6 Bool val","title":"primitive ZipEMUnknown"},{"location":"ponyzip-ZipEMUnknown/#zipemunknown","text":"[Source] primitive val ZipEMUnknown","title":"ZipEMUnknown"},{"location":"ponyzip-ZipEMUnknown/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipEMUnknown/#create","text":"[Source] new val create() : ZipEMUnknown val^","title":"create"},{"location":"ponyzip-ZipEMUnknown/#returns","text":"ZipEMUnknown val^","title":"Returns"},{"location":"ponyzip-ZipEMUnknown/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipEMUnknown/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipEMUnknown/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipEMUnknown/#eq","text":"[Source] fun box eq( that: ZipEMUnknown val) : Bool val","title":"eq"},{"location":"ponyzip-ZipEMUnknown/#parameters","text":"that: ZipEMUnknown val","title":"Parameters"},{"location":"ponyzip-ZipEMUnknown/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEMUnknown/#ne","text":"[Source] fun box ne( that: ZipEMUnknown val) : Bool val","title":"ne"},{"location":"ponyzip-ZipEMUnknown/#parameters_1","text":"that: ZipEMUnknown val","title":"Parameters"},{"location":"ponyzip-ZipEMUnknown/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipER/","text":"ZipER \u00b6 [Source] type ZipER is (ZipEROK val | ZipERMultidisk val | ZipERRename val | ZipERClose val | ZipERSeek val | ZipERRead val | ZipERWrite val | ZipERCRC val | ZipERZipclosed val | ZipERNoent val | ZipERExists val | ZipEROpen val | ZipERTmpopen val | ZipERZlib val | ZipERMemory val | ZipERChanged val | ZipERCompnotsupp val | ZipEREof val | ZipERInval val | ZipERNozip val | ZipERInternal val | ZipERIncons val | ZipERRemove val | ZipERDeleted val | ZipEREncrnotsupp val | ZipERRDOnly val | ZipERNopasswd val | ZipERWrongpasswd val | ZipEROpnotsupp val | ZipERInuse val | ZipERTell val | ZipERCompresseddata val | ZipERCancelled val) Type Alias For \u00b6 ( ZipEROK val | ZipERMultidisk val | ZipERRename val | ZipERClose val | ZipERSeek val | ZipERRead val | ZipERWrite val | ZipERCRC val | ZipERZipclosed val | ZipERNoent val | ZipERExists val | ZipEROpen val | ZipERTmpopen val | ZipERZlib val | ZipERMemory val | ZipERChanged val | ZipERCompnotsupp val | ZipEREof val | ZipERInval val | ZipERNozip val | ZipERInternal val | ZipERIncons val | ZipERRemove val | ZipERDeleted val | ZipEREncrnotsupp val | ZipERRDOnly val | ZipERNopasswd val | ZipERWrongpasswd val | ZipEROpnotsupp val | ZipERInuse val | ZipERTell val | ZipERCompresseddata val | ZipERCancelled val)","title":"type ZipER"},{"location":"ponyzip-ZipER/#ziper","text":"[Source] type ZipER is (ZipEROK val | ZipERMultidisk val | ZipERRename val | ZipERClose val | ZipERSeek val | ZipERRead val | ZipERWrite val | ZipERCRC val | ZipERZipclosed val | ZipERNoent val | ZipERExists val | ZipEROpen val | ZipERTmpopen val | ZipERZlib val | ZipERMemory val | ZipERChanged val | ZipERCompnotsupp val | ZipEREof val | ZipERInval val | ZipERNozip val | ZipERInternal val | ZipERIncons val | ZipERRemove val | ZipERDeleted val | ZipEREncrnotsupp val | ZipERRDOnly val | ZipERNopasswd val | ZipERWrongpasswd val | ZipEROpnotsupp val | ZipERInuse val | ZipERTell val | ZipERCompresseddata val | ZipERCancelled val)","title":"ZipER"},{"location":"ponyzip-ZipER/#type-alias-for","text":"( ZipEROK val | ZipERMultidisk val | ZipERRename val | ZipERClose val | ZipERSeek val | ZipERRead val | ZipERWrite val | ZipERCRC val | ZipERZipclosed val | ZipERNoent val | ZipERExists val | ZipEROpen val | ZipERTmpopen val | ZipERZlib val | ZipERMemory val | ZipERChanged val | ZipERCompnotsupp val | ZipEREof val | ZipERInval val | ZipERNozip val | ZipERInternal val | ZipERIncons val | ZipERRemove val | ZipERDeleted val | ZipEREncrnotsupp val | ZipERRDOnly val | ZipERNopasswd val | ZipERWrongpasswd val | ZipEROpnotsupp val | ZipERInuse val | ZipERTell val | ZipERCompresseddata val | ZipERCancelled val)","title":"Type Alias For"},{"location":"ponyzip-ZipERCRC/","text":"ZipERCRC \u00b6 [Source] primitive val ZipERCRC Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERCRC val^ Returns \u00b6 ZipERCRC val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERCRC val) : Bool val Parameters \u00b6 that: ZipERCRC val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERCRC val) : Bool val Parameters \u00b6 that: ZipERCRC val Returns \u00b6 Bool val","title":"primitive ZipERCRC"},{"location":"ponyzip-ZipERCRC/#zipercrc","text":"[Source] primitive val ZipERCRC","title":"ZipERCRC"},{"location":"ponyzip-ZipERCRC/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERCRC/#create","text":"[Source] new val create() : ZipERCRC val^","title":"create"},{"location":"ponyzip-ZipERCRC/#returns","text":"ZipERCRC val^","title":"Returns"},{"location":"ponyzip-ZipERCRC/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERCRC/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERCRC/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERCRC/#eq","text":"[Source] fun box eq( that: ZipERCRC val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERCRC/#parameters","text":"that: ZipERCRC val","title":"Parameters"},{"location":"ponyzip-ZipERCRC/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERCRC/#ne","text":"[Source] fun box ne( that: ZipERCRC val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERCRC/#parameters_1","text":"that: ZipERCRC val","title":"Parameters"},{"location":"ponyzip-ZipERCRC/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERCancelled/","text":"ZipERCancelled \u00b6 [Source] primitive val ZipERCancelled Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERCancelled val^ Returns \u00b6 ZipERCancelled val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERCancelled val) : Bool val Parameters \u00b6 that: ZipERCancelled val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERCancelled val) : Bool val Parameters \u00b6 that: ZipERCancelled val Returns \u00b6 Bool val","title":"primitive ZipERCancelled"},{"location":"ponyzip-ZipERCancelled/#zipercancelled","text":"[Source] primitive val ZipERCancelled","title":"ZipERCancelled"},{"location":"ponyzip-ZipERCancelled/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERCancelled/#create","text":"[Source] new val create() : ZipERCancelled val^","title":"create"},{"location":"ponyzip-ZipERCancelled/#returns","text":"ZipERCancelled val^","title":"Returns"},{"location":"ponyzip-ZipERCancelled/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERCancelled/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERCancelled/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERCancelled/#eq","text":"[Source] fun box eq( that: ZipERCancelled val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERCancelled/#parameters","text":"that: ZipERCancelled val","title":"Parameters"},{"location":"ponyzip-ZipERCancelled/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERCancelled/#ne","text":"[Source] fun box ne( that: ZipERCancelled val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERCancelled/#parameters_1","text":"that: ZipERCancelled val","title":"Parameters"},{"location":"ponyzip-ZipERCancelled/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERChanged/","text":"ZipERChanged \u00b6 [Source] primitive val ZipERChanged Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERChanged val^ Returns \u00b6 ZipERChanged val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERChanged val) : Bool val Parameters \u00b6 that: ZipERChanged val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERChanged val) : Bool val Parameters \u00b6 that: ZipERChanged val Returns \u00b6 Bool val","title":"primitive ZipERChanged"},{"location":"ponyzip-ZipERChanged/#ziperchanged","text":"[Source] primitive val ZipERChanged","title":"ZipERChanged"},{"location":"ponyzip-ZipERChanged/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERChanged/#create","text":"[Source] new val create() : ZipERChanged val^","title":"create"},{"location":"ponyzip-ZipERChanged/#returns","text":"ZipERChanged val^","title":"Returns"},{"location":"ponyzip-ZipERChanged/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERChanged/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERChanged/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERChanged/#eq","text":"[Source] fun box eq( that: ZipERChanged val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERChanged/#parameters","text":"that: ZipERChanged val","title":"Parameters"},{"location":"ponyzip-ZipERChanged/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERChanged/#ne","text":"[Source] fun box ne( that: ZipERChanged val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERChanged/#parameters_1","text":"that: ZipERChanged val","title":"Parameters"},{"location":"ponyzip-ZipERChanged/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERClose/","text":"ZipERClose \u00b6 [Source] primitive val ZipERClose Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERClose val^ Returns \u00b6 ZipERClose val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERClose val) : Bool val Parameters \u00b6 that: ZipERClose val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERClose val) : Bool val Parameters \u00b6 that: ZipERClose val Returns \u00b6 Bool val","title":"primitive ZipERClose"},{"location":"ponyzip-ZipERClose/#ziperclose","text":"[Source] primitive val ZipERClose","title":"ZipERClose"},{"location":"ponyzip-ZipERClose/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERClose/#create","text":"[Source] new val create() : ZipERClose val^","title":"create"},{"location":"ponyzip-ZipERClose/#returns","text":"ZipERClose val^","title":"Returns"},{"location":"ponyzip-ZipERClose/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERClose/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERClose/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERClose/#eq","text":"[Source] fun box eq( that: ZipERClose val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERClose/#parameters","text":"that: ZipERClose val","title":"Parameters"},{"location":"ponyzip-ZipERClose/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERClose/#ne","text":"[Source] fun box ne( that: ZipERClose val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERClose/#parameters_1","text":"that: ZipERClose val","title":"Parameters"},{"location":"ponyzip-ZipERClose/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERCompnotsupp/","text":"ZipERCompnotsupp \u00b6 [Source] primitive val ZipERCompnotsupp Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERCompnotsupp val^ Returns \u00b6 ZipERCompnotsupp val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERCompnotsupp val) : Bool val Parameters \u00b6 that: ZipERCompnotsupp val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERCompnotsupp val) : Bool val Parameters \u00b6 that: ZipERCompnotsupp val Returns \u00b6 Bool val","title":"primitive ZipERCompnotsupp"},{"location":"ponyzip-ZipERCompnotsupp/#zipercompnotsupp","text":"[Source] primitive val ZipERCompnotsupp","title":"ZipERCompnotsupp"},{"location":"ponyzip-ZipERCompnotsupp/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERCompnotsupp/#create","text":"[Source] new val create() : ZipERCompnotsupp val^","title":"create"},{"location":"ponyzip-ZipERCompnotsupp/#returns","text":"ZipERCompnotsupp val^","title":"Returns"},{"location":"ponyzip-ZipERCompnotsupp/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERCompnotsupp/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERCompnotsupp/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERCompnotsupp/#eq","text":"[Source] fun box eq( that: ZipERCompnotsupp val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERCompnotsupp/#parameters","text":"that: ZipERCompnotsupp val","title":"Parameters"},{"location":"ponyzip-ZipERCompnotsupp/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERCompnotsupp/#ne","text":"[Source] fun box ne( that: ZipERCompnotsupp val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERCompnotsupp/#parameters_1","text":"that: ZipERCompnotsupp val","title":"Parameters"},{"location":"ponyzip-ZipERCompnotsupp/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERCompresseddata/","text":"ZipERCompresseddata \u00b6 [Source] primitive val ZipERCompresseddata Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERCompresseddata val^ Returns \u00b6 ZipERCompresseddata val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERCompresseddata val) : Bool val Parameters \u00b6 that: ZipERCompresseddata val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERCompresseddata val) : Bool val Parameters \u00b6 that: ZipERCompresseddata val Returns \u00b6 Bool val","title":"primitive ZipERCompresseddata"},{"location":"ponyzip-ZipERCompresseddata/#zipercompresseddata","text":"[Source] primitive val ZipERCompresseddata","title":"ZipERCompresseddata"},{"location":"ponyzip-ZipERCompresseddata/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERCompresseddata/#create","text":"[Source] new val create() : ZipERCompresseddata val^","title":"create"},{"location":"ponyzip-ZipERCompresseddata/#returns","text":"ZipERCompresseddata val^","title":"Returns"},{"location":"ponyzip-ZipERCompresseddata/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERCompresseddata/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERCompresseddata/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERCompresseddata/#eq","text":"[Source] fun box eq( that: ZipERCompresseddata val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERCompresseddata/#parameters","text":"that: ZipERCompresseddata val","title":"Parameters"},{"location":"ponyzip-ZipERCompresseddata/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERCompresseddata/#ne","text":"[Source] fun box ne( that: ZipERCompresseddata val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERCompresseddata/#parameters_1","text":"that: ZipERCompresseddata val","title":"Parameters"},{"location":"ponyzip-ZipERCompresseddata/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERDeleted/","text":"ZipERDeleted \u00b6 [Source] primitive val ZipERDeleted Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERDeleted val^ Returns \u00b6 ZipERDeleted val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERDeleted val) : Bool val Parameters \u00b6 that: ZipERDeleted val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERDeleted val) : Bool val Parameters \u00b6 that: ZipERDeleted val Returns \u00b6 Bool val","title":"primitive ZipERDeleted"},{"location":"ponyzip-ZipERDeleted/#ziperdeleted","text":"[Source] primitive val ZipERDeleted","title":"ZipERDeleted"},{"location":"ponyzip-ZipERDeleted/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERDeleted/#create","text":"[Source] new val create() : ZipERDeleted val^","title":"create"},{"location":"ponyzip-ZipERDeleted/#returns","text":"ZipERDeleted val^","title":"Returns"},{"location":"ponyzip-ZipERDeleted/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERDeleted/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERDeleted/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERDeleted/#eq","text":"[Source] fun box eq( that: ZipERDeleted val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERDeleted/#parameters","text":"that: ZipERDeleted val","title":"Parameters"},{"location":"ponyzip-ZipERDeleted/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERDeleted/#ne","text":"[Source] fun box ne( that: ZipERDeleted val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERDeleted/#parameters_1","text":"that: ZipERDeleted val","title":"Parameters"},{"location":"ponyzip-ZipERDeleted/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEREncrnotsupp/","text":"ZipEREncrnotsupp \u00b6 [Source] primitive val ZipEREncrnotsupp Constructors \u00b6 create \u00b6 [Source] new val create() : ZipEREncrnotsupp val^ Returns \u00b6 ZipEREncrnotsupp val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipEREncrnotsupp val) : Bool val Parameters \u00b6 that: ZipEREncrnotsupp val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipEREncrnotsupp val) : Bool val Parameters \u00b6 that: ZipEREncrnotsupp val Returns \u00b6 Bool val","title":"primitive ZipEREncrnotsupp"},{"location":"ponyzip-ZipEREncrnotsupp/#ziperencrnotsupp","text":"[Source] primitive val ZipEREncrnotsupp","title":"ZipEREncrnotsupp"},{"location":"ponyzip-ZipEREncrnotsupp/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipEREncrnotsupp/#create","text":"[Source] new val create() : ZipEREncrnotsupp val^","title":"create"},{"location":"ponyzip-ZipEREncrnotsupp/#returns","text":"ZipEREncrnotsupp val^","title":"Returns"},{"location":"ponyzip-ZipEREncrnotsupp/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipEREncrnotsupp/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipEREncrnotsupp/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipEREncrnotsupp/#eq","text":"[Source] fun box eq( that: ZipEREncrnotsupp val) : Bool val","title":"eq"},{"location":"ponyzip-ZipEREncrnotsupp/#parameters","text":"that: ZipEREncrnotsupp val","title":"Parameters"},{"location":"ponyzip-ZipEREncrnotsupp/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEREncrnotsupp/#ne","text":"[Source] fun box ne( that: ZipEREncrnotsupp val) : Bool val","title":"ne"},{"location":"ponyzip-ZipEREncrnotsupp/#parameters_1","text":"that: ZipEREncrnotsupp val","title":"Parameters"},{"location":"ponyzip-ZipEREncrnotsupp/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEREof/","text":"ZipEREof \u00b6 [Source] primitive val ZipEREof Constructors \u00b6 create \u00b6 [Source] new val create() : ZipEREof val^ Returns \u00b6 ZipEREof val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipEREof val) : Bool val Parameters \u00b6 that: ZipEREof val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipEREof val) : Bool val Parameters \u00b6 that: ZipEREof val Returns \u00b6 Bool val","title":"primitive ZipEREof"},{"location":"ponyzip-ZipEREof/#zipereof","text":"[Source] primitive val ZipEREof","title":"ZipEREof"},{"location":"ponyzip-ZipEREof/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipEREof/#create","text":"[Source] new val create() : ZipEREof val^","title":"create"},{"location":"ponyzip-ZipEREof/#returns","text":"ZipEREof val^","title":"Returns"},{"location":"ponyzip-ZipEREof/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipEREof/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipEREof/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipEREof/#eq","text":"[Source] fun box eq( that: ZipEREof val) : Bool val","title":"eq"},{"location":"ponyzip-ZipEREof/#parameters","text":"that: ZipEREof val","title":"Parameters"},{"location":"ponyzip-ZipEREof/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEREof/#ne","text":"[Source] fun box ne( that: ZipEREof val) : Bool val","title":"ne"},{"location":"ponyzip-ZipEREof/#parameters_1","text":"that: ZipEREof val","title":"Parameters"},{"location":"ponyzip-ZipEREof/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERExists/","text":"ZipERExists \u00b6 [Source] primitive val ZipERExists Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERExists val^ Returns \u00b6 ZipERExists val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERExists val) : Bool val Parameters \u00b6 that: ZipERExists val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERExists val) : Bool val Parameters \u00b6 that: ZipERExists val Returns \u00b6 Bool val","title":"primitive ZipERExists"},{"location":"ponyzip-ZipERExists/#ziperexists","text":"[Source] primitive val ZipERExists","title":"ZipERExists"},{"location":"ponyzip-ZipERExists/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERExists/#create","text":"[Source] new val create() : ZipERExists val^","title":"create"},{"location":"ponyzip-ZipERExists/#returns","text":"ZipERExists val^","title":"Returns"},{"location":"ponyzip-ZipERExists/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERExists/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERExists/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERExists/#eq","text":"[Source] fun box eq( that: ZipERExists val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERExists/#parameters","text":"that: ZipERExists val","title":"Parameters"},{"location":"ponyzip-ZipERExists/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERExists/#ne","text":"[Source] fun box ne( that: ZipERExists val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERExists/#parameters_1","text":"that: ZipERExists val","title":"Parameters"},{"location":"ponyzip-ZipERExists/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERIncons/","text":"ZipERIncons \u00b6 [Source] primitive val ZipERIncons Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERIncons val^ Returns \u00b6 ZipERIncons val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERIncons val) : Bool val Parameters \u00b6 that: ZipERIncons val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERIncons val) : Bool val Parameters \u00b6 that: ZipERIncons val Returns \u00b6 Bool val","title":"primitive ZipERIncons"},{"location":"ponyzip-ZipERIncons/#ziperincons","text":"[Source] primitive val ZipERIncons","title":"ZipERIncons"},{"location":"ponyzip-ZipERIncons/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERIncons/#create","text":"[Source] new val create() : ZipERIncons val^","title":"create"},{"location":"ponyzip-ZipERIncons/#returns","text":"ZipERIncons val^","title":"Returns"},{"location":"ponyzip-ZipERIncons/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERIncons/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERIncons/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERIncons/#eq","text":"[Source] fun box eq( that: ZipERIncons val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERIncons/#parameters","text":"that: ZipERIncons val","title":"Parameters"},{"location":"ponyzip-ZipERIncons/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERIncons/#ne","text":"[Source] fun box ne( that: ZipERIncons val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERIncons/#parameters_1","text":"that: ZipERIncons val","title":"Parameters"},{"location":"ponyzip-ZipERIncons/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERInternal/","text":"ZipERInternal \u00b6 [Source] primitive val ZipERInternal Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERInternal val^ Returns \u00b6 ZipERInternal val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERInternal val) : Bool val Parameters \u00b6 that: ZipERInternal val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERInternal val) : Bool val Parameters \u00b6 that: ZipERInternal val Returns \u00b6 Bool val","title":"primitive ZipERInternal"},{"location":"ponyzip-ZipERInternal/#ziperinternal","text":"[Source] primitive val ZipERInternal","title":"ZipERInternal"},{"location":"ponyzip-ZipERInternal/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERInternal/#create","text":"[Source] new val create() : ZipERInternal val^","title":"create"},{"location":"ponyzip-ZipERInternal/#returns","text":"ZipERInternal val^","title":"Returns"},{"location":"ponyzip-ZipERInternal/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERInternal/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERInternal/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERInternal/#eq","text":"[Source] fun box eq( that: ZipERInternal val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERInternal/#parameters","text":"that: ZipERInternal val","title":"Parameters"},{"location":"ponyzip-ZipERInternal/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERInternal/#ne","text":"[Source] fun box ne( that: ZipERInternal val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERInternal/#parameters_1","text":"that: ZipERInternal val","title":"Parameters"},{"location":"ponyzip-ZipERInternal/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERInuse/","text":"ZipERInuse \u00b6 [Source] primitive val ZipERInuse Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERInuse val^ Returns \u00b6 ZipERInuse val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERInuse val) : Bool val Parameters \u00b6 that: ZipERInuse val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERInuse val) : Bool val Parameters \u00b6 that: ZipERInuse val Returns \u00b6 Bool val","title":"primitive ZipERInuse"},{"location":"ponyzip-ZipERInuse/#ziperinuse","text":"[Source] primitive val ZipERInuse","title":"ZipERInuse"},{"location":"ponyzip-ZipERInuse/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERInuse/#create","text":"[Source] new val create() : ZipERInuse val^","title":"create"},{"location":"ponyzip-ZipERInuse/#returns","text":"ZipERInuse val^","title":"Returns"},{"location":"ponyzip-ZipERInuse/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERInuse/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERInuse/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERInuse/#eq","text":"[Source] fun box eq( that: ZipERInuse val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERInuse/#parameters","text":"that: ZipERInuse val","title":"Parameters"},{"location":"ponyzip-ZipERInuse/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERInuse/#ne","text":"[Source] fun box ne( that: ZipERInuse val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERInuse/#parameters_1","text":"that: ZipERInuse val","title":"Parameters"},{"location":"ponyzip-ZipERInuse/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERInval/","text":"ZipERInval \u00b6 [Source] primitive val ZipERInval Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERInval val^ Returns \u00b6 ZipERInval val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERInval val) : Bool val Parameters \u00b6 that: ZipERInval val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERInval val) : Bool val Parameters \u00b6 that: ZipERInval val Returns \u00b6 Bool val","title":"primitive ZipERInval"},{"location":"ponyzip-ZipERInval/#ziperinval","text":"[Source] primitive val ZipERInval","title":"ZipERInval"},{"location":"ponyzip-ZipERInval/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERInval/#create","text":"[Source] new val create() : ZipERInval val^","title":"create"},{"location":"ponyzip-ZipERInval/#returns","text":"ZipERInval val^","title":"Returns"},{"location":"ponyzip-ZipERInval/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERInval/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERInval/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERInval/#eq","text":"[Source] fun box eq( that: ZipERInval val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERInval/#parameters","text":"that: ZipERInval val","title":"Parameters"},{"location":"ponyzip-ZipERInval/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERInval/#ne","text":"[Source] fun box ne( that: ZipERInval val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERInval/#parameters_1","text":"that: ZipERInval val","title":"Parameters"},{"location":"ponyzip-ZipERInval/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERMemory/","text":"ZipERMemory \u00b6 [Source] primitive val ZipERMemory Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERMemory val^ Returns \u00b6 ZipERMemory val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERMemory val) : Bool val Parameters \u00b6 that: ZipERMemory val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERMemory val) : Bool val Parameters \u00b6 that: ZipERMemory val Returns \u00b6 Bool val","title":"primitive ZipERMemory"},{"location":"ponyzip-ZipERMemory/#zipermemory","text":"[Source] primitive val ZipERMemory","title":"ZipERMemory"},{"location":"ponyzip-ZipERMemory/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERMemory/#create","text":"[Source] new val create() : ZipERMemory val^","title":"create"},{"location":"ponyzip-ZipERMemory/#returns","text":"ZipERMemory val^","title":"Returns"},{"location":"ponyzip-ZipERMemory/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERMemory/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERMemory/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERMemory/#eq","text":"[Source] fun box eq( that: ZipERMemory val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERMemory/#parameters","text":"that: ZipERMemory val","title":"Parameters"},{"location":"ponyzip-ZipERMemory/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERMemory/#ne","text":"[Source] fun box ne( that: ZipERMemory val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERMemory/#parameters_1","text":"that: ZipERMemory val","title":"Parameters"},{"location":"ponyzip-ZipERMemory/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERMultidisk/","text":"ZipERMultidisk \u00b6 [Source] primitive val ZipERMultidisk Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERMultidisk val^ Returns \u00b6 ZipERMultidisk val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERMultidisk val) : Bool val Parameters \u00b6 that: ZipERMultidisk val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERMultidisk val) : Bool val Parameters \u00b6 that: ZipERMultidisk val Returns \u00b6 Bool val","title":"primitive ZipERMultidisk"},{"location":"ponyzip-ZipERMultidisk/#zipermultidisk","text":"[Source] primitive val ZipERMultidisk","title":"ZipERMultidisk"},{"location":"ponyzip-ZipERMultidisk/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERMultidisk/#create","text":"[Source] new val create() : ZipERMultidisk val^","title":"create"},{"location":"ponyzip-ZipERMultidisk/#returns","text":"ZipERMultidisk val^","title":"Returns"},{"location":"ponyzip-ZipERMultidisk/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERMultidisk/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERMultidisk/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERMultidisk/#eq","text":"[Source] fun box eq( that: ZipERMultidisk val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERMultidisk/#parameters","text":"that: ZipERMultidisk val","title":"Parameters"},{"location":"ponyzip-ZipERMultidisk/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERMultidisk/#ne","text":"[Source] fun box ne( that: ZipERMultidisk val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERMultidisk/#parameters_1","text":"that: ZipERMultidisk val","title":"Parameters"},{"location":"ponyzip-ZipERMultidisk/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERNoent/","text":"ZipERNoent \u00b6 [Source] primitive val ZipERNoent Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERNoent val^ Returns \u00b6 ZipERNoent val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERNoent val) : Bool val Parameters \u00b6 that: ZipERNoent val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERNoent val) : Bool val Parameters \u00b6 that: ZipERNoent val Returns \u00b6 Bool val","title":"primitive ZipERNoent"},{"location":"ponyzip-ZipERNoent/#zipernoent","text":"[Source] primitive val ZipERNoent","title":"ZipERNoent"},{"location":"ponyzip-ZipERNoent/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERNoent/#create","text":"[Source] new val create() : ZipERNoent val^","title":"create"},{"location":"ponyzip-ZipERNoent/#returns","text":"ZipERNoent val^","title":"Returns"},{"location":"ponyzip-ZipERNoent/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERNoent/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERNoent/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERNoent/#eq","text":"[Source] fun box eq( that: ZipERNoent val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERNoent/#parameters","text":"that: ZipERNoent val","title":"Parameters"},{"location":"ponyzip-ZipERNoent/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERNoent/#ne","text":"[Source] fun box ne( that: ZipERNoent val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERNoent/#parameters_1","text":"that: ZipERNoent val","title":"Parameters"},{"location":"ponyzip-ZipERNoent/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERNopasswd/","text":"ZipERNopasswd \u00b6 [Source] primitive val ZipERNopasswd Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERNopasswd val^ Returns \u00b6 ZipERNopasswd val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERNopasswd val) : Bool val Parameters \u00b6 that: ZipERNopasswd val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERNopasswd val) : Bool val Parameters \u00b6 that: ZipERNopasswd val Returns \u00b6 Bool val","title":"primitive ZipERNopasswd"},{"location":"ponyzip-ZipERNopasswd/#zipernopasswd","text":"[Source] primitive val ZipERNopasswd","title":"ZipERNopasswd"},{"location":"ponyzip-ZipERNopasswd/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERNopasswd/#create","text":"[Source] new val create() : ZipERNopasswd val^","title":"create"},{"location":"ponyzip-ZipERNopasswd/#returns","text":"ZipERNopasswd val^","title":"Returns"},{"location":"ponyzip-ZipERNopasswd/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERNopasswd/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERNopasswd/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERNopasswd/#eq","text":"[Source] fun box eq( that: ZipERNopasswd val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERNopasswd/#parameters","text":"that: ZipERNopasswd val","title":"Parameters"},{"location":"ponyzip-ZipERNopasswd/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERNopasswd/#ne","text":"[Source] fun box ne( that: ZipERNopasswd val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERNopasswd/#parameters_1","text":"that: ZipERNopasswd val","title":"Parameters"},{"location":"ponyzip-ZipERNopasswd/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERNozip/","text":"ZipERNozip \u00b6 [Source] primitive val ZipERNozip Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERNozip val^ Returns \u00b6 ZipERNozip val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERNozip val) : Bool val Parameters \u00b6 that: ZipERNozip val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERNozip val) : Bool val Parameters \u00b6 that: ZipERNozip val Returns \u00b6 Bool val","title":"primitive ZipERNozip"},{"location":"ponyzip-ZipERNozip/#zipernozip","text":"[Source] primitive val ZipERNozip","title":"ZipERNozip"},{"location":"ponyzip-ZipERNozip/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERNozip/#create","text":"[Source] new val create() : ZipERNozip val^","title":"create"},{"location":"ponyzip-ZipERNozip/#returns","text":"ZipERNozip val^","title":"Returns"},{"location":"ponyzip-ZipERNozip/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERNozip/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERNozip/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERNozip/#eq","text":"[Source] fun box eq( that: ZipERNozip val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERNozip/#parameters","text":"that: ZipERNozip val","title":"Parameters"},{"location":"ponyzip-ZipERNozip/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERNozip/#ne","text":"[Source] fun box ne( that: ZipERNozip val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERNozip/#parameters_1","text":"that: ZipERNozip val","title":"Parameters"},{"location":"ponyzip-ZipERNozip/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEROK/","text":"ZipEROK \u00b6 [Source] primitive val ZipEROK Constructors \u00b6 create \u00b6 [Source] new val create() : ZipEROK val^ Returns \u00b6 ZipEROK val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipEROK val) : Bool val Parameters \u00b6 that: ZipEROK val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipEROK val) : Bool val Parameters \u00b6 that: ZipEROK val Returns \u00b6 Bool val","title":"primitive ZipEROK"},{"location":"ponyzip-ZipEROK/#ziperok","text":"[Source] primitive val ZipEROK","title":"ZipEROK"},{"location":"ponyzip-ZipEROK/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipEROK/#create","text":"[Source] new val create() : ZipEROK val^","title":"create"},{"location":"ponyzip-ZipEROK/#returns","text":"ZipEROK val^","title":"Returns"},{"location":"ponyzip-ZipEROK/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipEROK/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipEROK/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipEROK/#eq","text":"[Source] fun box eq( that: ZipEROK val) : Bool val","title":"eq"},{"location":"ponyzip-ZipEROK/#parameters","text":"that: ZipEROK val","title":"Parameters"},{"location":"ponyzip-ZipEROK/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEROK/#ne","text":"[Source] fun box ne( that: ZipEROK val) : Bool val","title":"ne"},{"location":"ponyzip-ZipEROK/#parameters_1","text":"that: ZipEROK val","title":"Parameters"},{"location":"ponyzip-ZipEROK/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEROpen/","text":"ZipEROpen \u00b6 [Source] primitive val ZipEROpen Constructors \u00b6 create \u00b6 [Source] new val create() : ZipEROpen val^ Returns \u00b6 ZipEROpen val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipEROpen val) : Bool val Parameters \u00b6 that: ZipEROpen val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipEROpen val) : Bool val Parameters \u00b6 that: ZipEROpen val Returns \u00b6 Bool val","title":"primitive ZipEROpen"},{"location":"ponyzip-ZipEROpen/#ziperopen","text":"[Source] primitive val ZipEROpen","title":"ZipEROpen"},{"location":"ponyzip-ZipEROpen/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipEROpen/#create","text":"[Source] new val create() : ZipEROpen val^","title":"create"},{"location":"ponyzip-ZipEROpen/#returns","text":"ZipEROpen val^","title":"Returns"},{"location":"ponyzip-ZipEROpen/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipEROpen/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipEROpen/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipEROpen/#eq","text":"[Source] fun box eq( that: ZipEROpen val) : Bool val","title":"eq"},{"location":"ponyzip-ZipEROpen/#parameters","text":"that: ZipEROpen val","title":"Parameters"},{"location":"ponyzip-ZipEROpen/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEROpen/#ne","text":"[Source] fun box ne( that: ZipEROpen val) : Bool val","title":"ne"},{"location":"ponyzip-ZipEROpen/#parameters_1","text":"that: ZipEROpen val","title":"Parameters"},{"location":"ponyzip-ZipEROpen/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEROpnotsupp/","text":"ZipEROpnotsupp \u00b6 [Source] primitive val ZipEROpnotsupp Constructors \u00b6 create \u00b6 [Source] new val create() : ZipEROpnotsupp val^ Returns \u00b6 ZipEROpnotsupp val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipEROpnotsupp val) : Bool val Parameters \u00b6 that: ZipEROpnotsupp val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipEROpnotsupp val) : Bool val Parameters \u00b6 that: ZipEROpnotsupp val Returns \u00b6 Bool val","title":"primitive ZipEROpnotsupp"},{"location":"ponyzip-ZipEROpnotsupp/#ziperopnotsupp","text":"[Source] primitive val ZipEROpnotsupp","title":"ZipEROpnotsupp"},{"location":"ponyzip-ZipEROpnotsupp/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipEROpnotsupp/#create","text":"[Source] new val create() : ZipEROpnotsupp val^","title":"create"},{"location":"ponyzip-ZipEROpnotsupp/#returns","text":"ZipEROpnotsupp val^","title":"Returns"},{"location":"ponyzip-ZipEROpnotsupp/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipEROpnotsupp/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipEROpnotsupp/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipEROpnotsupp/#eq","text":"[Source] fun box eq( that: ZipEROpnotsupp val) : Bool val","title":"eq"},{"location":"ponyzip-ZipEROpnotsupp/#parameters","text":"that: ZipEROpnotsupp val","title":"Parameters"},{"location":"ponyzip-ZipEROpnotsupp/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipEROpnotsupp/#ne","text":"[Source] fun box ne( that: ZipEROpnotsupp val) : Bool val","title":"ne"},{"location":"ponyzip-ZipEROpnotsupp/#parameters_1","text":"that: ZipEROpnotsupp val","title":"Parameters"},{"location":"ponyzip-ZipEROpnotsupp/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERR/","text":"ZipERR \u00b6 [Source] primitive val ZipERR Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERR val^ Returns \u00b6 ZipERR val^ Public Functions \u00b6 decode \u00b6 [Source] fun box decode( value: I32 val) : (ZipEROK val | ZipERMultidisk val | ZipERRename val | ZipERClose val | ZipERSeek val | ZipERRead val | ZipERWrite val | ZipERCRC val | ZipERZipclosed val | ZipERNoent val | ZipERExists val | ZipEROpen val | ZipERTmpopen val | ZipERZlib val | ZipERMemory val | ZipERChanged val | ZipERCompnotsupp val | ZipEREof val | ZipERInval val | ZipERNozip val | ZipERInternal val | ZipERIncons val | ZipERRemove val | ZipERDeleted val | ZipEREncrnotsupp val | ZipERRDOnly val | ZipERNopasswd val | ZipERWrongpasswd val | ZipEROpnotsupp val | ZipERInuse val | ZipERTell val | ZipERCompresseddata val | ZipERCancelled val) Parameters \u00b6 value: I32 val Returns \u00b6 ( ZipEROK val | ZipERMultidisk val | ZipERRename val | ZipERClose val | ZipERSeek val | ZipERRead val | ZipERWrite val | ZipERCRC val | ZipERZipclosed val | ZipERNoent val | ZipERExists val | ZipEROpen val | ZipERTmpopen val | ZipERZlib val | ZipERMemory val | ZipERChanged val | ZipERCompnotsupp val | ZipEREof val | ZipERInval val | ZipERNozip val | ZipERInternal val | ZipERIncons val | ZipERRemove val | ZipERDeleted val | ZipEREncrnotsupp val | ZipERRDOnly val | ZipERNopasswd val | ZipERWrongpasswd val | ZipEROpnotsupp val | ZipERInuse val | ZipERTell val | ZipERCompresseddata val | ZipERCancelled val) eq \u00b6 [Source] fun box eq( that: ZipERR val) : Bool val Parameters \u00b6 that: ZipERR val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERR val) : Bool val Parameters \u00b6 that: ZipERR val Returns \u00b6 Bool val","title":"primitive ZipERR"},{"location":"ponyzip-ZipERR/#ziperr","text":"[Source] primitive val ZipERR","title":"ZipERR"},{"location":"ponyzip-ZipERR/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERR/#create","text":"[Source] new val create() : ZipERR val^","title":"create"},{"location":"ponyzip-ZipERR/#returns","text":"ZipERR val^","title":"Returns"},{"location":"ponyzip-ZipERR/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERR/#decode","text":"[Source] fun box decode( value: I32 val) : (ZipEROK val | ZipERMultidisk val | ZipERRename val | ZipERClose val | ZipERSeek val | ZipERRead val | ZipERWrite val | ZipERCRC val | ZipERZipclosed val | ZipERNoent val | ZipERExists val | ZipEROpen val | ZipERTmpopen val | ZipERZlib val | ZipERMemory val | ZipERChanged val | ZipERCompnotsupp val | ZipEREof val | ZipERInval val | ZipERNozip val | ZipERInternal val | ZipERIncons val | ZipERRemove val | ZipERDeleted val | ZipEREncrnotsupp val | ZipERRDOnly val | ZipERNopasswd val | ZipERWrongpasswd val | ZipEROpnotsupp val | ZipERInuse val | ZipERTell val | ZipERCompresseddata val | ZipERCancelled val)","title":"decode"},{"location":"ponyzip-ZipERR/#parameters","text":"value: I32 val","title":"Parameters"},{"location":"ponyzip-ZipERR/#returns_1","text":"( ZipEROK val | ZipERMultidisk val | ZipERRename val | ZipERClose val | ZipERSeek val | ZipERRead val | ZipERWrite val | ZipERCRC val | ZipERZipclosed val | ZipERNoent val | ZipERExists val | ZipEROpen val | ZipERTmpopen val | ZipERZlib val | ZipERMemory val | ZipERChanged val | ZipERCompnotsupp val | ZipEREof val | ZipERInval val | ZipERNozip val | ZipERInternal val | ZipERIncons val | ZipERRemove val | ZipERDeleted val | ZipEREncrnotsupp val | ZipERRDOnly val | ZipERNopasswd val | ZipERWrongpasswd val | ZipEROpnotsupp val | ZipERInuse val | ZipERTell val | ZipERCompresseddata val | ZipERCancelled val)","title":"Returns"},{"location":"ponyzip-ZipERR/#eq","text":"[Source] fun box eq( that: ZipERR val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERR/#parameters_1","text":"that: ZipERR val","title":"Parameters"},{"location":"ponyzip-ZipERR/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERR/#ne","text":"[Source] fun box ne( that: ZipERR val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERR/#parameters_2","text":"that: ZipERR val","title":"Parameters"},{"location":"ponyzip-ZipERR/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERRDOnly/","text":"ZipERRDOnly \u00b6 [Source] primitive val ZipERRDOnly Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERRDOnly val^ Returns \u00b6 ZipERRDOnly val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERRDOnly val) : Bool val Parameters \u00b6 that: ZipERRDOnly val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERRDOnly val) : Bool val Parameters \u00b6 that: ZipERRDOnly val Returns \u00b6 Bool val","title":"primitive ZipERRDOnly"},{"location":"ponyzip-ZipERRDOnly/#ziperrdonly","text":"[Source] primitive val ZipERRDOnly","title":"ZipERRDOnly"},{"location":"ponyzip-ZipERRDOnly/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERRDOnly/#create","text":"[Source] new val create() : ZipERRDOnly val^","title":"create"},{"location":"ponyzip-ZipERRDOnly/#returns","text":"ZipERRDOnly val^","title":"Returns"},{"location":"ponyzip-ZipERRDOnly/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERRDOnly/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERRDOnly/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERRDOnly/#eq","text":"[Source] fun box eq( that: ZipERRDOnly val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERRDOnly/#parameters","text":"that: ZipERRDOnly val","title":"Parameters"},{"location":"ponyzip-ZipERRDOnly/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERRDOnly/#ne","text":"[Source] fun box ne( that: ZipERRDOnly val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERRDOnly/#parameters_1","text":"that: ZipERRDOnly val","title":"Parameters"},{"location":"ponyzip-ZipERRDOnly/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERRead/","text":"ZipERRead \u00b6 [Source] primitive val ZipERRead Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERRead val^ Returns \u00b6 ZipERRead val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERRead val) : Bool val Parameters \u00b6 that: ZipERRead val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERRead val) : Bool val Parameters \u00b6 that: ZipERRead val Returns \u00b6 Bool val","title":"primitive ZipERRead"},{"location":"ponyzip-ZipERRead/#ziperread","text":"[Source] primitive val ZipERRead","title":"ZipERRead"},{"location":"ponyzip-ZipERRead/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERRead/#create","text":"[Source] new val create() : ZipERRead val^","title":"create"},{"location":"ponyzip-ZipERRead/#returns","text":"ZipERRead val^","title":"Returns"},{"location":"ponyzip-ZipERRead/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERRead/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERRead/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERRead/#eq","text":"[Source] fun box eq( that: ZipERRead val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERRead/#parameters","text":"that: ZipERRead val","title":"Parameters"},{"location":"ponyzip-ZipERRead/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERRead/#ne","text":"[Source] fun box ne( that: ZipERRead val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERRead/#parameters_1","text":"that: ZipERRead val","title":"Parameters"},{"location":"ponyzip-ZipERRead/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERRemove/","text":"ZipERRemove \u00b6 [Source] primitive val ZipERRemove Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERRemove val^ Returns \u00b6 ZipERRemove val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERRemove val) : Bool val Parameters \u00b6 that: ZipERRemove val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERRemove val) : Bool val Parameters \u00b6 that: ZipERRemove val Returns \u00b6 Bool val","title":"primitive ZipERRemove"},{"location":"ponyzip-ZipERRemove/#ziperremove","text":"[Source] primitive val ZipERRemove","title":"ZipERRemove"},{"location":"ponyzip-ZipERRemove/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERRemove/#create","text":"[Source] new val create() : ZipERRemove val^","title":"create"},{"location":"ponyzip-ZipERRemove/#returns","text":"ZipERRemove val^","title":"Returns"},{"location":"ponyzip-ZipERRemove/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERRemove/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERRemove/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERRemove/#eq","text":"[Source] fun box eq( that: ZipERRemove val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERRemove/#parameters","text":"that: ZipERRemove val","title":"Parameters"},{"location":"ponyzip-ZipERRemove/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERRemove/#ne","text":"[Source] fun box ne( that: ZipERRemove val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERRemove/#parameters_1","text":"that: ZipERRemove val","title":"Parameters"},{"location":"ponyzip-ZipERRemove/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERRename/","text":"ZipERRename \u00b6 [Source] primitive val ZipERRename Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERRename val^ Returns \u00b6 ZipERRename val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERRename val) : Bool val Parameters \u00b6 that: ZipERRename val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERRename val) : Bool val Parameters \u00b6 that: ZipERRename val Returns \u00b6 Bool val","title":"primitive ZipERRename"},{"location":"ponyzip-ZipERRename/#ziperrename","text":"[Source] primitive val ZipERRename","title":"ZipERRename"},{"location":"ponyzip-ZipERRename/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERRename/#create","text":"[Source] new val create() : ZipERRename val^","title":"create"},{"location":"ponyzip-ZipERRename/#returns","text":"ZipERRename val^","title":"Returns"},{"location":"ponyzip-ZipERRename/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERRename/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERRename/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERRename/#eq","text":"[Source] fun box eq( that: ZipERRename val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERRename/#parameters","text":"that: ZipERRename val","title":"Parameters"},{"location":"ponyzip-ZipERRename/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERRename/#ne","text":"[Source] fun box ne( that: ZipERRename val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERRename/#parameters_1","text":"that: ZipERRename val","title":"Parameters"},{"location":"ponyzip-ZipERRename/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERSeek/","text":"ZipERSeek \u00b6 [Source] primitive val ZipERSeek Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERSeek val^ Returns \u00b6 ZipERSeek val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERSeek val) : Bool val Parameters \u00b6 that: ZipERSeek val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERSeek val) : Bool val Parameters \u00b6 that: ZipERSeek val Returns \u00b6 Bool val","title":"primitive ZipERSeek"},{"location":"ponyzip-ZipERSeek/#ziperseek","text":"[Source] primitive val ZipERSeek","title":"ZipERSeek"},{"location":"ponyzip-ZipERSeek/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERSeek/#create","text":"[Source] new val create() : ZipERSeek val^","title":"create"},{"location":"ponyzip-ZipERSeek/#returns","text":"ZipERSeek val^","title":"Returns"},{"location":"ponyzip-ZipERSeek/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERSeek/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERSeek/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERSeek/#eq","text":"[Source] fun box eq( that: ZipERSeek val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERSeek/#parameters","text":"that: ZipERSeek val","title":"Parameters"},{"location":"ponyzip-ZipERSeek/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERSeek/#ne","text":"[Source] fun box ne( that: ZipERSeek val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERSeek/#parameters_1","text":"that: ZipERSeek val","title":"Parameters"},{"location":"ponyzip-ZipERSeek/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERTell/","text":"ZipERTell \u00b6 [Source] primitive val ZipERTell Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERTell val^ Returns \u00b6 ZipERTell val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERTell val) : Bool val Parameters \u00b6 that: ZipERTell val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERTell val) : Bool val Parameters \u00b6 that: ZipERTell val Returns \u00b6 Bool val","title":"primitive ZipERTell"},{"location":"ponyzip-ZipERTell/#zipertell","text":"[Source] primitive val ZipERTell","title":"ZipERTell"},{"location":"ponyzip-ZipERTell/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERTell/#create","text":"[Source] new val create() : ZipERTell val^","title":"create"},{"location":"ponyzip-ZipERTell/#returns","text":"ZipERTell val^","title":"Returns"},{"location":"ponyzip-ZipERTell/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERTell/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERTell/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERTell/#eq","text":"[Source] fun box eq( that: ZipERTell val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERTell/#parameters","text":"that: ZipERTell val","title":"Parameters"},{"location":"ponyzip-ZipERTell/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERTell/#ne","text":"[Source] fun box ne( that: ZipERTell val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERTell/#parameters_1","text":"that: ZipERTell val","title":"Parameters"},{"location":"ponyzip-ZipERTell/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERTmpopen/","text":"ZipERTmpopen \u00b6 [Source] primitive val ZipERTmpopen Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERTmpopen val^ Returns \u00b6 ZipERTmpopen val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERTmpopen val) : Bool val Parameters \u00b6 that: ZipERTmpopen val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERTmpopen val) : Bool val Parameters \u00b6 that: ZipERTmpopen val Returns \u00b6 Bool val","title":"primitive ZipERTmpopen"},{"location":"ponyzip-ZipERTmpopen/#zipertmpopen","text":"[Source] primitive val ZipERTmpopen","title":"ZipERTmpopen"},{"location":"ponyzip-ZipERTmpopen/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERTmpopen/#create","text":"[Source] new val create() : ZipERTmpopen val^","title":"create"},{"location":"ponyzip-ZipERTmpopen/#returns","text":"ZipERTmpopen val^","title":"Returns"},{"location":"ponyzip-ZipERTmpopen/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERTmpopen/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERTmpopen/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERTmpopen/#eq","text":"[Source] fun box eq( that: ZipERTmpopen val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERTmpopen/#parameters","text":"that: ZipERTmpopen val","title":"Parameters"},{"location":"ponyzip-ZipERTmpopen/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERTmpopen/#ne","text":"[Source] fun box ne( that: ZipERTmpopen val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERTmpopen/#parameters_1","text":"that: ZipERTmpopen val","title":"Parameters"},{"location":"ponyzip-ZipERTmpopen/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERWrite/","text":"ZipERWrite \u00b6 [Source] primitive val ZipERWrite Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERWrite val^ Returns \u00b6 ZipERWrite val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERWrite val) : Bool val Parameters \u00b6 that: ZipERWrite val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERWrite val) : Bool val Parameters \u00b6 that: ZipERWrite val Returns \u00b6 Bool val","title":"primitive ZipERWrite"},{"location":"ponyzip-ZipERWrite/#ziperwrite","text":"[Source] primitive val ZipERWrite","title":"ZipERWrite"},{"location":"ponyzip-ZipERWrite/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERWrite/#create","text":"[Source] new val create() : ZipERWrite val^","title":"create"},{"location":"ponyzip-ZipERWrite/#returns","text":"ZipERWrite val^","title":"Returns"},{"location":"ponyzip-ZipERWrite/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERWrite/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERWrite/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERWrite/#eq","text":"[Source] fun box eq( that: ZipERWrite val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERWrite/#parameters","text":"that: ZipERWrite val","title":"Parameters"},{"location":"ponyzip-ZipERWrite/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERWrite/#ne","text":"[Source] fun box ne( that: ZipERWrite val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERWrite/#parameters_1","text":"that: ZipERWrite val","title":"Parameters"},{"location":"ponyzip-ZipERWrite/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERWrongpasswd/","text":"ZipERWrongpasswd \u00b6 [Source] primitive val ZipERWrongpasswd Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERWrongpasswd val^ Returns \u00b6 ZipERWrongpasswd val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERWrongpasswd val) : Bool val Parameters \u00b6 that: ZipERWrongpasswd val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERWrongpasswd val) : Bool val Parameters \u00b6 that: ZipERWrongpasswd val Returns \u00b6 Bool val","title":"primitive ZipERWrongpasswd"},{"location":"ponyzip-ZipERWrongpasswd/#ziperwrongpasswd","text":"[Source] primitive val ZipERWrongpasswd","title":"ZipERWrongpasswd"},{"location":"ponyzip-ZipERWrongpasswd/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERWrongpasswd/#create","text":"[Source] new val create() : ZipERWrongpasswd val^","title":"create"},{"location":"ponyzip-ZipERWrongpasswd/#returns","text":"ZipERWrongpasswd val^","title":"Returns"},{"location":"ponyzip-ZipERWrongpasswd/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERWrongpasswd/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERWrongpasswd/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERWrongpasswd/#eq","text":"[Source] fun box eq( that: ZipERWrongpasswd val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERWrongpasswd/#parameters","text":"that: ZipERWrongpasswd val","title":"Parameters"},{"location":"ponyzip-ZipERWrongpasswd/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERWrongpasswd/#ne","text":"[Source] fun box ne( that: ZipERWrongpasswd val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERWrongpasswd/#parameters_1","text":"that: ZipERWrongpasswd val","title":"Parameters"},{"location":"ponyzip-ZipERWrongpasswd/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERZipclosed/","text":"ZipERZipclosed \u00b6 [Source] primitive val ZipERZipclosed Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERZipclosed val^ Returns \u00b6 ZipERZipclosed val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERZipclosed val) : Bool val Parameters \u00b6 that: ZipERZipclosed val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERZipclosed val) : Bool val Parameters \u00b6 that: ZipERZipclosed val Returns \u00b6 Bool val","title":"primitive ZipERZipclosed"},{"location":"ponyzip-ZipERZipclosed/#ziperzipclosed","text":"[Source] primitive val ZipERZipclosed","title":"ZipERZipclosed"},{"location":"ponyzip-ZipERZipclosed/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERZipclosed/#create","text":"[Source] new val create() : ZipERZipclosed val^","title":"create"},{"location":"ponyzip-ZipERZipclosed/#returns","text":"ZipERZipclosed val^","title":"Returns"},{"location":"ponyzip-ZipERZipclosed/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERZipclosed/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERZipclosed/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERZipclosed/#eq","text":"[Source] fun box eq( that: ZipERZipclosed val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERZipclosed/#parameters","text":"that: ZipERZipclosed val","title":"Parameters"},{"location":"ponyzip-ZipERZipclosed/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERZipclosed/#ne","text":"[Source] fun box ne( that: ZipERZipclosed val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERZipclosed/#parameters_1","text":"that: ZipERZipclosed val","title":"Parameters"},{"location":"ponyzip-ZipERZipclosed/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERZlib/","text":"ZipERZlib \u00b6 [Source] primitive val ZipERZlib Constructors \u00b6 create \u00b6 [Source] new val create() : ZipERZlib val^ Returns \u00b6 ZipERZlib val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipERZlib val) : Bool val Parameters \u00b6 that: ZipERZlib val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipERZlib val) : Bool val Parameters \u00b6 that: ZipERZlib val Returns \u00b6 Bool val","title":"primitive ZipERZlib"},{"location":"ponyzip-ZipERZlib/#ziperzlib","text":"[Source] primitive val ZipERZlib","title":"ZipERZlib"},{"location":"ponyzip-ZipERZlib/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipERZlib/#create","text":"[Source] new val create() : ZipERZlib val^","title":"create"},{"location":"ponyzip-ZipERZlib/#returns","text":"ZipERZlib val^","title":"Returns"},{"location":"ponyzip-ZipERZlib/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipERZlib/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipERZlib/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipERZlib/#eq","text":"[Source] fun box eq( that: ZipERZlib val) : Bool val","title":"eq"},{"location":"ponyzip-ZipERZlib/#parameters","text":"that: ZipERZlib val","title":"Parameters"},{"location":"ponyzip-ZipERZlib/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipERZlib/#ne","text":"[Source] fun box ne( that: ZipERZlib val) : Bool val","title":"ne"},{"location":"ponyzip-ZipERZlib/#parameters_1","text":"that: ZipERZlib val","title":"Parameters"},{"location":"ponyzip-ZipERZlib/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipETNone/","text":"ZipETNone \u00b6 [Source] primitive val ZipETNone Constructors \u00b6 create \u00b6 [Source] new val create() : ZipETNone val^ Returns \u00b6 ZipETNone val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipETNone val) : Bool val Parameters \u00b6 that: ZipETNone val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipETNone val) : Bool val Parameters \u00b6 that: ZipETNone val Returns \u00b6 Bool val","title":"primitive ZipETNone"},{"location":"ponyzip-ZipETNone/#zipetnone","text":"[Source] primitive val ZipETNone","title":"ZipETNone"},{"location":"ponyzip-ZipETNone/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipETNone/#create","text":"[Source] new val create() : ZipETNone val^","title":"create"},{"location":"ponyzip-ZipETNone/#returns","text":"ZipETNone val^","title":"Returns"},{"location":"ponyzip-ZipETNone/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipETNone/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipETNone/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipETNone/#eq","text":"[Source] fun box eq( that: ZipETNone val) : Bool val","title":"eq"},{"location":"ponyzip-ZipETNone/#parameters","text":"that: ZipETNone val","title":"Parameters"},{"location":"ponyzip-ZipETNone/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipETNone/#ne","text":"[Source] fun box ne( that: ZipETNone val) : Bool val","title":"ne"},{"location":"ponyzip-ZipETNone/#parameters_1","text":"that: ZipETNone val","title":"Parameters"},{"location":"ponyzip-ZipETNone/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipETSys/","text":"ZipETSys \u00b6 [Source] primitive val ZipETSys Constructors \u00b6 create \u00b6 [Source] new val create() : ZipETSys val^ Returns \u00b6 ZipETSys val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipETSys val) : Bool val Parameters \u00b6 that: ZipETSys val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipETSys val) : Bool val Parameters \u00b6 that: ZipETSys val Returns \u00b6 Bool val","title":"primitive ZipETSys"},{"location":"ponyzip-ZipETSys/#zipetsys","text":"[Source] primitive val ZipETSys","title":"ZipETSys"},{"location":"ponyzip-ZipETSys/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipETSys/#create","text":"[Source] new val create() : ZipETSys val^","title":"create"},{"location":"ponyzip-ZipETSys/#returns","text":"ZipETSys val^","title":"Returns"},{"location":"ponyzip-ZipETSys/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipETSys/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipETSys/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipETSys/#eq","text":"[Source] fun box eq( that: ZipETSys val) : Bool val","title":"eq"},{"location":"ponyzip-ZipETSys/#parameters","text":"that: ZipETSys val","title":"Parameters"},{"location":"ponyzip-ZipETSys/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipETSys/#ne","text":"[Source] fun box ne( that: ZipETSys val) : Bool val","title":"ne"},{"location":"ponyzip-ZipETSys/#parameters_1","text":"that: ZipETSys val","title":"Parameters"},{"location":"ponyzip-ZipETSys/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipETZlib/","text":"ZipETZlib \u00b6 [Source] primitive val ZipETZlib Constructors \u00b6 create \u00b6 [Source] new val create() : ZipETZlib val^ Returns \u00b6 ZipETZlib val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : I32 val Returns \u00b6 I32 val eq \u00b6 [Source] fun box eq( that: ZipETZlib val) : Bool val Parameters \u00b6 that: ZipETZlib val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipETZlib val) : Bool val Parameters \u00b6 that: ZipETZlib val Returns \u00b6 Bool val","title":"primitive ZipETZlib"},{"location":"ponyzip-ZipETZlib/#zipetzlib","text":"[Source] primitive val ZipETZlib","title":"ZipETZlib"},{"location":"ponyzip-ZipETZlib/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipETZlib/#create","text":"[Source] new val create() : ZipETZlib val^","title":"create"},{"location":"ponyzip-ZipETZlib/#returns","text":"ZipETZlib val^","title":"Returns"},{"location":"ponyzip-ZipETZlib/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipETZlib/#value","text":"[Source] fun box value() : I32 val","title":"value"},{"location":"ponyzip-ZipETZlib/#returns_1","text":"I32 val","title":"Returns"},{"location":"ponyzip-ZipETZlib/#eq","text":"[Source] fun box eq( that: ZipETZlib val) : Bool val","title":"eq"},{"location":"ponyzip-ZipETZlib/#parameters","text":"that: ZipETZlib val","title":"Parameters"},{"location":"ponyzip-ZipETZlib/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipETZlib/#ne","text":"[Source] fun box ne( that: ZipETZlib val) : Bool val","title":"ne"},{"location":"ponyzip-ZipETZlib/#parameters_1","text":"that: ZipETZlib val","title":"Parameters"},{"location":"ponyzip-ZipETZlib/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipExcl/","text":"ZipExcl \u00b6 [Source] primitive val ZipExcl Constructors \u00b6 create \u00b6 [Source] new val create() : ZipExcl val^ Returns \u00b6 ZipExcl val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipExcl val) : Bool val Parameters \u00b6 that: ZipExcl val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipExcl val) : Bool val Parameters \u00b6 that: ZipExcl val Returns \u00b6 Bool val","title":"primitive ZipExcl"},{"location":"ponyzip-ZipExcl/#zipexcl","text":"[Source] primitive val ZipExcl","title":"ZipExcl"},{"location":"ponyzip-ZipExcl/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipExcl/#create","text":"[Source] new val create() : ZipExcl val^","title":"create"},{"location":"ponyzip-ZipExcl/#returns","text":"ZipExcl val^","title":"Returns"},{"location":"ponyzip-ZipExcl/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipExcl/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipExcl/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipExcl/#eq","text":"[Source] fun box eq( that: ZipExcl val) : Bool val","title":"eq"},{"location":"ponyzip-ZipExcl/#parameters","text":"that: ZipExcl val","title":"Parameters"},{"location":"ponyzip-ZipExcl/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipExcl/#ne","text":"[Source] fun box ne( that: ZipExcl val) : Bool val","title":"ne"},{"location":"ponyzip-ZipExcl/#parameters_1","text":"that: ZipExcl val","title":"Parameters"},{"location":"ponyzip-ZipExcl/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLCentral/","text":"ZipFLCentral \u00b6 [Source] primitive val ZipFLCentral Constructors \u00b6 create \u00b6 [Source] new val create() : ZipFLCentral val^ Returns \u00b6 ZipFLCentral val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipFLCentral val) : Bool val Parameters \u00b6 that: ZipFLCentral val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipFLCentral val) : Bool val Parameters \u00b6 that: ZipFLCentral val Returns \u00b6 Bool val","title":"primitive ZipFLCentral"},{"location":"ponyzip-ZipFLCentral/#zipflcentral","text":"[Source] primitive val ZipFLCentral","title":"ZipFLCentral"},{"location":"ponyzip-ZipFLCentral/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipFLCentral/#create","text":"[Source] new val create() : ZipFLCentral val^","title":"create"},{"location":"ponyzip-ZipFLCentral/#returns","text":"ZipFLCentral val^","title":"Returns"},{"location":"ponyzip-ZipFLCentral/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipFLCentral/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipFLCentral/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipFLCentral/#eq","text":"[Source] fun box eq( that: ZipFLCentral val) : Bool val","title":"eq"},{"location":"ponyzip-ZipFLCentral/#parameters","text":"that: ZipFLCentral val","title":"Parameters"},{"location":"ponyzip-ZipFLCentral/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLCentral/#ne","text":"[Source] fun box ne( that: ZipFLCentral val) : Bool val","title":"ne"},{"location":"ponyzip-ZipFLCentral/#parameters_1","text":"that: ZipFLCentral val","title":"Parameters"},{"location":"ponyzip-ZipFLCentral/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLCompressed/","text":"ZipFLCompressed \u00b6 [Source] primitive val ZipFLCompressed Constructors \u00b6 create \u00b6 [Source] new val create() : ZipFLCompressed val^ Returns \u00b6 ZipFLCompressed val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipFLCompressed val) : Bool val Parameters \u00b6 that: ZipFLCompressed val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipFLCompressed val) : Bool val Parameters \u00b6 that: ZipFLCompressed val Returns \u00b6 Bool val","title":"primitive ZipFLCompressed"},{"location":"ponyzip-ZipFLCompressed/#zipflcompressed","text":"[Source] primitive val ZipFLCompressed","title":"ZipFLCompressed"},{"location":"ponyzip-ZipFLCompressed/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipFLCompressed/#create","text":"[Source] new val create() : ZipFLCompressed val^","title":"create"},{"location":"ponyzip-ZipFLCompressed/#returns","text":"ZipFLCompressed val^","title":"Returns"},{"location":"ponyzip-ZipFLCompressed/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipFLCompressed/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipFLCompressed/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipFLCompressed/#eq","text":"[Source] fun box eq( that: ZipFLCompressed val) : Bool val","title":"eq"},{"location":"ponyzip-ZipFLCompressed/#parameters","text":"that: ZipFLCompressed val","title":"Parameters"},{"location":"ponyzip-ZipFLCompressed/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLCompressed/#ne","text":"[Source] fun box ne( that: ZipFLCompressed val) : Bool val","title":"ne"},{"location":"ponyzip-ZipFLCompressed/#parameters_1","text":"that: ZipFLCompressed val","title":"Parameters"},{"location":"ponyzip-ZipFLCompressed/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLEncCp437/","text":"ZipFLEncCp437 \u00b6 [Source] primitive val ZipFLEncCp437 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipFLEncCp437 val^ Returns \u00b6 ZipFLEncCp437 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipFLEncCp437 val) : Bool val Parameters \u00b6 that: ZipFLEncCp437 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipFLEncCp437 val) : Bool val Parameters \u00b6 that: ZipFLEncCp437 val Returns \u00b6 Bool val","title":"primitive ZipFLEncCp437"},{"location":"ponyzip-ZipFLEncCp437/#zipflenccp437","text":"[Source] primitive val ZipFLEncCp437","title":"ZipFLEncCp437"},{"location":"ponyzip-ZipFLEncCp437/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipFLEncCp437/#create","text":"[Source] new val create() : ZipFLEncCp437 val^","title":"create"},{"location":"ponyzip-ZipFLEncCp437/#returns","text":"ZipFLEncCp437 val^","title":"Returns"},{"location":"ponyzip-ZipFLEncCp437/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipFLEncCp437/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipFLEncCp437/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipFLEncCp437/#eq","text":"[Source] fun box eq( that: ZipFLEncCp437 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipFLEncCp437/#parameters","text":"that: ZipFLEncCp437 val","title":"Parameters"},{"location":"ponyzip-ZipFLEncCp437/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLEncCp437/#ne","text":"[Source] fun box ne( that: ZipFLEncCp437 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipFLEncCp437/#parameters_1","text":"that: ZipFLEncCp437 val","title":"Parameters"},{"location":"ponyzip-ZipFLEncCp437/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLEncGuess/","text":"ZipFLEncGuess \u00b6 [Source] primitive val ZipFLEncGuess Constructors \u00b6 create \u00b6 [Source] new val create() : ZipFLEncGuess val^ Returns \u00b6 ZipFLEncGuess val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipFLEncGuess val) : Bool val Parameters \u00b6 that: ZipFLEncGuess val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipFLEncGuess val) : Bool val Parameters \u00b6 that: ZipFLEncGuess val Returns \u00b6 Bool val","title":"primitive ZipFLEncGuess"},{"location":"ponyzip-ZipFLEncGuess/#zipflencguess","text":"[Source] primitive val ZipFLEncGuess","title":"ZipFLEncGuess"},{"location":"ponyzip-ZipFLEncGuess/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipFLEncGuess/#create","text":"[Source] new val create() : ZipFLEncGuess val^","title":"create"},{"location":"ponyzip-ZipFLEncGuess/#returns","text":"ZipFLEncGuess val^","title":"Returns"},{"location":"ponyzip-ZipFLEncGuess/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipFLEncGuess/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipFLEncGuess/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipFLEncGuess/#eq","text":"[Source] fun box eq( that: ZipFLEncGuess val) : Bool val","title":"eq"},{"location":"ponyzip-ZipFLEncGuess/#parameters","text":"that: ZipFLEncGuess val","title":"Parameters"},{"location":"ponyzip-ZipFLEncGuess/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLEncGuess/#ne","text":"[Source] fun box ne( that: ZipFLEncGuess val) : Bool val","title":"ne"},{"location":"ponyzip-ZipFLEncGuess/#parameters_1","text":"that: ZipFLEncGuess val","title":"Parameters"},{"location":"ponyzip-ZipFLEncGuess/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLEncRaw/","text":"ZipFLEncRaw \u00b6 [Source] primitive val ZipFLEncRaw Constructors \u00b6 create \u00b6 [Source] new val create() : ZipFLEncRaw val^ Returns \u00b6 ZipFLEncRaw val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipFLEncRaw val) : Bool val Parameters \u00b6 that: ZipFLEncRaw val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipFLEncRaw val) : Bool val Parameters \u00b6 that: ZipFLEncRaw val Returns \u00b6 Bool val","title":"primitive ZipFLEncRaw"},{"location":"ponyzip-ZipFLEncRaw/#zipflencraw","text":"[Source] primitive val ZipFLEncRaw","title":"ZipFLEncRaw"},{"location":"ponyzip-ZipFLEncRaw/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipFLEncRaw/#create","text":"[Source] new val create() : ZipFLEncRaw val^","title":"create"},{"location":"ponyzip-ZipFLEncRaw/#returns","text":"ZipFLEncRaw val^","title":"Returns"},{"location":"ponyzip-ZipFLEncRaw/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipFLEncRaw/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipFLEncRaw/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipFLEncRaw/#eq","text":"[Source] fun box eq( that: ZipFLEncRaw val) : Bool val","title":"eq"},{"location":"ponyzip-ZipFLEncRaw/#parameters","text":"that: ZipFLEncRaw val","title":"Parameters"},{"location":"ponyzip-ZipFLEncRaw/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLEncRaw/#ne","text":"[Source] fun box ne( that: ZipFLEncRaw val) : Bool val","title":"ne"},{"location":"ponyzip-ZipFLEncRaw/#parameters_1","text":"that: ZipFLEncRaw val","title":"Parameters"},{"location":"ponyzip-ZipFLEncRaw/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLEncStrict/","text":"ZipFLEncStrict \u00b6 [Source] primitive val ZipFLEncStrict Constructors \u00b6 create \u00b6 [Source] new val create() : ZipFLEncStrict val^ Returns \u00b6 ZipFLEncStrict val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipFLEncStrict val) : Bool val Parameters \u00b6 that: ZipFLEncStrict val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipFLEncStrict val) : Bool val Parameters \u00b6 that: ZipFLEncStrict val Returns \u00b6 Bool val","title":"primitive ZipFLEncStrict"},{"location":"ponyzip-ZipFLEncStrict/#zipflencstrict","text":"[Source] primitive val ZipFLEncStrict","title":"ZipFLEncStrict"},{"location":"ponyzip-ZipFLEncStrict/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipFLEncStrict/#create","text":"[Source] new val create() : ZipFLEncStrict val^","title":"create"},{"location":"ponyzip-ZipFLEncStrict/#returns","text":"ZipFLEncStrict val^","title":"Returns"},{"location":"ponyzip-ZipFLEncStrict/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipFLEncStrict/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipFLEncStrict/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipFLEncStrict/#eq","text":"[Source] fun box eq( that: ZipFLEncStrict val) : Bool val","title":"eq"},{"location":"ponyzip-ZipFLEncStrict/#parameters","text":"that: ZipFLEncStrict val","title":"Parameters"},{"location":"ponyzip-ZipFLEncStrict/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLEncStrict/#ne","text":"[Source] fun box ne( that: ZipFLEncStrict val) : Bool val","title":"ne"},{"location":"ponyzip-ZipFLEncStrict/#parameters_1","text":"that: ZipFLEncStrict val","title":"Parameters"},{"location":"ponyzip-ZipFLEncStrict/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLEncUtf8/","text":"ZipFLEncUtf8 \u00b6 [Source] primitive val ZipFLEncUtf8 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipFLEncUtf8 val^ Returns \u00b6 ZipFLEncUtf8 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipFLEncUtf8 val) : Bool val Parameters \u00b6 that: ZipFLEncUtf8 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipFLEncUtf8 val) : Bool val Parameters \u00b6 that: ZipFLEncUtf8 val Returns \u00b6 Bool val","title":"primitive ZipFLEncUtf8"},{"location":"ponyzip-ZipFLEncUtf8/#zipflencutf8","text":"[Source] primitive val ZipFLEncUtf8","title":"ZipFLEncUtf8"},{"location":"ponyzip-ZipFLEncUtf8/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipFLEncUtf8/#create","text":"[Source] new val create() : ZipFLEncUtf8 val^","title":"create"},{"location":"ponyzip-ZipFLEncUtf8/#returns","text":"ZipFLEncUtf8 val^","title":"Returns"},{"location":"ponyzip-ZipFLEncUtf8/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipFLEncUtf8/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipFLEncUtf8/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipFLEncUtf8/#eq","text":"[Source] fun box eq( that: ZipFLEncUtf8 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipFLEncUtf8/#parameters","text":"that: ZipFLEncUtf8 val","title":"Parameters"},{"location":"ponyzip-ZipFLEncUtf8/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLEncUtf8/#ne","text":"[Source] fun box ne( that: ZipFLEncUtf8 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipFLEncUtf8/#parameters_1","text":"that: ZipFLEncUtf8 val","title":"Parameters"},{"location":"ponyzip-ZipFLEncUtf8/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLEncrypted/","text":"ZipFLEncrypted \u00b6 [Source] primitive val ZipFLEncrypted Constructors \u00b6 create \u00b6 [Source] new val create() : ZipFLEncrypted val^ Returns \u00b6 ZipFLEncrypted val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipFLEncrypted val) : Bool val Parameters \u00b6 that: ZipFLEncrypted val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipFLEncrypted val) : Bool val Parameters \u00b6 that: ZipFLEncrypted val Returns \u00b6 Bool val","title":"primitive ZipFLEncrypted"},{"location":"ponyzip-ZipFLEncrypted/#zipflencrypted","text":"[Source] primitive val ZipFLEncrypted","title":"ZipFLEncrypted"},{"location":"ponyzip-ZipFLEncrypted/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipFLEncrypted/#create","text":"[Source] new val create() : ZipFLEncrypted val^","title":"create"},{"location":"ponyzip-ZipFLEncrypted/#returns","text":"ZipFLEncrypted val^","title":"Returns"},{"location":"ponyzip-ZipFLEncrypted/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipFLEncrypted/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipFLEncrypted/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipFLEncrypted/#eq","text":"[Source] fun box eq( that: ZipFLEncrypted val) : Bool val","title":"eq"},{"location":"ponyzip-ZipFLEncrypted/#parameters","text":"that: ZipFLEncrypted val","title":"Parameters"},{"location":"ponyzip-ZipFLEncrypted/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLEncrypted/#ne","text":"[Source] fun box ne( that: ZipFLEncrypted val) : Bool val","title":"ne"},{"location":"ponyzip-ZipFLEncrypted/#parameters_1","text":"that: ZipFLEncrypted val","title":"Parameters"},{"location":"ponyzip-ZipFLEncrypted/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLFlags/","text":"ZipFLFlags \u00b6 [Source] type ZipFLFlags is Flags[(ZipFLNocase val | ZipFLNodir val | ZipFLCompressed val | ZipFLUnchanged val | ZipFLRecompress val | ZipFLEncrypted val | ZipFLEncGuess val | ZipFLEncRaw val | ZipFLEncStrict val | ZipFLLocal val | ZipFLCentral val | ZipFLEncUtf8 val | ZipFLEncCp437 val | ZipFLOverwrite val), U32 val] ref Type Alias For \u00b6 Flags [( ZipFLNocase val | ZipFLNodir val | ZipFLCompressed val | ZipFLUnchanged val | ZipFLRecompress val | ZipFLEncrypted val | ZipFLEncGuess val | ZipFLEncRaw val | ZipFLEncStrict val | ZipFLLocal val | ZipFLCentral val | ZipFLEncUtf8 val | ZipFLEncCp437 val | ZipFLOverwrite val), U32 val] ref","title":"type ZipFLFlags"},{"location":"ponyzip-ZipFLFlags/#zipflflags","text":"[Source] type ZipFLFlags is Flags[(ZipFLNocase val | ZipFLNodir val | ZipFLCompressed val | ZipFLUnchanged val | ZipFLRecompress val | ZipFLEncrypted val | ZipFLEncGuess val | ZipFLEncRaw val | ZipFLEncStrict val | ZipFLLocal val | ZipFLCentral val | ZipFLEncUtf8 val | ZipFLEncCp437 val | ZipFLOverwrite val), U32 val] ref","title":"ZipFLFlags"},{"location":"ponyzip-ZipFLFlags/#type-alias-for","text":"Flags [( ZipFLNocase val | ZipFLNodir val | ZipFLCompressed val | ZipFLUnchanged val | ZipFLRecompress val | ZipFLEncrypted val | ZipFLEncGuess val | ZipFLEncRaw val | ZipFLEncStrict val | ZipFLLocal val | ZipFLCentral val | ZipFLEncUtf8 val | ZipFLEncCp437 val | ZipFLOverwrite val), U32 val] ref","title":"Type Alias For"},{"location":"ponyzip-ZipFLLocal/","text":"ZipFLLocal \u00b6 [Source] primitive val ZipFLLocal Constructors \u00b6 create \u00b6 [Source] new val create() : ZipFLLocal val^ Returns \u00b6 ZipFLLocal val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipFLLocal val) : Bool val Parameters \u00b6 that: ZipFLLocal val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipFLLocal val) : Bool val Parameters \u00b6 that: ZipFLLocal val Returns \u00b6 Bool val","title":"primitive ZipFLLocal"},{"location":"ponyzip-ZipFLLocal/#zipfllocal","text":"[Source] primitive val ZipFLLocal","title":"ZipFLLocal"},{"location":"ponyzip-ZipFLLocal/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipFLLocal/#create","text":"[Source] new val create() : ZipFLLocal val^","title":"create"},{"location":"ponyzip-ZipFLLocal/#returns","text":"ZipFLLocal val^","title":"Returns"},{"location":"ponyzip-ZipFLLocal/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipFLLocal/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipFLLocal/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipFLLocal/#eq","text":"[Source] fun box eq( that: ZipFLLocal val) : Bool val","title":"eq"},{"location":"ponyzip-ZipFLLocal/#parameters","text":"that: ZipFLLocal val","title":"Parameters"},{"location":"ponyzip-ZipFLLocal/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLLocal/#ne","text":"[Source] fun box ne( that: ZipFLLocal val) : Bool val","title":"ne"},{"location":"ponyzip-ZipFLLocal/#parameters_1","text":"that: ZipFLLocal val","title":"Parameters"},{"location":"ponyzip-ZipFLLocal/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLNocase/","text":"ZipFLNocase \u00b6 [Source] primitive val ZipFLNocase Constructors \u00b6 create \u00b6 [Source] new val create() : ZipFLNocase val^ Returns \u00b6 ZipFLNocase val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipFLNocase val) : Bool val Parameters \u00b6 that: ZipFLNocase val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipFLNocase val) : Bool val Parameters \u00b6 that: ZipFLNocase val Returns \u00b6 Bool val","title":"primitive ZipFLNocase"},{"location":"ponyzip-ZipFLNocase/#zipflnocase","text":"[Source] primitive val ZipFLNocase","title":"ZipFLNocase"},{"location":"ponyzip-ZipFLNocase/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipFLNocase/#create","text":"[Source] new val create() : ZipFLNocase val^","title":"create"},{"location":"ponyzip-ZipFLNocase/#returns","text":"ZipFLNocase val^","title":"Returns"},{"location":"ponyzip-ZipFLNocase/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipFLNocase/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipFLNocase/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipFLNocase/#eq","text":"[Source] fun box eq( that: ZipFLNocase val) : Bool val","title":"eq"},{"location":"ponyzip-ZipFLNocase/#parameters","text":"that: ZipFLNocase val","title":"Parameters"},{"location":"ponyzip-ZipFLNocase/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLNocase/#ne","text":"[Source] fun box ne( that: ZipFLNocase val) : Bool val","title":"ne"},{"location":"ponyzip-ZipFLNocase/#parameters_1","text":"that: ZipFLNocase val","title":"Parameters"},{"location":"ponyzip-ZipFLNocase/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLNodir/","text":"ZipFLNodir \u00b6 [Source] primitive val ZipFLNodir Constructors \u00b6 create \u00b6 [Source] new val create() : ZipFLNodir val^ Returns \u00b6 ZipFLNodir val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipFLNodir val) : Bool val Parameters \u00b6 that: ZipFLNodir val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipFLNodir val) : Bool val Parameters \u00b6 that: ZipFLNodir val Returns \u00b6 Bool val","title":"primitive ZipFLNodir"},{"location":"ponyzip-ZipFLNodir/#zipflnodir","text":"[Source] primitive val ZipFLNodir","title":"ZipFLNodir"},{"location":"ponyzip-ZipFLNodir/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipFLNodir/#create","text":"[Source] new val create() : ZipFLNodir val^","title":"create"},{"location":"ponyzip-ZipFLNodir/#returns","text":"ZipFLNodir val^","title":"Returns"},{"location":"ponyzip-ZipFLNodir/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipFLNodir/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipFLNodir/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipFLNodir/#eq","text":"[Source] fun box eq( that: ZipFLNodir val) : Bool val","title":"eq"},{"location":"ponyzip-ZipFLNodir/#parameters","text":"that: ZipFLNodir val","title":"Parameters"},{"location":"ponyzip-ZipFLNodir/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLNodir/#ne","text":"[Source] fun box ne( that: ZipFLNodir val) : Bool val","title":"ne"},{"location":"ponyzip-ZipFLNodir/#parameters_1","text":"that: ZipFLNodir val","title":"Parameters"},{"location":"ponyzip-ZipFLNodir/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLOverwrite/","text":"ZipFLOverwrite \u00b6 [Source] primitive val ZipFLOverwrite Constructors \u00b6 create \u00b6 [Source] new val create() : ZipFLOverwrite val^ Returns \u00b6 ZipFLOverwrite val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipFLOverwrite val) : Bool val Parameters \u00b6 that: ZipFLOverwrite val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipFLOverwrite val) : Bool val Parameters \u00b6 that: ZipFLOverwrite val Returns \u00b6 Bool val","title":"primitive ZipFLOverwrite"},{"location":"ponyzip-ZipFLOverwrite/#zipfloverwrite","text":"[Source] primitive val ZipFLOverwrite","title":"ZipFLOverwrite"},{"location":"ponyzip-ZipFLOverwrite/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipFLOverwrite/#create","text":"[Source] new val create() : ZipFLOverwrite val^","title":"create"},{"location":"ponyzip-ZipFLOverwrite/#returns","text":"ZipFLOverwrite val^","title":"Returns"},{"location":"ponyzip-ZipFLOverwrite/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipFLOverwrite/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipFLOverwrite/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipFLOverwrite/#eq","text":"[Source] fun box eq( that: ZipFLOverwrite val) : Bool val","title":"eq"},{"location":"ponyzip-ZipFLOverwrite/#parameters","text":"that: ZipFLOverwrite val","title":"Parameters"},{"location":"ponyzip-ZipFLOverwrite/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLOverwrite/#ne","text":"[Source] fun box ne( that: ZipFLOverwrite val) : Bool val","title":"ne"},{"location":"ponyzip-ZipFLOverwrite/#parameters_1","text":"that: ZipFLOverwrite val","title":"Parameters"},{"location":"ponyzip-ZipFLOverwrite/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLRecompress/","text":"ZipFLRecompress \u00b6 [Source] primitive val ZipFLRecompress Constructors \u00b6 create \u00b6 [Source] new val create() : ZipFLRecompress val^ Returns \u00b6 ZipFLRecompress val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipFLRecompress val) : Bool val Parameters \u00b6 that: ZipFLRecompress val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipFLRecompress val) : Bool val Parameters \u00b6 that: ZipFLRecompress val Returns \u00b6 Bool val","title":"primitive ZipFLRecompress"},{"location":"ponyzip-ZipFLRecompress/#zipflrecompress","text":"[Source] primitive val ZipFLRecompress","title":"ZipFLRecompress"},{"location":"ponyzip-ZipFLRecompress/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipFLRecompress/#create","text":"[Source] new val create() : ZipFLRecompress val^","title":"create"},{"location":"ponyzip-ZipFLRecompress/#returns","text":"ZipFLRecompress val^","title":"Returns"},{"location":"ponyzip-ZipFLRecompress/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipFLRecompress/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipFLRecompress/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipFLRecompress/#eq","text":"[Source] fun box eq( that: ZipFLRecompress val) : Bool val","title":"eq"},{"location":"ponyzip-ZipFLRecompress/#parameters","text":"that: ZipFLRecompress val","title":"Parameters"},{"location":"ponyzip-ZipFLRecompress/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLRecompress/#ne","text":"[Source] fun box ne( that: ZipFLRecompress val) : Bool val","title":"ne"},{"location":"ponyzip-ZipFLRecompress/#parameters_1","text":"that: ZipFLRecompress val","title":"Parameters"},{"location":"ponyzip-ZipFLRecompress/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLUnchanged/","text":"ZipFLUnchanged \u00b6 [Source] primitive val ZipFLUnchanged Constructors \u00b6 create \u00b6 [Source] new val create() : ZipFLUnchanged val^ Returns \u00b6 ZipFLUnchanged val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipFLUnchanged val) : Bool val Parameters \u00b6 that: ZipFLUnchanged val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipFLUnchanged val) : Bool val Parameters \u00b6 that: ZipFLUnchanged val Returns \u00b6 Bool val","title":"primitive ZipFLUnchanged"},{"location":"ponyzip-ZipFLUnchanged/#zipflunchanged","text":"[Source] primitive val ZipFLUnchanged","title":"ZipFLUnchanged"},{"location":"ponyzip-ZipFLUnchanged/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipFLUnchanged/#create","text":"[Source] new val create() : ZipFLUnchanged val^","title":"create"},{"location":"ponyzip-ZipFLUnchanged/#returns","text":"ZipFLUnchanged val^","title":"Returns"},{"location":"ponyzip-ZipFLUnchanged/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipFLUnchanged/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipFLUnchanged/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipFLUnchanged/#eq","text":"[Source] fun box eq( that: ZipFLUnchanged val) : Bool val","title":"eq"},{"location":"ponyzip-ZipFLUnchanged/#parameters","text":"that: ZipFLUnchanged val","title":"Parameters"},{"location":"ponyzip-ZipFLUnchanged/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFLUnchanged/#ne","text":"[Source] fun box ne( that: ZipFLUnchanged val) : Bool val","title":"ne"},{"location":"ponyzip-ZipFLUnchanged/#parameters_1","text":"that: ZipFLUnchanged val","title":"Parameters"},{"location":"ponyzip-ZipFLUnchanged/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFileAttributesAscii/","text":"ZipFileAttributesAscii \u00b6 [Source] primitive val ZipFileAttributesAscii Constructors \u00b6 create \u00b6 [Source] new val create() : ZipFileAttributesAscii val^ Returns \u00b6 ZipFileAttributesAscii val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipFileAttributesAscii val) : Bool val Parameters \u00b6 that: ZipFileAttributesAscii val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipFileAttributesAscii val) : Bool val Parameters \u00b6 that: ZipFileAttributesAscii val Returns \u00b6 Bool val","title":"primitive ZipFileAttributesAscii"},{"location":"ponyzip-ZipFileAttributesAscii/#zipfileattributesascii","text":"[Source] primitive val ZipFileAttributesAscii","title":"ZipFileAttributesAscii"},{"location":"ponyzip-ZipFileAttributesAscii/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipFileAttributesAscii/#create","text":"[Source] new val create() : ZipFileAttributesAscii val^","title":"create"},{"location":"ponyzip-ZipFileAttributesAscii/#returns","text":"ZipFileAttributesAscii val^","title":"Returns"},{"location":"ponyzip-ZipFileAttributesAscii/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipFileAttributesAscii/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipFileAttributesAscii/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipFileAttributesAscii/#eq","text":"[Source] fun box eq( that: ZipFileAttributesAscii val) : Bool val","title":"eq"},{"location":"ponyzip-ZipFileAttributesAscii/#parameters","text":"that: ZipFileAttributesAscii val","title":"Parameters"},{"location":"ponyzip-ZipFileAttributesAscii/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFileAttributesAscii/#ne","text":"[Source] fun box ne( that: ZipFileAttributesAscii val) : Bool val","title":"ne"},{"location":"ponyzip-ZipFileAttributesAscii/#parameters_1","text":"that: ZipFileAttributesAscii val","title":"Parameters"},{"location":"ponyzip-ZipFileAttributesAscii/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFileAttributesExternalFileAttributes/","text":"ZipFileAttributesExternalFileAttributes \u00b6 [Source] primitive val ZipFileAttributesExternalFileAttributes Constructors \u00b6 create \u00b6 [Source] new val create() : ZipFileAttributesExternalFileAttributes val^ Returns \u00b6 ZipFileAttributesExternalFileAttributes val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipFileAttributesExternalFileAttributes val) : Bool val Parameters \u00b6 that: ZipFileAttributesExternalFileAttributes val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipFileAttributesExternalFileAttributes val) : Bool val Parameters \u00b6 that: ZipFileAttributesExternalFileAttributes val Returns \u00b6 Bool val","title":"primitive ZipFileAttributesExternalFileAttributes"},{"location":"ponyzip-ZipFileAttributesExternalFileAttributes/#zipfileattributesexternalfileattributes","text":"[Source] primitive val ZipFileAttributesExternalFileAttributes","title":"ZipFileAttributesExternalFileAttributes"},{"location":"ponyzip-ZipFileAttributesExternalFileAttributes/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipFileAttributesExternalFileAttributes/#create","text":"[Source] new val create() : ZipFileAttributesExternalFileAttributes val^","title":"create"},{"location":"ponyzip-ZipFileAttributesExternalFileAttributes/#returns","text":"ZipFileAttributesExternalFileAttributes val^","title":"Returns"},{"location":"ponyzip-ZipFileAttributesExternalFileAttributes/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipFileAttributesExternalFileAttributes/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipFileAttributesExternalFileAttributes/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipFileAttributesExternalFileAttributes/#eq","text":"[Source] fun box eq( that: ZipFileAttributesExternalFileAttributes val) : Bool val","title":"eq"},{"location":"ponyzip-ZipFileAttributesExternalFileAttributes/#parameters","text":"that: ZipFileAttributesExternalFileAttributes val","title":"Parameters"},{"location":"ponyzip-ZipFileAttributesExternalFileAttributes/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFileAttributesExternalFileAttributes/#ne","text":"[Source] fun box ne( that: ZipFileAttributesExternalFileAttributes val) : Bool val","title":"ne"},{"location":"ponyzip-ZipFileAttributesExternalFileAttributes/#parameters_1","text":"that: ZipFileAttributesExternalFileAttributes val","title":"Parameters"},{"location":"ponyzip-ZipFileAttributesExternalFileAttributes/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFileAttributesFlags/","text":"ZipFileAttributesFlags \u00b6 [Source] type ZipFileAttributesFlags is Flags[(ZipFileAttributesHostSystem val | ZipFileAttributesAscii val | ZipFileAttributesVersionNeeded val | ZipFileAttributesExternalFileAttributes val | ZipFileAttributesGeneralPurposeBitFlags val), U16 val] ref Type Alias For \u00b6 Flags [( ZipFileAttributesHostSystem val | ZipFileAttributesAscii val | ZipFileAttributesVersionNeeded val | ZipFileAttributesExternalFileAttributes val | ZipFileAttributesGeneralPurposeBitFlags val), U16 val] ref","title":"type ZipFileAttributesFlags"},{"location":"ponyzip-ZipFileAttributesFlags/#zipfileattributesflags","text":"[Source] type ZipFileAttributesFlags is Flags[(ZipFileAttributesHostSystem val | ZipFileAttributesAscii val | ZipFileAttributesVersionNeeded val | ZipFileAttributesExternalFileAttributes val | ZipFileAttributesGeneralPurposeBitFlags val), U16 val] ref","title":"ZipFileAttributesFlags"},{"location":"ponyzip-ZipFileAttributesFlags/#type-alias-for","text":"Flags [( ZipFileAttributesHostSystem val | ZipFileAttributesAscii val | ZipFileAttributesVersionNeeded val | ZipFileAttributesExternalFileAttributes val | ZipFileAttributesGeneralPurposeBitFlags val), U16 val] ref","title":"Type Alias For"},{"location":"ponyzip-ZipFileAttributesGeneralPurposeBitFlags/","text":"ZipFileAttributesGeneralPurposeBitFlags \u00b6 [Source] primitive val ZipFileAttributesGeneralPurposeBitFlags Constructors \u00b6 create \u00b6 [Source] new val create() : ZipFileAttributesGeneralPurposeBitFlags val^ Returns \u00b6 ZipFileAttributesGeneralPurposeBitFlags val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipFileAttributesGeneralPurposeBitFlags val) : Bool val Parameters \u00b6 that: ZipFileAttributesGeneralPurposeBitFlags val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipFileAttributesGeneralPurposeBitFlags val) : Bool val Parameters \u00b6 that: ZipFileAttributesGeneralPurposeBitFlags val Returns \u00b6 Bool val","title":"primitive ZipFileAttributesGeneralPurposeBitFlags"},{"location":"ponyzip-ZipFileAttributesGeneralPurposeBitFlags/#zipfileattributesgeneralpurposebitflags","text":"[Source] primitive val ZipFileAttributesGeneralPurposeBitFlags","title":"ZipFileAttributesGeneralPurposeBitFlags"},{"location":"ponyzip-ZipFileAttributesGeneralPurposeBitFlags/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipFileAttributesGeneralPurposeBitFlags/#create","text":"[Source] new val create() : ZipFileAttributesGeneralPurposeBitFlags val^","title":"create"},{"location":"ponyzip-ZipFileAttributesGeneralPurposeBitFlags/#returns","text":"ZipFileAttributesGeneralPurposeBitFlags val^","title":"Returns"},{"location":"ponyzip-ZipFileAttributesGeneralPurposeBitFlags/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipFileAttributesGeneralPurposeBitFlags/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipFileAttributesGeneralPurposeBitFlags/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipFileAttributesGeneralPurposeBitFlags/#eq","text":"[Source] fun box eq( that: ZipFileAttributesGeneralPurposeBitFlags val) : Bool val","title":"eq"},{"location":"ponyzip-ZipFileAttributesGeneralPurposeBitFlags/#parameters","text":"that: ZipFileAttributesGeneralPurposeBitFlags val","title":"Parameters"},{"location":"ponyzip-ZipFileAttributesGeneralPurposeBitFlags/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFileAttributesGeneralPurposeBitFlags/#ne","text":"[Source] fun box ne( that: ZipFileAttributesGeneralPurposeBitFlags val) : Bool val","title":"ne"},{"location":"ponyzip-ZipFileAttributesGeneralPurposeBitFlags/#parameters_1","text":"that: ZipFileAttributesGeneralPurposeBitFlags val","title":"Parameters"},{"location":"ponyzip-ZipFileAttributesGeneralPurposeBitFlags/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFileAttributesHostSystem/","text":"ZipFileAttributesHostSystem \u00b6 [Source] primitive val ZipFileAttributesHostSystem Constructors \u00b6 create \u00b6 [Source] new val create() : ZipFileAttributesHostSystem val^ Returns \u00b6 ZipFileAttributesHostSystem val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipFileAttributesHostSystem val) : Bool val Parameters \u00b6 that: ZipFileAttributesHostSystem val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipFileAttributesHostSystem val) : Bool val Parameters \u00b6 that: ZipFileAttributesHostSystem val Returns \u00b6 Bool val","title":"primitive ZipFileAttributesHostSystem"},{"location":"ponyzip-ZipFileAttributesHostSystem/#zipfileattributeshostsystem","text":"[Source] primitive val ZipFileAttributesHostSystem","title":"ZipFileAttributesHostSystem"},{"location":"ponyzip-ZipFileAttributesHostSystem/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipFileAttributesHostSystem/#create","text":"[Source] new val create() : ZipFileAttributesHostSystem val^","title":"create"},{"location":"ponyzip-ZipFileAttributesHostSystem/#returns","text":"ZipFileAttributesHostSystem val^","title":"Returns"},{"location":"ponyzip-ZipFileAttributesHostSystem/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipFileAttributesHostSystem/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipFileAttributesHostSystem/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipFileAttributesHostSystem/#eq","text":"[Source] fun box eq( that: ZipFileAttributesHostSystem val) : Bool val","title":"eq"},{"location":"ponyzip-ZipFileAttributesHostSystem/#parameters","text":"that: ZipFileAttributesHostSystem val","title":"Parameters"},{"location":"ponyzip-ZipFileAttributesHostSystem/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFileAttributesHostSystem/#ne","text":"[Source] fun box ne( that: ZipFileAttributesHostSystem val) : Bool val","title":"ne"},{"location":"ponyzip-ZipFileAttributesHostSystem/#parameters_1","text":"that: ZipFileAttributesHostSystem val","title":"Parameters"},{"location":"ponyzip-ZipFileAttributesHostSystem/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFileAttributesVersionNeeded/","text":"ZipFileAttributesVersionNeeded \u00b6 [Source] primitive val ZipFileAttributesVersionNeeded Constructors \u00b6 create \u00b6 [Source] new val create() : ZipFileAttributesVersionNeeded val^ Returns \u00b6 ZipFileAttributesVersionNeeded val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipFileAttributesVersionNeeded val) : Bool val Parameters \u00b6 that: ZipFileAttributesVersionNeeded val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipFileAttributesVersionNeeded val) : Bool val Parameters \u00b6 that: ZipFileAttributesVersionNeeded val Returns \u00b6 Bool val","title":"primitive ZipFileAttributesVersionNeeded"},{"location":"ponyzip-ZipFileAttributesVersionNeeded/#zipfileattributesversionneeded","text":"[Source] primitive val ZipFileAttributesVersionNeeded","title":"ZipFileAttributesVersionNeeded"},{"location":"ponyzip-ZipFileAttributesVersionNeeded/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipFileAttributesVersionNeeded/#create","text":"[Source] new val create() : ZipFileAttributesVersionNeeded val^","title":"create"},{"location":"ponyzip-ZipFileAttributesVersionNeeded/#returns","text":"ZipFileAttributesVersionNeeded val^","title":"Returns"},{"location":"ponyzip-ZipFileAttributesVersionNeeded/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipFileAttributesVersionNeeded/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipFileAttributesVersionNeeded/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipFileAttributesVersionNeeded/#eq","text":"[Source] fun box eq( that: ZipFileAttributesVersionNeeded val) : Bool val","title":"eq"},{"location":"ponyzip-ZipFileAttributesVersionNeeded/#parameters","text":"that: ZipFileAttributesVersionNeeded val","title":"Parameters"},{"location":"ponyzip-ZipFileAttributesVersionNeeded/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFileAttributesVersionNeeded/#ne","text":"[Source] fun box ne( that: ZipFileAttributesVersionNeeded val) : Bool val","title":"ne"},{"location":"ponyzip-ZipFileAttributesVersionNeeded/#parameters_1","text":"that: ZipFileAttributesVersionNeeded val","title":"Parameters"},{"location":"ponyzip-ZipFileAttributesVersionNeeded/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipFlags/","text":"ZipFlags \u00b6 [Source] type ZipFlags is Flags[(ZipCreate val | ZipExcl val | ZipCheckcons val | ZipTruncate val | ZipRDOnly val), U32 val] ref Type Alias For \u00b6 Flags [( ZipCreate val | ZipExcl val | ZipCheckcons val | ZipTruncate val | ZipRDOnly val), U32 val] ref","title":"type ZipFlags"},{"location":"ponyzip-ZipFlags/#zipflags","text":"[Source] type ZipFlags is Flags[(ZipCreate val | ZipExcl val | ZipCheckcons val | ZipTruncate val | ZipRDOnly val), U32 val] ref","title":"ZipFlags"},{"location":"ponyzip-ZipFlags/#type-alias-for","text":"Flags [( ZipCreate val | ZipExcl val | ZipCheckcons val | ZipTruncate val | ZipRDOnly val), U32 val] ref","title":"Type Alias For"},{"location":"ponyzip-ZipOPSYSAcornrisc/","text":"ZipOPSYSAcornrisc \u00b6 [Source] primitive val ZipOPSYSAcornrisc Constructors \u00b6 create \u00b6 [Source] new val create() : ZipOPSYSAcornrisc val^ Returns \u00b6 ZipOPSYSAcornrisc val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: ZipOPSYSAcornrisc val) : Bool val Parameters \u00b6 that: ZipOPSYSAcornrisc val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipOPSYSAcornrisc val) : Bool val Parameters \u00b6 that: ZipOPSYSAcornrisc val Returns \u00b6 Bool val","title":"primitive ZipOPSYSAcornrisc"},{"location":"ponyzip-ZipOPSYSAcornrisc/#zipopsysacornrisc","text":"[Source] primitive val ZipOPSYSAcornrisc","title":"ZipOPSYSAcornrisc"},{"location":"ponyzip-ZipOPSYSAcornrisc/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipOPSYSAcornrisc/#create","text":"[Source] new val create() : ZipOPSYSAcornrisc val^","title":"create"},{"location":"ponyzip-ZipOPSYSAcornrisc/#returns","text":"ZipOPSYSAcornrisc val^","title":"Returns"},{"location":"ponyzip-ZipOPSYSAcornrisc/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipOPSYSAcornrisc/#value","text":"[Source] fun box value() : U8 val","title":"value"},{"location":"ponyzip-ZipOPSYSAcornrisc/#returns_1","text":"U8 val","title":"Returns"},{"location":"ponyzip-ZipOPSYSAcornrisc/#eq","text":"[Source] fun box eq( that: ZipOPSYSAcornrisc val) : Bool val","title":"eq"},{"location":"ponyzip-ZipOPSYSAcornrisc/#parameters","text":"that: ZipOPSYSAcornrisc val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSAcornrisc/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSAcornrisc/#ne","text":"[Source] fun box ne( that: ZipOPSYSAcornrisc val) : Bool val","title":"ne"},{"location":"ponyzip-ZipOPSYSAcornrisc/#parameters_1","text":"that: ZipOPSYSAcornrisc val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSAcornrisc/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSAlternatemvs/","text":"ZipOPSYSAlternatemvs \u00b6 [Source] primitive val ZipOPSYSAlternatemvs Constructors \u00b6 create \u00b6 [Source] new val create() : ZipOPSYSAlternatemvs val^ Returns \u00b6 ZipOPSYSAlternatemvs val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: ZipOPSYSAlternatemvs val) : Bool val Parameters \u00b6 that: ZipOPSYSAlternatemvs val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipOPSYSAlternatemvs val) : Bool val Parameters \u00b6 that: ZipOPSYSAlternatemvs val Returns \u00b6 Bool val","title":"primitive ZipOPSYSAlternatemvs"},{"location":"ponyzip-ZipOPSYSAlternatemvs/#zipopsysalternatemvs","text":"[Source] primitive val ZipOPSYSAlternatemvs","title":"ZipOPSYSAlternatemvs"},{"location":"ponyzip-ZipOPSYSAlternatemvs/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipOPSYSAlternatemvs/#create","text":"[Source] new val create() : ZipOPSYSAlternatemvs val^","title":"create"},{"location":"ponyzip-ZipOPSYSAlternatemvs/#returns","text":"ZipOPSYSAlternatemvs val^","title":"Returns"},{"location":"ponyzip-ZipOPSYSAlternatemvs/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipOPSYSAlternatemvs/#value","text":"[Source] fun box value() : U8 val","title":"value"},{"location":"ponyzip-ZipOPSYSAlternatemvs/#returns_1","text":"U8 val","title":"Returns"},{"location":"ponyzip-ZipOPSYSAlternatemvs/#eq","text":"[Source] fun box eq( that: ZipOPSYSAlternatemvs val) : Bool val","title":"eq"},{"location":"ponyzip-ZipOPSYSAlternatemvs/#parameters","text":"that: ZipOPSYSAlternatemvs val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSAlternatemvs/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSAlternatemvs/#ne","text":"[Source] fun box ne( that: ZipOPSYSAlternatemvs val) : Bool val","title":"ne"},{"location":"ponyzip-ZipOPSYSAlternatemvs/#parameters_1","text":"that: ZipOPSYSAlternatemvs val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSAlternatemvs/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSAmiga/","text":"ZipOPSYSAmiga \u00b6 [Source] primitive val ZipOPSYSAmiga Constructors \u00b6 create \u00b6 [Source] new val create() : ZipOPSYSAmiga val^ Returns \u00b6 ZipOPSYSAmiga val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: ZipOPSYSAmiga val) : Bool val Parameters \u00b6 that: ZipOPSYSAmiga val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipOPSYSAmiga val) : Bool val Parameters \u00b6 that: ZipOPSYSAmiga val Returns \u00b6 Bool val","title":"primitive ZipOPSYSAmiga"},{"location":"ponyzip-ZipOPSYSAmiga/#zipopsysamiga","text":"[Source] primitive val ZipOPSYSAmiga","title":"ZipOPSYSAmiga"},{"location":"ponyzip-ZipOPSYSAmiga/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipOPSYSAmiga/#create","text":"[Source] new val create() : ZipOPSYSAmiga val^","title":"create"},{"location":"ponyzip-ZipOPSYSAmiga/#returns","text":"ZipOPSYSAmiga val^","title":"Returns"},{"location":"ponyzip-ZipOPSYSAmiga/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipOPSYSAmiga/#value","text":"[Source] fun box value() : U8 val","title":"value"},{"location":"ponyzip-ZipOPSYSAmiga/#returns_1","text":"U8 val","title":"Returns"},{"location":"ponyzip-ZipOPSYSAmiga/#eq","text":"[Source] fun box eq( that: ZipOPSYSAmiga val) : Bool val","title":"eq"},{"location":"ponyzip-ZipOPSYSAmiga/#parameters","text":"that: ZipOPSYSAmiga val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSAmiga/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSAmiga/#ne","text":"[Source] fun box ne( that: ZipOPSYSAmiga val) : Bool val","title":"ne"},{"location":"ponyzip-ZipOPSYSAmiga/#parameters_1","text":"that: ZipOPSYSAmiga val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSAmiga/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSAtarist/","text":"ZipOPSYSAtarist \u00b6 [Source] primitive val ZipOPSYSAtarist Constructors \u00b6 create \u00b6 [Source] new val create() : ZipOPSYSAtarist val^ Returns \u00b6 ZipOPSYSAtarist val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: ZipOPSYSAtarist val) : Bool val Parameters \u00b6 that: ZipOPSYSAtarist val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipOPSYSAtarist val) : Bool val Parameters \u00b6 that: ZipOPSYSAtarist val Returns \u00b6 Bool val","title":"primitive ZipOPSYSAtarist"},{"location":"ponyzip-ZipOPSYSAtarist/#zipopsysatarist","text":"[Source] primitive val ZipOPSYSAtarist","title":"ZipOPSYSAtarist"},{"location":"ponyzip-ZipOPSYSAtarist/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipOPSYSAtarist/#create","text":"[Source] new val create() : ZipOPSYSAtarist val^","title":"create"},{"location":"ponyzip-ZipOPSYSAtarist/#returns","text":"ZipOPSYSAtarist val^","title":"Returns"},{"location":"ponyzip-ZipOPSYSAtarist/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipOPSYSAtarist/#value","text":"[Source] fun box value() : U8 val","title":"value"},{"location":"ponyzip-ZipOPSYSAtarist/#returns_1","text":"U8 val","title":"Returns"},{"location":"ponyzip-ZipOPSYSAtarist/#eq","text":"[Source] fun box eq( that: ZipOPSYSAtarist val) : Bool val","title":"eq"},{"location":"ponyzip-ZipOPSYSAtarist/#parameters","text":"that: ZipOPSYSAtarist val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSAtarist/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSAtarist/#ne","text":"[Source] fun box ne( that: ZipOPSYSAtarist val) : Bool val","title":"ne"},{"location":"ponyzip-ZipOPSYSAtarist/#parameters_1","text":"that: ZipOPSYSAtarist val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSAtarist/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSBeos/","text":"ZipOPSYSBeos \u00b6 [Source] primitive val ZipOPSYSBeos Constructors \u00b6 create \u00b6 [Source] new val create() : ZipOPSYSBeos val^ Returns \u00b6 ZipOPSYSBeos val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: ZipOPSYSBeos val) : Bool val Parameters \u00b6 that: ZipOPSYSBeos val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipOPSYSBeos val) : Bool val Parameters \u00b6 that: ZipOPSYSBeos val Returns \u00b6 Bool val","title":"primitive ZipOPSYSBeos"},{"location":"ponyzip-ZipOPSYSBeos/#zipopsysbeos","text":"[Source] primitive val ZipOPSYSBeos","title":"ZipOPSYSBeos"},{"location":"ponyzip-ZipOPSYSBeos/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipOPSYSBeos/#create","text":"[Source] new val create() : ZipOPSYSBeos val^","title":"create"},{"location":"ponyzip-ZipOPSYSBeos/#returns","text":"ZipOPSYSBeos val^","title":"Returns"},{"location":"ponyzip-ZipOPSYSBeos/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipOPSYSBeos/#value","text":"[Source] fun box value() : U8 val","title":"value"},{"location":"ponyzip-ZipOPSYSBeos/#returns_1","text":"U8 val","title":"Returns"},{"location":"ponyzip-ZipOPSYSBeos/#eq","text":"[Source] fun box eq( that: ZipOPSYSBeos val) : Bool val","title":"eq"},{"location":"ponyzip-ZipOPSYSBeos/#parameters","text":"that: ZipOPSYSBeos val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSBeos/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSBeos/#ne","text":"[Source] fun box ne( that: ZipOPSYSBeos val) : Bool val","title":"ne"},{"location":"ponyzip-ZipOPSYSBeos/#parameters_1","text":"that: ZipOPSYSBeos val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSBeos/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSCpm/","text":"ZipOPSYSCpm \u00b6 [Source] primitive val ZipOPSYSCpm Constructors \u00b6 create \u00b6 [Source] new val create() : ZipOPSYSCpm val^ Returns \u00b6 ZipOPSYSCpm val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: ZipOPSYSCpm val) : Bool val Parameters \u00b6 that: ZipOPSYSCpm val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipOPSYSCpm val) : Bool val Parameters \u00b6 that: ZipOPSYSCpm val Returns \u00b6 Bool val","title":"primitive ZipOPSYSCpm"},{"location":"ponyzip-ZipOPSYSCpm/#zipopsyscpm","text":"[Source] primitive val ZipOPSYSCpm","title":"ZipOPSYSCpm"},{"location":"ponyzip-ZipOPSYSCpm/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipOPSYSCpm/#create","text":"[Source] new val create() : ZipOPSYSCpm val^","title":"create"},{"location":"ponyzip-ZipOPSYSCpm/#returns","text":"ZipOPSYSCpm val^","title":"Returns"},{"location":"ponyzip-ZipOPSYSCpm/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipOPSYSCpm/#value","text":"[Source] fun box value() : U8 val","title":"value"},{"location":"ponyzip-ZipOPSYSCpm/#returns_1","text":"U8 val","title":"Returns"},{"location":"ponyzip-ZipOPSYSCpm/#eq","text":"[Source] fun box eq( that: ZipOPSYSCpm val) : Bool val","title":"eq"},{"location":"ponyzip-ZipOPSYSCpm/#parameters","text":"that: ZipOPSYSCpm val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSCpm/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSCpm/#ne","text":"[Source] fun box ne( that: ZipOPSYSCpm val) : Bool val","title":"ne"},{"location":"ponyzip-ZipOPSYSCpm/#parameters_1","text":"that: ZipOPSYSCpm val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSCpm/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSDefault/","text":"ZipOPSYSDefault \u00b6 [Source] type ZipOPSYSDefault is ZipOPSYSUnix val Type Alias For \u00b6 ZipOPSYSUnix val","title":"type ZipOPSYSDefault"},{"location":"ponyzip-ZipOPSYSDefault/#zipopsysdefault","text":"[Source] type ZipOPSYSDefault is ZipOPSYSUnix val","title":"ZipOPSYSDefault"},{"location":"ponyzip-ZipOPSYSDefault/#type-alias-for","text":"ZipOPSYSUnix val","title":"Type Alias For"},{"location":"ponyzip-ZipOPSYSDos/","text":"ZipOPSYSDos \u00b6 [Source] primitive val ZipOPSYSDos Constructors \u00b6 create \u00b6 [Source] new val create() : ZipOPSYSDos val^ Returns \u00b6 ZipOPSYSDos val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: ZipOPSYSDos val) : Bool val Parameters \u00b6 that: ZipOPSYSDos val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipOPSYSDos val) : Bool val Parameters \u00b6 that: ZipOPSYSDos val Returns \u00b6 Bool val","title":"primitive ZipOPSYSDos"},{"location":"ponyzip-ZipOPSYSDos/#zipopsysdos","text":"[Source] primitive val ZipOPSYSDos","title":"ZipOPSYSDos"},{"location":"ponyzip-ZipOPSYSDos/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipOPSYSDos/#create","text":"[Source] new val create() : ZipOPSYSDos val^","title":"create"},{"location":"ponyzip-ZipOPSYSDos/#returns","text":"ZipOPSYSDos val^","title":"Returns"},{"location":"ponyzip-ZipOPSYSDos/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipOPSYSDos/#value","text":"[Source] fun box value() : U8 val","title":"value"},{"location":"ponyzip-ZipOPSYSDos/#returns_1","text":"U8 val","title":"Returns"},{"location":"ponyzip-ZipOPSYSDos/#eq","text":"[Source] fun box eq( that: ZipOPSYSDos val) : Bool val","title":"eq"},{"location":"ponyzip-ZipOPSYSDos/#parameters","text":"that: ZipOPSYSDos val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSDos/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSDos/#ne","text":"[Source] fun box ne( that: ZipOPSYSDos val) : Bool val","title":"ne"},{"location":"ponyzip-ZipOPSYSDos/#parameters_1","text":"that: ZipOPSYSDos val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSDos/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSMacintosh/","text":"ZipOPSYSMacintosh \u00b6 [Source] primitive val ZipOPSYSMacintosh Constructors \u00b6 create \u00b6 [Source] new val create() : ZipOPSYSMacintosh val^ Returns \u00b6 ZipOPSYSMacintosh val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: ZipOPSYSMacintosh val) : Bool val Parameters \u00b6 that: ZipOPSYSMacintosh val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipOPSYSMacintosh val) : Bool val Parameters \u00b6 that: ZipOPSYSMacintosh val Returns \u00b6 Bool val","title":"primitive ZipOPSYSMacintosh"},{"location":"ponyzip-ZipOPSYSMacintosh/#zipopsysmacintosh","text":"[Source] primitive val ZipOPSYSMacintosh","title":"ZipOPSYSMacintosh"},{"location":"ponyzip-ZipOPSYSMacintosh/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipOPSYSMacintosh/#create","text":"[Source] new val create() : ZipOPSYSMacintosh val^","title":"create"},{"location":"ponyzip-ZipOPSYSMacintosh/#returns","text":"ZipOPSYSMacintosh val^","title":"Returns"},{"location":"ponyzip-ZipOPSYSMacintosh/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipOPSYSMacintosh/#value","text":"[Source] fun box value() : U8 val","title":"value"},{"location":"ponyzip-ZipOPSYSMacintosh/#returns_1","text":"U8 val","title":"Returns"},{"location":"ponyzip-ZipOPSYSMacintosh/#eq","text":"[Source] fun box eq( that: ZipOPSYSMacintosh val) : Bool val","title":"eq"},{"location":"ponyzip-ZipOPSYSMacintosh/#parameters","text":"that: ZipOPSYSMacintosh val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSMacintosh/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSMacintosh/#ne","text":"[Source] fun box ne( that: ZipOPSYSMacintosh val) : Bool val","title":"ne"},{"location":"ponyzip-ZipOPSYSMacintosh/#parameters_1","text":"that: ZipOPSYSMacintosh val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSMacintosh/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSMvs/","text":"ZipOPSYSMvs \u00b6 [Source] primitive val ZipOPSYSMvs Constructors \u00b6 create \u00b6 [Source] new val create() : ZipOPSYSMvs val^ Returns \u00b6 ZipOPSYSMvs val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: ZipOPSYSMvs val) : Bool val Parameters \u00b6 that: ZipOPSYSMvs val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipOPSYSMvs val) : Bool val Parameters \u00b6 that: ZipOPSYSMvs val Returns \u00b6 Bool val","title":"primitive ZipOPSYSMvs"},{"location":"ponyzip-ZipOPSYSMvs/#zipopsysmvs","text":"[Source] primitive val ZipOPSYSMvs","title":"ZipOPSYSMvs"},{"location":"ponyzip-ZipOPSYSMvs/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipOPSYSMvs/#create","text":"[Source] new val create() : ZipOPSYSMvs val^","title":"create"},{"location":"ponyzip-ZipOPSYSMvs/#returns","text":"ZipOPSYSMvs val^","title":"Returns"},{"location":"ponyzip-ZipOPSYSMvs/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipOPSYSMvs/#value","text":"[Source] fun box value() : U8 val","title":"value"},{"location":"ponyzip-ZipOPSYSMvs/#returns_1","text":"U8 val","title":"Returns"},{"location":"ponyzip-ZipOPSYSMvs/#eq","text":"[Source] fun box eq( that: ZipOPSYSMvs val) : Bool val","title":"eq"},{"location":"ponyzip-ZipOPSYSMvs/#parameters","text":"that: ZipOPSYSMvs val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSMvs/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSMvs/#ne","text":"[Source] fun box ne( that: ZipOPSYSMvs val) : Bool val","title":"ne"},{"location":"ponyzip-ZipOPSYSMvs/#parameters_1","text":"that: ZipOPSYSMvs val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSMvs/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSOpenvms/","text":"ZipOPSYSOpenvms \u00b6 [Source] primitive val ZipOPSYSOpenvms Constructors \u00b6 create \u00b6 [Source] new val create() : ZipOPSYSOpenvms val^ Returns \u00b6 ZipOPSYSOpenvms val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: ZipOPSYSOpenvms val) : Bool val Parameters \u00b6 that: ZipOPSYSOpenvms val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipOPSYSOpenvms val) : Bool val Parameters \u00b6 that: ZipOPSYSOpenvms val Returns \u00b6 Bool val","title":"primitive ZipOPSYSOpenvms"},{"location":"ponyzip-ZipOPSYSOpenvms/#zipopsysopenvms","text":"[Source] primitive val ZipOPSYSOpenvms","title":"ZipOPSYSOpenvms"},{"location":"ponyzip-ZipOPSYSOpenvms/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipOPSYSOpenvms/#create","text":"[Source] new val create() : ZipOPSYSOpenvms val^","title":"create"},{"location":"ponyzip-ZipOPSYSOpenvms/#returns","text":"ZipOPSYSOpenvms val^","title":"Returns"},{"location":"ponyzip-ZipOPSYSOpenvms/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipOPSYSOpenvms/#value","text":"[Source] fun box value() : U8 val","title":"value"},{"location":"ponyzip-ZipOPSYSOpenvms/#returns_1","text":"U8 val","title":"Returns"},{"location":"ponyzip-ZipOPSYSOpenvms/#eq","text":"[Source] fun box eq( that: ZipOPSYSOpenvms val) : Bool val","title":"eq"},{"location":"ponyzip-ZipOPSYSOpenvms/#parameters","text":"that: ZipOPSYSOpenvms val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSOpenvms/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSOpenvms/#ne","text":"[Source] fun box ne( that: ZipOPSYSOpenvms val) : Bool val","title":"ne"},{"location":"ponyzip-ZipOPSYSOpenvms/#parameters_1","text":"that: ZipOPSYSOpenvms val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSOpenvms/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSOs2/","text":"ZipOPSYSOs2 \u00b6 [Source] primitive val ZipOPSYSOs2 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipOPSYSOs2 val^ Returns \u00b6 ZipOPSYSOs2 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: ZipOPSYSOs2 val) : Bool val Parameters \u00b6 that: ZipOPSYSOs2 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipOPSYSOs2 val) : Bool val Parameters \u00b6 that: ZipOPSYSOs2 val Returns \u00b6 Bool val","title":"primitive ZipOPSYSOs2"},{"location":"ponyzip-ZipOPSYSOs2/#zipopsysos2","text":"[Source] primitive val ZipOPSYSOs2","title":"ZipOPSYSOs2"},{"location":"ponyzip-ZipOPSYSOs2/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipOPSYSOs2/#create","text":"[Source] new val create() : ZipOPSYSOs2 val^","title":"create"},{"location":"ponyzip-ZipOPSYSOs2/#returns","text":"ZipOPSYSOs2 val^","title":"Returns"},{"location":"ponyzip-ZipOPSYSOs2/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipOPSYSOs2/#value","text":"[Source] fun box value() : U8 val","title":"value"},{"location":"ponyzip-ZipOPSYSOs2/#returns_1","text":"U8 val","title":"Returns"},{"location":"ponyzip-ZipOPSYSOs2/#eq","text":"[Source] fun box eq( that: ZipOPSYSOs2 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipOPSYSOs2/#parameters","text":"that: ZipOPSYSOs2 val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSOs2/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSOs2/#ne","text":"[Source] fun box ne( that: ZipOPSYSOs2 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipOPSYSOs2/#parameters_1","text":"that: ZipOPSYSOs2 val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSOs2/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSOs400/","text":"ZipOPSYSOs400 \u00b6 [Source] primitive val ZipOPSYSOs400 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipOPSYSOs400 val^ Returns \u00b6 ZipOPSYSOs400 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: ZipOPSYSOs400 val) : Bool val Parameters \u00b6 that: ZipOPSYSOs400 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipOPSYSOs400 val) : Bool val Parameters \u00b6 that: ZipOPSYSOs400 val Returns \u00b6 Bool val","title":"primitive ZipOPSYSOs400"},{"location":"ponyzip-ZipOPSYSOs400/#zipopsysos400","text":"[Source] primitive val ZipOPSYSOs400","title":"ZipOPSYSOs400"},{"location":"ponyzip-ZipOPSYSOs400/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipOPSYSOs400/#create","text":"[Source] new val create() : ZipOPSYSOs400 val^","title":"create"},{"location":"ponyzip-ZipOPSYSOs400/#returns","text":"ZipOPSYSOs400 val^","title":"Returns"},{"location":"ponyzip-ZipOPSYSOs400/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipOPSYSOs400/#value","text":"[Source] fun box value() : U8 val","title":"value"},{"location":"ponyzip-ZipOPSYSOs400/#returns_1","text":"U8 val","title":"Returns"},{"location":"ponyzip-ZipOPSYSOs400/#eq","text":"[Source] fun box eq( that: ZipOPSYSOs400 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipOPSYSOs400/#parameters","text":"that: ZipOPSYSOs400 val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSOs400/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSOs400/#ne","text":"[Source] fun box ne( that: ZipOPSYSOs400 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipOPSYSOs400/#parameters_1","text":"that: ZipOPSYSOs400 val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSOs400/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSOsx/","text":"ZipOPSYSOsx \u00b6 [Source] primitive val ZipOPSYSOsx Constructors \u00b6 create \u00b6 [Source] new val create() : ZipOPSYSOsx val^ Returns \u00b6 ZipOPSYSOsx val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: ZipOPSYSOsx val) : Bool val Parameters \u00b6 that: ZipOPSYSOsx val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipOPSYSOsx val) : Bool val Parameters \u00b6 that: ZipOPSYSOsx val Returns \u00b6 Bool val","title":"primitive ZipOPSYSOsx"},{"location":"ponyzip-ZipOPSYSOsx/#zipopsysosx","text":"[Source] primitive val ZipOPSYSOsx","title":"ZipOPSYSOsx"},{"location":"ponyzip-ZipOPSYSOsx/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipOPSYSOsx/#create","text":"[Source] new val create() : ZipOPSYSOsx val^","title":"create"},{"location":"ponyzip-ZipOPSYSOsx/#returns","text":"ZipOPSYSOsx val^","title":"Returns"},{"location":"ponyzip-ZipOPSYSOsx/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipOPSYSOsx/#value","text":"[Source] fun box value() : U8 val","title":"value"},{"location":"ponyzip-ZipOPSYSOsx/#returns_1","text":"U8 val","title":"Returns"},{"location":"ponyzip-ZipOPSYSOsx/#eq","text":"[Source] fun box eq( that: ZipOPSYSOsx val) : Bool val","title":"eq"},{"location":"ponyzip-ZipOPSYSOsx/#parameters","text":"that: ZipOPSYSOsx val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSOsx/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSOsx/#ne","text":"[Source] fun box ne( that: ZipOPSYSOsx val) : Bool val","title":"ne"},{"location":"ponyzip-ZipOPSYSOsx/#parameters_1","text":"that: ZipOPSYSOsx val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSOsx/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSTandem/","text":"ZipOPSYSTandem \u00b6 [Source] primitive val ZipOPSYSTandem Constructors \u00b6 create \u00b6 [Source] new val create() : ZipOPSYSTandem val^ Returns \u00b6 ZipOPSYSTandem val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: ZipOPSYSTandem val) : Bool val Parameters \u00b6 that: ZipOPSYSTandem val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipOPSYSTandem val) : Bool val Parameters \u00b6 that: ZipOPSYSTandem val Returns \u00b6 Bool val","title":"primitive ZipOPSYSTandem"},{"location":"ponyzip-ZipOPSYSTandem/#zipopsystandem","text":"[Source] primitive val ZipOPSYSTandem","title":"ZipOPSYSTandem"},{"location":"ponyzip-ZipOPSYSTandem/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipOPSYSTandem/#create","text":"[Source] new val create() : ZipOPSYSTandem val^","title":"create"},{"location":"ponyzip-ZipOPSYSTandem/#returns","text":"ZipOPSYSTandem val^","title":"Returns"},{"location":"ponyzip-ZipOPSYSTandem/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipOPSYSTandem/#value","text":"[Source] fun box value() : U8 val","title":"value"},{"location":"ponyzip-ZipOPSYSTandem/#returns_1","text":"U8 val","title":"Returns"},{"location":"ponyzip-ZipOPSYSTandem/#eq","text":"[Source] fun box eq( that: ZipOPSYSTandem val) : Bool val","title":"eq"},{"location":"ponyzip-ZipOPSYSTandem/#parameters","text":"that: ZipOPSYSTandem val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSTandem/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSTandem/#ne","text":"[Source] fun box ne( that: ZipOPSYSTandem val) : Bool val","title":"ne"},{"location":"ponyzip-ZipOPSYSTandem/#parameters_1","text":"that: ZipOPSYSTandem val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSTandem/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSUnix/","text":"ZipOPSYSUnix \u00b6 [Source] primitive val ZipOPSYSUnix Constructors \u00b6 create \u00b6 [Source] new val create() : ZipOPSYSUnix val^ Returns \u00b6 ZipOPSYSUnix val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: ZipOPSYSUnix val) : Bool val Parameters \u00b6 that: ZipOPSYSUnix val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipOPSYSUnix val) : Bool val Parameters \u00b6 that: ZipOPSYSUnix val Returns \u00b6 Bool val","title":"primitive ZipOPSYSUnix"},{"location":"ponyzip-ZipOPSYSUnix/#zipopsysunix","text":"[Source] primitive val ZipOPSYSUnix","title":"ZipOPSYSUnix"},{"location":"ponyzip-ZipOPSYSUnix/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipOPSYSUnix/#create","text":"[Source] new val create() : ZipOPSYSUnix val^","title":"create"},{"location":"ponyzip-ZipOPSYSUnix/#returns","text":"ZipOPSYSUnix val^","title":"Returns"},{"location":"ponyzip-ZipOPSYSUnix/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipOPSYSUnix/#value","text":"[Source] fun box value() : U8 val","title":"value"},{"location":"ponyzip-ZipOPSYSUnix/#returns_1","text":"U8 val","title":"Returns"},{"location":"ponyzip-ZipOPSYSUnix/#eq","text":"[Source] fun box eq( that: ZipOPSYSUnix val) : Bool val","title":"eq"},{"location":"ponyzip-ZipOPSYSUnix/#parameters","text":"that: ZipOPSYSUnix val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSUnix/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSUnix/#ne","text":"[Source] fun box ne( that: ZipOPSYSUnix val) : Bool val","title":"ne"},{"location":"ponyzip-ZipOPSYSUnix/#parameters_1","text":"that: ZipOPSYSUnix val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSUnix/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSVfat/","text":"ZipOPSYSVfat \u00b6 [Source] primitive val ZipOPSYSVfat Constructors \u00b6 create \u00b6 [Source] new val create() : ZipOPSYSVfat val^ Returns \u00b6 ZipOPSYSVfat val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: ZipOPSYSVfat val) : Bool val Parameters \u00b6 that: ZipOPSYSVfat val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipOPSYSVfat val) : Bool val Parameters \u00b6 that: ZipOPSYSVfat val Returns \u00b6 Bool val","title":"primitive ZipOPSYSVfat"},{"location":"ponyzip-ZipOPSYSVfat/#zipopsysvfat","text":"[Source] primitive val ZipOPSYSVfat","title":"ZipOPSYSVfat"},{"location":"ponyzip-ZipOPSYSVfat/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipOPSYSVfat/#create","text":"[Source] new val create() : ZipOPSYSVfat val^","title":"create"},{"location":"ponyzip-ZipOPSYSVfat/#returns","text":"ZipOPSYSVfat val^","title":"Returns"},{"location":"ponyzip-ZipOPSYSVfat/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipOPSYSVfat/#value","text":"[Source] fun box value() : U8 val","title":"value"},{"location":"ponyzip-ZipOPSYSVfat/#returns_1","text":"U8 val","title":"Returns"},{"location":"ponyzip-ZipOPSYSVfat/#eq","text":"[Source] fun box eq( that: ZipOPSYSVfat val) : Bool val","title":"eq"},{"location":"ponyzip-ZipOPSYSVfat/#parameters","text":"that: ZipOPSYSVfat val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSVfat/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSVfat/#ne","text":"[Source] fun box ne( that: ZipOPSYSVfat val) : Bool val","title":"ne"},{"location":"ponyzip-ZipOPSYSVfat/#parameters_1","text":"that: ZipOPSYSVfat val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSVfat/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSVmcms/","text":"ZipOPSYSVmcms \u00b6 [Source] primitive val ZipOPSYSVmcms Constructors \u00b6 create \u00b6 [Source] new val create() : ZipOPSYSVmcms val^ Returns \u00b6 ZipOPSYSVmcms val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: ZipOPSYSVmcms val) : Bool val Parameters \u00b6 that: ZipOPSYSVmcms val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipOPSYSVmcms val) : Bool val Parameters \u00b6 that: ZipOPSYSVmcms val Returns \u00b6 Bool val","title":"primitive ZipOPSYSVmcms"},{"location":"ponyzip-ZipOPSYSVmcms/#zipopsysvmcms","text":"[Source] primitive val ZipOPSYSVmcms","title":"ZipOPSYSVmcms"},{"location":"ponyzip-ZipOPSYSVmcms/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipOPSYSVmcms/#create","text":"[Source] new val create() : ZipOPSYSVmcms val^","title":"create"},{"location":"ponyzip-ZipOPSYSVmcms/#returns","text":"ZipOPSYSVmcms val^","title":"Returns"},{"location":"ponyzip-ZipOPSYSVmcms/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipOPSYSVmcms/#value","text":"[Source] fun box value() : U8 val","title":"value"},{"location":"ponyzip-ZipOPSYSVmcms/#returns_1","text":"U8 val","title":"Returns"},{"location":"ponyzip-ZipOPSYSVmcms/#eq","text":"[Source] fun box eq( that: ZipOPSYSVmcms val) : Bool val","title":"eq"},{"location":"ponyzip-ZipOPSYSVmcms/#parameters","text":"that: ZipOPSYSVmcms val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSVmcms/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSVmcms/#ne","text":"[Source] fun box ne( that: ZipOPSYSVmcms val) : Bool val","title":"ne"},{"location":"ponyzip-ZipOPSYSVmcms/#parameters_1","text":"that: ZipOPSYSVmcms val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSVmcms/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSVse/","text":"ZipOPSYSVse \u00b6 [Source] primitive val ZipOPSYSVse Constructors \u00b6 create \u00b6 [Source] new val create() : ZipOPSYSVse val^ Returns \u00b6 ZipOPSYSVse val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: ZipOPSYSVse val) : Bool val Parameters \u00b6 that: ZipOPSYSVse val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipOPSYSVse val) : Bool val Parameters \u00b6 that: ZipOPSYSVse val Returns \u00b6 Bool val","title":"primitive ZipOPSYSVse"},{"location":"ponyzip-ZipOPSYSVse/#zipopsysvse","text":"[Source] primitive val ZipOPSYSVse","title":"ZipOPSYSVse"},{"location":"ponyzip-ZipOPSYSVse/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipOPSYSVse/#create","text":"[Source] new val create() : ZipOPSYSVse val^","title":"create"},{"location":"ponyzip-ZipOPSYSVse/#returns","text":"ZipOPSYSVse val^","title":"Returns"},{"location":"ponyzip-ZipOPSYSVse/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipOPSYSVse/#value","text":"[Source] fun box value() : U8 val","title":"value"},{"location":"ponyzip-ZipOPSYSVse/#returns_1","text":"U8 val","title":"Returns"},{"location":"ponyzip-ZipOPSYSVse/#eq","text":"[Source] fun box eq( that: ZipOPSYSVse val) : Bool val","title":"eq"},{"location":"ponyzip-ZipOPSYSVse/#parameters","text":"that: ZipOPSYSVse val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSVse/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSVse/#ne","text":"[Source] fun box ne( that: ZipOPSYSVse val) : Bool val","title":"ne"},{"location":"ponyzip-ZipOPSYSVse/#parameters_1","text":"that: ZipOPSYSVse val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSVse/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSWindowsntfs/","text":"ZipOPSYSWindowsntfs \u00b6 [Source] primitive val ZipOPSYSWindowsntfs Constructors \u00b6 create \u00b6 [Source] new val create() : ZipOPSYSWindowsntfs val^ Returns \u00b6 ZipOPSYSWindowsntfs val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: ZipOPSYSWindowsntfs val) : Bool val Parameters \u00b6 that: ZipOPSYSWindowsntfs val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipOPSYSWindowsntfs val) : Bool val Parameters \u00b6 that: ZipOPSYSWindowsntfs val Returns \u00b6 Bool val","title":"primitive ZipOPSYSWindowsntfs"},{"location":"ponyzip-ZipOPSYSWindowsntfs/#zipopsyswindowsntfs","text":"[Source] primitive val ZipOPSYSWindowsntfs","title":"ZipOPSYSWindowsntfs"},{"location":"ponyzip-ZipOPSYSWindowsntfs/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipOPSYSWindowsntfs/#create","text":"[Source] new val create() : ZipOPSYSWindowsntfs val^","title":"create"},{"location":"ponyzip-ZipOPSYSWindowsntfs/#returns","text":"ZipOPSYSWindowsntfs val^","title":"Returns"},{"location":"ponyzip-ZipOPSYSWindowsntfs/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipOPSYSWindowsntfs/#value","text":"[Source] fun box value() : U8 val","title":"value"},{"location":"ponyzip-ZipOPSYSWindowsntfs/#returns_1","text":"U8 val","title":"Returns"},{"location":"ponyzip-ZipOPSYSWindowsntfs/#eq","text":"[Source] fun box eq( that: ZipOPSYSWindowsntfs val) : Bool val","title":"eq"},{"location":"ponyzip-ZipOPSYSWindowsntfs/#parameters","text":"that: ZipOPSYSWindowsntfs val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSWindowsntfs/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSWindowsntfs/#ne","text":"[Source] fun box ne( that: ZipOPSYSWindowsntfs val) : Bool val","title":"ne"},{"location":"ponyzip-ZipOPSYSWindowsntfs/#parameters_1","text":"that: ZipOPSYSWindowsntfs val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSWindowsntfs/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSZsystem/","text":"ZipOPSYSZsystem \u00b6 [Source] primitive val ZipOPSYSZsystem Constructors \u00b6 create \u00b6 [Source] new val create() : ZipOPSYSZsystem val^ Returns \u00b6 ZipOPSYSZsystem val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U8 val Returns \u00b6 U8 val eq \u00b6 [Source] fun box eq( that: ZipOPSYSZsystem val) : Bool val Parameters \u00b6 that: ZipOPSYSZsystem val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipOPSYSZsystem val) : Bool val Parameters \u00b6 that: ZipOPSYSZsystem val Returns \u00b6 Bool val","title":"primitive ZipOPSYSZsystem"},{"location":"ponyzip-ZipOPSYSZsystem/#zipopsyszsystem","text":"[Source] primitive val ZipOPSYSZsystem","title":"ZipOPSYSZsystem"},{"location":"ponyzip-ZipOPSYSZsystem/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipOPSYSZsystem/#create","text":"[Source] new val create() : ZipOPSYSZsystem val^","title":"create"},{"location":"ponyzip-ZipOPSYSZsystem/#returns","text":"ZipOPSYSZsystem val^","title":"Returns"},{"location":"ponyzip-ZipOPSYSZsystem/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipOPSYSZsystem/#value","text":"[Source] fun box value() : U8 val","title":"value"},{"location":"ponyzip-ZipOPSYSZsystem/#returns_1","text":"U8 val","title":"Returns"},{"location":"ponyzip-ZipOPSYSZsystem/#eq","text":"[Source] fun box eq( that: ZipOPSYSZsystem val) : Bool val","title":"eq"},{"location":"ponyzip-ZipOPSYSZsystem/#parameters","text":"that: ZipOPSYSZsystem val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSZsystem/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipOPSYSZsystem/#ne","text":"[Source] fun box ne( that: ZipOPSYSZsystem val) : Bool val","title":"ne"},{"location":"ponyzip-ZipOPSYSZsystem/#parameters_1","text":"that: ZipOPSYSZsystem val","title":"Parameters"},{"location":"ponyzip-ZipOPSYSZsystem/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipRDOnly/","text":"ZipRDOnly \u00b6 [Source] primitive val ZipRDOnly Constructors \u00b6 create \u00b6 [Source] new val create() : ZipRDOnly val^ Returns \u00b6 ZipRDOnly val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipRDOnly val) : Bool val Parameters \u00b6 that: ZipRDOnly val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipRDOnly val) : Bool val Parameters \u00b6 that: ZipRDOnly val Returns \u00b6 Bool val","title":"primitive ZipRDOnly"},{"location":"ponyzip-ZipRDOnly/#ziprdonly","text":"[Source] primitive val ZipRDOnly","title":"ZipRDOnly"},{"location":"ponyzip-ZipRDOnly/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipRDOnly/#create","text":"[Source] new val create() : ZipRDOnly val^","title":"create"},{"location":"ponyzip-ZipRDOnly/#returns","text":"ZipRDOnly val^","title":"Returns"},{"location":"ponyzip-ZipRDOnly/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipRDOnly/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipRDOnly/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipRDOnly/#eq","text":"[Source] fun box eq( that: ZipRDOnly val) : Bool val","title":"eq"},{"location":"ponyzip-ZipRDOnly/#parameters","text":"that: ZipRDOnly val","title":"Parameters"},{"location":"ponyzip-ZipRDOnly/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipRDOnly/#ne","text":"[Source] fun box ne( that: ZipRDOnly val) : Bool val","title":"ne"},{"location":"ponyzip-ZipRDOnly/#parameters_1","text":"that: ZipRDOnly val","title":"Parameters"},{"location":"ponyzip-ZipRDOnly/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEAcceptEmpty/","text":"ZipSOURCEAcceptEmpty \u00b6 [Source] primitive val ZipSOURCEAcceptEmpty Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSOURCEAcceptEmpty val^ Returns \u00b6 ZipSOURCEAcceptEmpty val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipSOURCEAcceptEmpty val) : Bool val Parameters \u00b6 that: ZipSOURCEAcceptEmpty val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSOURCEAcceptEmpty val) : Bool val Parameters \u00b6 that: ZipSOURCEAcceptEmpty val Returns \u00b6 Bool val","title":"primitive ZipSOURCEAcceptEmpty"},{"location":"ponyzip-ZipSOURCEAcceptEmpty/#zipsourceacceptempty","text":"[Source] primitive val ZipSOURCEAcceptEmpty","title":"ZipSOURCEAcceptEmpty"},{"location":"ponyzip-ZipSOURCEAcceptEmpty/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSOURCEAcceptEmpty/#create","text":"[Source] new val create() : ZipSOURCEAcceptEmpty val^","title":"create"},{"location":"ponyzip-ZipSOURCEAcceptEmpty/#returns","text":"ZipSOURCEAcceptEmpty val^","title":"Returns"},{"location":"ponyzip-ZipSOURCEAcceptEmpty/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSOURCEAcceptEmpty/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipSOURCEAcceptEmpty/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipSOURCEAcceptEmpty/#eq","text":"[Source] fun box eq( that: ZipSOURCEAcceptEmpty val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSOURCEAcceptEmpty/#parameters","text":"that: ZipSOURCEAcceptEmpty val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEAcceptEmpty/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEAcceptEmpty/#ne","text":"[Source] fun box ne( that: ZipSOURCEAcceptEmpty val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSOURCEAcceptEmpty/#parameters_1","text":"that: ZipSOURCEAcceptEmpty val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEAcceptEmpty/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEBeginWrite/","text":"ZipSOURCEBeginWrite \u00b6 [Source] primitive val ZipSOURCEBeginWrite Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSOURCEBeginWrite val^ Returns \u00b6 ZipSOURCEBeginWrite val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipSOURCEBeginWrite val) : Bool val Parameters \u00b6 that: ZipSOURCEBeginWrite val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSOURCEBeginWrite val) : Bool val Parameters \u00b6 that: ZipSOURCEBeginWrite val Returns \u00b6 Bool val","title":"primitive ZipSOURCEBeginWrite"},{"location":"ponyzip-ZipSOURCEBeginWrite/#zipsourcebeginwrite","text":"[Source] primitive val ZipSOURCEBeginWrite","title":"ZipSOURCEBeginWrite"},{"location":"ponyzip-ZipSOURCEBeginWrite/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSOURCEBeginWrite/#create","text":"[Source] new val create() : ZipSOURCEBeginWrite val^","title":"create"},{"location":"ponyzip-ZipSOURCEBeginWrite/#returns","text":"ZipSOURCEBeginWrite val^","title":"Returns"},{"location":"ponyzip-ZipSOURCEBeginWrite/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSOURCEBeginWrite/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipSOURCEBeginWrite/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipSOURCEBeginWrite/#eq","text":"[Source] fun box eq( that: ZipSOURCEBeginWrite val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSOURCEBeginWrite/#parameters","text":"that: ZipSOURCEBeginWrite val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEBeginWrite/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEBeginWrite/#ne","text":"[Source] fun box ne( that: ZipSOURCEBeginWrite val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSOURCEBeginWrite/#parameters_1","text":"that: ZipSOURCEBeginWrite val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEBeginWrite/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEBeginWriteCloning/","text":"ZipSOURCEBeginWriteCloning \u00b6 [Source] primitive val ZipSOURCEBeginWriteCloning Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSOURCEBeginWriteCloning val^ Returns \u00b6 ZipSOURCEBeginWriteCloning val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipSOURCEBeginWriteCloning val) : Bool val Parameters \u00b6 that: ZipSOURCEBeginWriteCloning val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSOURCEBeginWriteCloning val) : Bool val Parameters \u00b6 that: ZipSOURCEBeginWriteCloning val Returns \u00b6 Bool val","title":"primitive ZipSOURCEBeginWriteCloning"},{"location":"ponyzip-ZipSOURCEBeginWriteCloning/#zipsourcebeginwritecloning","text":"[Source] primitive val ZipSOURCEBeginWriteCloning","title":"ZipSOURCEBeginWriteCloning"},{"location":"ponyzip-ZipSOURCEBeginWriteCloning/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSOURCEBeginWriteCloning/#create","text":"[Source] new val create() : ZipSOURCEBeginWriteCloning val^","title":"create"},{"location":"ponyzip-ZipSOURCEBeginWriteCloning/#returns","text":"ZipSOURCEBeginWriteCloning val^","title":"Returns"},{"location":"ponyzip-ZipSOURCEBeginWriteCloning/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSOURCEBeginWriteCloning/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipSOURCEBeginWriteCloning/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipSOURCEBeginWriteCloning/#eq","text":"[Source] fun box eq( that: ZipSOURCEBeginWriteCloning val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSOURCEBeginWriteCloning/#parameters","text":"that: ZipSOURCEBeginWriteCloning val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEBeginWriteCloning/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEBeginWriteCloning/#ne","text":"[Source] fun box ne( that: ZipSOURCEBeginWriteCloning val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSOURCEBeginWriteCloning/#parameters_1","text":"that: ZipSOURCEBeginWriteCloning val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEBeginWriteCloning/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEClose/","text":"ZipSOURCEClose \u00b6 [Source] primitive val ZipSOURCEClose Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSOURCEClose val^ Returns \u00b6 ZipSOURCEClose val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipSOURCEClose val) : Bool val Parameters \u00b6 that: ZipSOURCEClose val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSOURCEClose val) : Bool val Parameters \u00b6 that: ZipSOURCEClose val Returns \u00b6 Bool val","title":"primitive ZipSOURCEClose"},{"location":"ponyzip-ZipSOURCEClose/#zipsourceclose","text":"[Source] primitive val ZipSOURCEClose","title":"ZipSOURCEClose"},{"location":"ponyzip-ZipSOURCEClose/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSOURCEClose/#create","text":"[Source] new val create() : ZipSOURCEClose val^","title":"create"},{"location":"ponyzip-ZipSOURCEClose/#returns","text":"ZipSOURCEClose val^","title":"Returns"},{"location":"ponyzip-ZipSOURCEClose/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSOURCEClose/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipSOURCEClose/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipSOURCEClose/#eq","text":"[Source] fun box eq( that: ZipSOURCEClose val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSOURCEClose/#parameters","text":"that: ZipSOURCEClose val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEClose/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEClose/#ne","text":"[Source] fun box ne( that: ZipSOURCEClose val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSOURCEClose/#parameters_1","text":"that: ZipSOURCEClose val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEClose/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCECommitWrite/","text":"ZipSOURCECommitWrite \u00b6 [Source] primitive val ZipSOURCECommitWrite Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSOURCECommitWrite val^ Returns \u00b6 ZipSOURCECommitWrite val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipSOURCECommitWrite val) : Bool val Parameters \u00b6 that: ZipSOURCECommitWrite val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSOURCECommitWrite val) : Bool val Parameters \u00b6 that: ZipSOURCECommitWrite val Returns \u00b6 Bool val","title":"primitive ZipSOURCECommitWrite"},{"location":"ponyzip-ZipSOURCECommitWrite/#zipsourcecommitwrite","text":"[Source] primitive val ZipSOURCECommitWrite","title":"ZipSOURCECommitWrite"},{"location":"ponyzip-ZipSOURCECommitWrite/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSOURCECommitWrite/#create","text":"[Source] new val create() : ZipSOURCECommitWrite val^","title":"create"},{"location":"ponyzip-ZipSOURCECommitWrite/#returns","text":"ZipSOURCECommitWrite val^","title":"Returns"},{"location":"ponyzip-ZipSOURCECommitWrite/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSOURCECommitWrite/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipSOURCECommitWrite/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipSOURCECommitWrite/#eq","text":"[Source] fun box eq( that: ZipSOURCECommitWrite val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSOURCECommitWrite/#parameters","text":"that: ZipSOURCECommitWrite val","title":"Parameters"},{"location":"ponyzip-ZipSOURCECommitWrite/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCECommitWrite/#ne","text":"[Source] fun box ne( that: ZipSOURCECommitWrite val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSOURCECommitWrite/#parameters_1","text":"that: ZipSOURCECommitWrite val","title":"Parameters"},{"location":"ponyzip-ZipSOURCECommitWrite/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEError/","text":"ZipSOURCEError \u00b6 [Source] primitive val ZipSOURCEError Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSOURCEError val^ Returns \u00b6 ZipSOURCEError val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipSOURCEError val) : Bool val Parameters \u00b6 that: ZipSOURCEError val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSOURCEError val) : Bool val Parameters \u00b6 that: ZipSOURCEError val Returns \u00b6 Bool val","title":"primitive ZipSOURCEError"},{"location":"ponyzip-ZipSOURCEError/#zipsourceerror","text":"[Source] primitive val ZipSOURCEError","title":"ZipSOURCEError"},{"location":"ponyzip-ZipSOURCEError/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSOURCEError/#create","text":"[Source] new val create() : ZipSOURCEError val^","title":"create"},{"location":"ponyzip-ZipSOURCEError/#returns","text":"ZipSOURCEError val^","title":"Returns"},{"location":"ponyzip-ZipSOURCEError/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSOURCEError/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipSOURCEError/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipSOURCEError/#eq","text":"[Source] fun box eq( that: ZipSOURCEError val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSOURCEError/#parameters","text":"that: ZipSOURCEError val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEError/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEError/#ne","text":"[Source] fun box ne( that: ZipSOURCEError val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSOURCEError/#parameters_1","text":"that: ZipSOURCEError val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEError/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEFree/","text":"ZipSOURCEFree \u00b6 [Source] primitive val ZipSOURCEFree Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSOURCEFree val^ Returns \u00b6 ZipSOURCEFree val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipSOURCEFree val) : Bool val Parameters \u00b6 that: ZipSOURCEFree val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSOURCEFree val) : Bool val Parameters \u00b6 that: ZipSOURCEFree val Returns \u00b6 Bool val","title":"primitive ZipSOURCEFree"},{"location":"ponyzip-ZipSOURCEFree/#zipsourcefree","text":"[Source] primitive val ZipSOURCEFree","title":"ZipSOURCEFree"},{"location":"ponyzip-ZipSOURCEFree/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSOURCEFree/#create","text":"[Source] new val create() : ZipSOURCEFree val^","title":"create"},{"location":"ponyzip-ZipSOURCEFree/#returns","text":"ZipSOURCEFree val^","title":"Returns"},{"location":"ponyzip-ZipSOURCEFree/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSOURCEFree/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipSOURCEFree/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipSOURCEFree/#eq","text":"[Source] fun box eq( that: ZipSOURCEFree val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSOURCEFree/#parameters","text":"that: ZipSOURCEFree val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEFree/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEFree/#ne","text":"[Source] fun box ne( that: ZipSOURCEFree val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSOURCEFree/#parameters_1","text":"that: ZipSOURCEFree val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEFree/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEGetFileAttributes/","text":"ZipSOURCEGetFileAttributes \u00b6 [Source] primitive val ZipSOURCEGetFileAttributes Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSOURCEGetFileAttributes val^ Returns \u00b6 ZipSOURCEGetFileAttributes val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipSOURCEGetFileAttributes val) : Bool val Parameters \u00b6 that: ZipSOURCEGetFileAttributes val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSOURCEGetFileAttributes val) : Bool val Parameters \u00b6 that: ZipSOURCEGetFileAttributes val Returns \u00b6 Bool val","title":"primitive ZipSOURCEGetFileAttributes"},{"location":"ponyzip-ZipSOURCEGetFileAttributes/#zipsourcegetfileattributes","text":"[Source] primitive val ZipSOURCEGetFileAttributes","title":"ZipSOURCEGetFileAttributes"},{"location":"ponyzip-ZipSOURCEGetFileAttributes/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSOURCEGetFileAttributes/#create","text":"[Source] new val create() : ZipSOURCEGetFileAttributes val^","title":"create"},{"location":"ponyzip-ZipSOURCEGetFileAttributes/#returns","text":"ZipSOURCEGetFileAttributes val^","title":"Returns"},{"location":"ponyzip-ZipSOURCEGetFileAttributes/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSOURCEGetFileAttributes/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipSOURCEGetFileAttributes/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipSOURCEGetFileAttributes/#eq","text":"[Source] fun box eq( that: ZipSOURCEGetFileAttributes val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSOURCEGetFileAttributes/#parameters","text":"that: ZipSOURCEGetFileAttributes val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEGetFileAttributes/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEGetFileAttributes/#ne","text":"[Source] fun box ne( that: ZipSOURCEGetFileAttributes val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSOURCEGetFileAttributes/#parameters_1","text":"that: ZipSOURCEGetFileAttributes val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEGetFileAttributes/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEOpen/","text":"ZipSOURCEOpen \u00b6 [Source] primitive val ZipSOURCEOpen Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSOURCEOpen val^ Returns \u00b6 ZipSOURCEOpen val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipSOURCEOpen val) : Bool val Parameters \u00b6 that: ZipSOURCEOpen val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSOURCEOpen val) : Bool val Parameters \u00b6 that: ZipSOURCEOpen val Returns \u00b6 Bool val","title":"primitive ZipSOURCEOpen"},{"location":"ponyzip-ZipSOURCEOpen/#zipsourceopen","text":"[Source] primitive val ZipSOURCEOpen","title":"ZipSOURCEOpen"},{"location":"ponyzip-ZipSOURCEOpen/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSOURCEOpen/#create","text":"[Source] new val create() : ZipSOURCEOpen val^","title":"create"},{"location":"ponyzip-ZipSOURCEOpen/#returns","text":"ZipSOURCEOpen val^","title":"Returns"},{"location":"ponyzip-ZipSOURCEOpen/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSOURCEOpen/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipSOURCEOpen/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipSOURCEOpen/#eq","text":"[Source] fun box eq( that: ZipSOURCEOpen val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSOURCEOpen/#parameters","text":"that: ZipSOURCEOpen val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEOpen/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEOpen/#ne","text":"[Source] fun box ne( that: ZipSOURCEOpen val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSOURCEOpen/#parameters_1","text":"that: ZipSOURCEOpen val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEOpen/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCERead/","text":"ZipSOURCERead \u00b6 [Source] primitive val ZipSOURCERead Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSOURCERead val^ Returns \u00b6 ZipSOURCERead val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipSOURCERead val) : Bool val Parameters \u00b6 that: ZipSOURCERead val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSOURCERead val) : Bool val Parameters \u00b6 that: ZipSOURCERead val Returns \u00b6 Bool val","title":"primitive ZipSOURCERead"},{"location":"ponyzip-ZipSOURCERead/#zipsourceread","text":"[Source] primitive val ZipSOURCERead","title":"ZipSOURCERead"},{"location":"ponyzip-ZipSOURCERead/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSOURCERead/#create","text":"[Source] new val create() : ZipSOURCERead val^","title":"create"},{"location":"ponyzip-ZipSOURCERead/#returns","text":"ZipSOURCERead val^","title":"Returns"},{"location":"ponyzip-ZipSOURCERead/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSOURCERead/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipSOURCERead/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipSOURCERead/#eq","text":"[Source] fun box eq( that: ZipSOURCERead val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSOURCERead/#parameters","text":"that: ZipSOURCERead val","title":"Parameters"},{"location":"ponyzip-ZipSOURCERead/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCERead/#ne","text":"[Source] fun box ne( that: ZipSOURCERead val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSOURCERead/#parameters_1","text":"that: ZipSOURCERead val","title":"Parameters"},{"location":"ponyzip-ZipSOURCERead/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCERemove/","text":"ZipSOURCERemove \u00b6 [Source] primitive val ZipSOURCERemove Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSOURCERemove val^ Returns \u00b6 ZipSOURCERemove val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipSOURCERemove val) : Bool val Parameters \u00b6 that: ZipSOURCERemove val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSOURCERemove val) : Bool val Parameters \u00b6 that: ZipSOURCERemove val Returns \u00b6 Bool val","title":"primitive ZipSOURCERemove"},{"location":"ponyzip-ZipSOURCERemove/#zipsourceremove","text":"[Source] primitive val ZipSOURCERemove","title":"ZipSOURCERemove"},{"location":"ponyzip-ZipSOURCERemove/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSOURCERemove/#create","text":"[Source] new val create() : ZipSOURCERemove val^","title":"create"},{"location":"ponyzip-ZipSOURCERemove/#returns","text":"ZipSOURCERemove val^","title":"Returns"},{"location":"ponyzip-ZipSOURCERemove/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSOURCERemove/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipSOURCERemove/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipSOURCERemove/#eq","text":"[Source] fun box eq( that: ZipSOURCERemove val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSOURCERemove/#parameters","text":"that: ZipSOURCERemove val","title":"Parameters"},{"location":"ponyzip-ZipSOURCERemove/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCERemove/#ne","text":"[Source] fun box ne( that: ZipSOURCERemove val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSOURCERemove/#parameters_1","text":"that: ZipSOURCERemove val","title":"Parameters"},{"location":"ponyzip-ZipSOURCERemove/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEReserved1/","text":"ZipSOURCEReserved1 \u00b6 [Source] primitive val ZipSOURCEReserved1 Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSOURCEReserved1 val^ Returns \u00b6 ZipSOURCEReserved1 val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipSOURCEReserved1 val) : Bool val Parameters \u00b6 that: ZipSOURCEReserved1 val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSOURCEReserved1 val) : Bool val Parameters \u00b6 that: ZipSOURCEReserved1 val Returns \u00b6 Bool val","title":"primitive ZipSOURCEReserved1"},{"location":"ponyzip-ZipSOURCEReserved1/#zipsourcereserved1","text":"[Source] primitive val ZipSOURCEReserved1","title":"ZipSOURCEReserved1"},{"location":"ponyzip-ZipSOURCEReserved1/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSOURCEReserved1/#create","text":"[Source] new val create() : ZipSOURCEReserved1 val^","title":"create"},{"location":"ponyzip-ZipSOURCEReserved1/#returns","text":"ZipSOURCEReserved1 val^","title":"Returns"},{"location":"ponyzip-ZipSOURCEReserved1/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSOURCEReserved1/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipSOURCEReserved1/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipSOURCEReserved1/#eq","text":"[Source] fun box eq( that: ZipSOURCEReserved1 val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSOURCEReserved1/#parameters","text":"that: ZipSOURCEReserved1 val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEReserved1/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEReserved1/#ne","text":"[Source] fun box ne( that: ZipSOURCEReserved1 val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSOURCEReserved1/#parameters_1","text":"that: ZipSOURCEReserved1 val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEReserved1/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCERollbackWrite/","text":"ZipSOURCERollbackWrite \u00b6 [Source] primitive val ZipSOURCERollbackWrite Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSOURCERollbackWrite val^ Returns \u00b6 ZipSOURCERollbackWrite val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipSOURCERollbackWrite val) : Bool val Parameters \u00b6 that: ZipSOURCERollbackWrite val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSOURCERollbackWrite val) : Bool val Parameters \u00b6 that: ZipSOURCERollbackWrite val Returns \u00b6 Bool val","title":"primitive ZipSOURCERollbackWrite"},{"location":"ponyzip-ZipSOURCERollbackWrite/#zipsourcerollbackwrite","text":"[Source] primitive val ZipSOURCERollbackWrite","title":"ZipSOURCERollbackWrite"},{"location":"ponyzip-ZipSOURCERollbackWrite/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSOURCERollbackWrite/#create","text":"[Source] new val create() : ZipSOURCERollbackWrite val^","title":"create"},{"location":"ponyzip-ZipSOURCERollbackWrite/#returns","text":"ZipSOURCERollbackWrite val^","title":"Returns"},{"location":"ponyzip-ZipSOURCERollbackWrite/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSOURCERollbackWrite/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipSOURCERollbackWrite/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipSOURCERollbackWrite/#eq","text":"[Source] fun box eq( that: ZipSOURCERollbackWrite val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSOURCERollbackWrite/#parameters","text":"that: ZipSOURCERollbackWrite val","title":"Parameters"},{"location":"ponyzip-ZipSOURCERollbackWrite/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCERollbackWrite/#ne","text":"[Source] fun box ne( that: ZipSOURCERollbackWrite val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSOURCERollbackWrite/#parameters_1","text":"that: ZipSOURCERollbackWrite val","title":"Parameters"},{"location":"ponyzip-ZipSOURCERollbackWrite/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCESeek/","text":"ZipSOURCESeek \u00b6 [Source] primitive val ZipSOURCESeek Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSOURCESeek val^ Returns \u00b6 ZipSOURCESeek val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipSOURCESeek val) : Bool val Parameters \u00b6 that: ZipSOURCESeek val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSOURCESeek val) : Bool val Parameters \u00b6 that: ZipSOURCESeek val Returns \u00b6 Bool val","title":"primitive ZipSOURCESeek"},{"location":"ponyzip-ZipSOURCESeek/#zipsourceseek","text":"[Source] primitive val ZipSOURCESeek","title":"ZipSOURCESeek"},{"location":"ponyzip-ZipSOURCESeek/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSOURCESeek/#create","text":"[Source] new val create() : ZipSOURCESeek val^","title":"create"},{"location":"ponyzip-ZipSOURCESeek/#returns","text":"ZipSOURCESeek val^","title":"Returns"},{"location":"ponyzip-ZipSOURCESeek/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSOURCESeek/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipSOURCESeek/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipSOURCESeek/#eq","text":"[Source] fun box eq( that: ZipSOURCESeek val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSOURCESeek/#parameters","text":"that: ZipSOURCESeek val","title":"Parameters"},{"location":"ponyzip-ZipSOURCESeek/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCESeek/#ne","text":"[Source] fun box ne( that: ZipSOURCESeek val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSOURCESeek/#parameters_1","text":"that: ZipSOURCESeek val","title":"Parameters"},{"location":"ponyzip-ZipSOURCESeek/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCESeekWrite/","text":"ZipSOURCESeekWrite \u00b6 [Source] primitive val ZipSOURCESeekWrite Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSOURCESeekWrite val^ Returns \u00b6 ZipSOURCESeekWrite val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipSOURCESeekWrite val) : Bool val Parameters \u00b6 that: ZipSOURCESeekWrite val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSOURCESeekWrite val) : Bool val Parameters \u00b6 that: ZipSOURCESeekWrite val Returns \u00b6 Bool val","title":"primitive ZipSOURCESeekWrite"},{"location":"ponyzip-ZipSOURCESeekWrite/#zipsourceseekwrite","text":"[Source] primitive val ZipSOURCESeekWrite","title":"ZipSOURCESeekWrite"},{"location":"ponyzip-ZipSOURCESeekWrite/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSOURCESeekWrite/#create","text":"[Source] new val create() : ZipSOURCESeekWrite val^","title":"create"},{"location":"ponyzip-ZipSOURCESeekWrite/#returns","text":"ZipSOURCESeekWrite val^","title":"Returns"},{"location":"ponyzip-ZipSOURCESeekWrite/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSOURCESeekWrite/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipSOURCESeekWrite/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipSOURCESeekWrite/#eq","text":"[Source] fun box eq( that: ZipSOURCESeekWrite val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSOURCESeekWrite/#parameters","text":"that: ZipSOURCESeekWrite val","title":"Parameters"},{"location":"ponyzip-ZipSOURCESeekWrite/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCESeekWrite/#ne","text":"[Source] fun box ne( that: ZipSOURCESeekWrite val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSOURCESeekWrite/#parameters_1","text":"that: ZipSOURCESeekWrite val","title":"Parameters"},{"location":"ponyzip-ZipSOURCESeekWrite/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEStat/","text":"ZipSOURCEStat \u00b6 [Source] primitive val ZipSOURCEStat Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSOURCEStat val^ Returns \u00b6 ZipSOURCEStat val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipSOURCEStat val) : Bool val Parameters \u00b6 that: ZipSOURCEStat val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSOURCEStat val) : Bool val Parameters \u00b6 that: ZipSOURCEStat val Returns \u00b6 Bool val","title":"primitive ZipSOURCEStat"},{"location":"ponyzip-ZipSOURCEStat/#zipsourcestat","text":"[Source] primitive val ZipSOURCEStat","title":"ZipSOURCEStat"},{"location":"ponyzip-ZipSOURCEStat/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSOURCEStat/#create","text":"[Source] new val create() : ZipSOURCEStat val^","title":"create"},{"location":"ponyzip-ZipSOURCEStat/#returns","text":"ZipSOURCEStat val^","title":"Returns"},{"location":"ponyzip-ZipSOURCEStat/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSOURCEStat/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipSOURCEStat/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipSOURCEStat/#eq","text":"[Source] fun box eq( that: ZipSOURCEStat val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSOURCEStat/#parameters","text":"that: ZipSOURCEStat val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEStat/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEStat/#ne","text":"[Source] fun box ne( that: ZipSOURCEStat val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSOURCEStat/#parameters_1","text":"that: ZipSOURCEStat val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEStat/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCESupports/","text":"ZipSOURCESupports \u00b6 [Source] primitive val ZipSOURCESupports Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSOURCESupports val^ Returns \u00b6 ZipSOURCESupports val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipSOURCESupports val) : Bool val Parameters \u00b6 that: ZipSOURCESupports val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSOURCESupports val) : Bool val Parameters \u00b6 that: ZipSOURCESupports val Returns \u00b6 Bool val","title":"primitive ZipSOURCESupports"},{"location":"ponyzip-ZipSOURCESupports/#zipsourcesupports","text":"[Source] primitive val ZipSOURCESupports","title":"ZipSOURCESupports"},{"location":"ponyzip-ZipSOURCESupports/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSOURCESupports/#create","text":"[Source] new val create() : ZipSOURCESupports val^","title":"create"},{"location":"ponyzip-ZipSOURCESupports/#returns","text":"ZipSOURCESupports val^","title":"Returns"},{"location":"ponyzip-ZipSOURCESupports/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSOURCESupports/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipSOURCESupports/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipSOURCESupports/#eq","text":"[Source] fun box eq( that: ZipSOURCESupports val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSOURCESupports/#parameters","text":"that: ZipSOURCESupports val","title":"Parameters"},{"location":"ponyzip-ZipSOURCESupports/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCESupports/#ne","text":"[Source] fun box ne( that: ZipSOURCESupports val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSOURCESupports/#parameters_1","text":"that: ZipSOURCESupports val","title":"Parameters"},{"location":"ponyzip-ZipSOURCESupports/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCESupportsReadable/","text":"ZipSOURCESupportsReadable \u00b6 [Source] type ZipSOURCESupportsReadable is (ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val) Type Alias For \u00b6 ( ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val)","title":"type ZipSOURCESupportsReadable"},{"location":"ponyzip-ZipSOURCESupportsReadable/#zipsourcesupportsreadable","text":"[Source] type ZipSOURCESupportsReadable is (ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val)","title":"ZipSOURCESupportsReadable"},{"location":"ponyzip-ZipSOURCESupportsReadable/#type-alias-for","text":"( ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val)","title":"Type Alias For"},{"location":"ponyzip-ZipSOURCESupportsReadableFlags/","text":"ZipSOURCESupportsReadableFlags \u00b6 [Source] type ZipSOURCESupportsReadableFlags is Flags[(ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val), U32 val] ref Type Alias For \u00b6 Flags [( ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val), U32 val] ref","title":"type ZipSOURCESupportsReadableFlags"},{"location":"ponyzip-ZipSOURCESupportsReadableFlags/#zipsourcesupportsreadableflags","text":"[Source] type ZipSOURCESupportsReadableFlags is Flags[(ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val), U32 val] ref","title":"ZipSOURCESupportsReadableFlags"},{"location":"ponyzip-ZipSOURCESupportsReadableFlags/#type-alias-for","text":"Flags [( ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val), U32 val] ref","title":"Type Alias For"},{"location":"ponyzip-ZipSOURCESupportsSeekable/","text":"ZipSOURCESupportsSeekable \u00b6 [Source] type ZipSOURCESupportsSeekable is (ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val | ZipSOURCESeek val | ZipSOURCETell val | ZipSOURCESupports val) Type Alias For \u00b6 ( ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val | ZipSOURCESeek val | ZipSOURCETell val | ZipSOURCESupports val)","title":"type ZipSOURCESupportsSeekable"},{"location":"ponyzip-ZipSOURCESupportsSeekable/#zipsourcesupportsseekable","text":"[Source] type ZipSOURCESupportsSeekable is (ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val | ZipSOURCESeek val | ZipSOURCETell val | ZipSOURCESupports val)","title":"ZipSOURCESupportsSeekable"},{"location":"ponyzip-ZipSOURCESupportsSeekable/#type-alias-for","text":"( ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val | ZipSOURCESeek val | ZipSOURCETell val | ZipSOURCESupports val)","title":"Type Alias For"},{"location":"ponyzip-ZipSOURCESupportsSeekableFlags/","text":"ZipSOURCESupportsSeekableFlags \u00b6 [Source] type ZipSOURCESupportsSeekableFlags is Flags[(ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val | ZipSOURCESeek val | ZipSOURCETell val | ZipSOURCESupports val | ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val), U32 val] ref Type Alias For \u00b6 Flags [( ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val | ZipSOURCESeek val | ZipSOURCETell val | ZipSOURCESupports val | ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val), U32 val] ref","title":"type ZipSOURCESupportsSeekableFlags"},{"location":"ponyzip-ZipSOURCESupportsSeekableFlags/#zipsourcesupportsseekableflags","text":"[Source] type ZipSOURCESupportsSeekableFlags is Flags[(ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val | ZipSOURCESeek val | ZipSOURCETell val | ZipSOURCESupports val | ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val), U32 val] ref","title":"ZipSOURCESupportsSeekableFlags"},{"location":"ponyzip-ZipSOURCESupportsSeekableFlags/#type-alias-for","text":"Flags [( ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val | ZipSOURCESeek val | ZipSOURCETell val | ZipSOURCESupports val | ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val), U32 val] ref","title":"Type Alias For"},{"location":"ponyzip-ZipSOURCESupportsWritable/","text":"ZipSOURCESupportsWritable \u00b6 [Source] type ZipSOURCESupportsWritable is (ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val | ZipSOURCESeek val | ZipSOURCETell val | ZipSOURCESupports val | ZipSOURCEBeginWrite val | ZipSOURCECommitWrite val | ZipSOURCERollbackWrite val | ZipSOURCEWrite val | ZipSOURCESeekWrite val | ZipSOURCETellWrite val | ZipSOURCERemove val) Type Alias For \u00b6 ( ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val | ZipSOURCESeek val | ZipSOURCETell val | ZipSOURCESupports val | ZipSOURCEBeginWrite val | ZipSOURCECommitWrite val | ZipSOURCERollbackWrite val | ZipSOURCEWrite val | ZipSOURCESeekWrite val | ZipSOURCETellWrite val | ZipSOURCERemove val)","title":"type ZipSOURCESupportsWritable"},{"location":"ponyzip-ZipSOURCESupportsWritable/#zipsourcesupportswritable","text":"[Source] type ZipSOURCESupportsWritable is (ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val | ZipSOURCESeek val | ZipSOURCETell val | ZipSOURCESupports val | ZipSOURCEBeginWrite val | ZipSOURCECommitWrite val | ZipSOURCERollbackWrite val | ZipSOURCEWrite val | ZipSOURCESeekWrite val | ZipSOURCETellWrite val | ZipSOURCERemove val)","title":"ZipSOURCESupportsWritable"},{"location":"ponyzip-ZipSOURCESupportsWritable/#type-alias-for","text":"( ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val | ZipSOURCESeek val | ZipSOURCETell val | ZipSOURCESupports val | ZipSOURCEBeginWrite val | ZipSOURCECommitWrite val | ZipSOURCERollbackWrite val | ZipSOURCEWrite val | ZipSOURCESeekWrite val | ZipSOURCETellWrite val | ZipSOURCERemove val)","title":"Type Alias For"},{"location":"ponyzip-ZipSOURCESupportsWritableFlags/","text":"ZipSOURCESupportsWritableFlags \u00b6 [Source] type ZipSOURCESupportsWritableFlags is Flags[(ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val | ZipSOURCESeek val | ZipSOURCETell val | ZipSOURCESupports val | ZipSOURCEBeginWrite val | ZipSOURCECommitWrite val | ZipSOURCERollbackWrite val | ZipSOURCEWrite val | ZipSOURCESeekWrite val | ZipSOURCETellWrite val | ZipSOURCERemove val | ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val | ZipSOURCESeek val | ZipSOURCETell val | ZipSOURCESupports val), U32 val] ref Type Alias For \u00b6 Flags [( ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val | ZipSOURCESeek val | ZipSOURCETell val | ZipSOURCESupports val | ZipSOURCEBeginWrite val | ZipSOURCECommitWrite val | ZipSOURCERollbackWrite val | ZipSOURCEWrite val | ZipSOURCESeekWrite val | ZipSOURCETellWrite val | ZipSOURCERemove val | ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val | ZipSOURCESeek val | ZipSOURCETell val | ZipSOURCESupports val), U32 val] ref","title":"type ZipSOURCESupportsWritableFlags"},{"location":"ponyzip-ZipSOURCESupportsWritableFlags/#zipsourcesupportswritableflags","text":"[Source] type ZipSOURCESupportsWritableFlags is Flags[(ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val | ZipSOURCESeek val | ZipSOURCETell val | ZipSOURCESupports val | ZipSOURCEBeginWrite val | ZipSOURCECommitWrite val | ZipSOURCERollbackWrite val | ZipSOURCEWrite val | ZipSOURCESeekWrite val | ZipSOURCETellWrite val | ZipSOURCERemove val | ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val | ZipSOURCESeek val | ZipSOURCETell val | ZipSOURCESupports val), U32 val] ref","title":"ZipSOURCESupportsWritableFlags"},{"location":"ponyzip-ZipSOURCESupportsWritableFlags/#type-alias-for","text":"Flags [( ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val | ZipSOURCESeek val | ZipSOURCETell val | ZipSOURCESupports val | ZipSOURCEBeginWrite val | ZipSOURCECommitWrite val | ZipSOURCERollbackWrite val | ZipSOURCEWrite val | ZipSOURCESeekWrite val | ZipSOURCETellWrite val | ZipSOURCERemove val | ZipSOURCEOpen val | ZipSOURCERead val | ZipSOURCEClose val | ZipSOURCEStat val | ZipSOURCEError val | ZipSOURCEFree val | ZipSOURCESeek val | ZipSOURCETell val | ZipSOURCESupports val), U32 val] ref","title":"Type Alias For"},{"location":"ponyzip-ZipSOURCETell/","text":"ZipSOURCETell \u00b6 [Source] primitive val ZipSOURCETell Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSOURCETell val^ Returns \u00b6 ZipSOURCETell val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipSOURCETell val) : Bool val Parameters \u00b6 that: ZipSOURCETell val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSOURCETell val) : Bool val Parameters \u00b6 that: ZipSOURCETell val Returns \u00b6 Bool val","title":"primitive ZipSOURCETell"},{"location":"ponyzip-ZipSOURCETell/#zipsourcetell","text":"[Source] primitive val ZipSOURCETell","title":"ZipSOURCETell"},{"location":"ponyzip-ZipSOURCETell/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSOURCETell/#create","text":"[Source] new val create() : ZipSOURCETell val^","title":"create"},{"location":"ponyzip-ZipSOURCETell/#returns","text":"ZipSOURCETell val^","title":"Returns"},{"location":"ponyzip-ZipSOURCETell/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSOURCETell/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipSOURCETell/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipSOURCETell/#eq","text":"[Source] fun box eq( that: ZipSOURCETell val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSOURCETell/#parameters","text":"that: ZipSOURCETell val","title":"Parameters"},{"location":"ponyzip-ZipSOURCETell/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCETell/#ne","text":"[Source] fun box ne( that: ZipSOURCETell val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSOURCETell/#parameters_1","text":"that: ZipSOURCETell val","title":"Parameters"},{"location":"ponyzip-ZipSOURCETell/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCETellWrite/","text":"ZipSOURCETellWrite \u00b6 [Source] primitive val ZipSOURCETellWrite Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSOURCETellWrite val^ Returns \u00b6 ZipSOURCETellWrite val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipSOURCETellWrite val) : Bool val Parameters \u00b6 that: ZipSOURCETellWrite val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSOURCETellWrite val) : Bool val Parameters \u00b6 that: ZipSOURCETellWrite val Returns \u00b6 Bool val","title":"primitive ZipSOURCETellWrite"},{"location":"ponyzip-ZipSOURCETellWrite/#zipsourcetellwrite","text":"[Source] primitive val ZipSOURCETellWrite","title":"ZipSOURCETellWrite"},{"location":"ponyzip-ZipSOURCETellWrite/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSOURCETellWrite/#create","text":"[Source] new val create() : ZipSOURCETellWrite val^","title":"create"},{"location":"ponyzip-ZipSOURCETellWrite/#returns","text":"ZipSOURCETellWrite val^","title":"Returns"},{"location":"ponyzip-ZipSOURCETellWrite/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSOURCETellWrite/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipSOURCETellWrite/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipSOURCETellWrite/#eq","text":"[Source] fun box eq( that: ZipSOURCETellWrite val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSOURCETellWrite/#parameters","text":"that: ZipSOURCETellWrite val","title":"Parameters"},{"location":"ponyzip-ZipSOURCETellWrite/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCETellWrite/#ne","text":"[Source] fun box ne( that: ZipSOURCETellWrite val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSOURCETellWrite/#parameters_1","text":"that: ZipSOURCETellWrite val","title":"Parameters"},{"location":"ponyzip-ZipSOURCETellWrite/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEWrite/","text":"ZipSOURCEWrite \u00b6 [Source] primitive val ZipSOURCEWrite Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSOURCEWrite val^ Returns \u00b6 ZipSOURCEWrite val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipSOURCEWrite val) : Bool val Parameters \u00b6 that: ZipSOURCEWrite val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSOURCEWrite val) : Bool val Parameters \u00b6 that: ZipSOURCEWrite val Returns \u00b6 Bool val","title":"primitive ZipSOURCEWrite"},{"location":"ponyzip-ZipSOURCEWrite/#zipsourcewrite","text":"[Source] primitive val ZipSOURCEWrite","title":"ZipSOURCEWrite"},{"location":"ponyzip-ZipSOURCEWrite/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSOURCEWrite/#create","text":"[Source] new val create() : ZipSOURCEWrite val^","title":"create"},{"location":"ponyzip-ZipSOURCEWrite/#returns","text":"ZipSOURCEWrite val^","title":"Returns"},{"location":"ponyzip-ZipSOURCEWrite/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSOURCEWrite/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipSOURCEWrite/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipSOURCEWrite/#eq","text":"[Source] fun box eq( that: ZipSOURCEWrite val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSOURCEWrite/#parameters","text":"that: ZipSOURCEWrite val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEWrite/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSOURCEWrite/#ne","text":"[Source] fun box ne( that: ZipSOURCEWrite val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSOURCEWrite/#parameters_1","text":"that: ZipSOURCEWrite val","title":"Parameters"},{"location":"ponyzip-ZipSOURCEWrite/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSTATCompMethod/","text":"ZipSTATCompMethod \u00b6 [Source] primitive val ZipSTATCompMethod Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSTATCompMethod val^ Returns \u00b6 ZipSTATCompMethod val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipSTATCompMethod val) : Bool val Parameters \u00b6 that: ZipSTATCompMethod val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSTATCompMethod val) : Bool val Parameters \u00b6 that: ZipSTATCompMethod val Returns \u00b6 Bool val","title":"primitive ZipSTATCompMethod"},{"location":"ponyzip-ZipSTATCompMethod/#zipstatcompmethod","text":"[Source] primitive val ZipSTATCompMethod","title":"ZipSTATCompMethod"},{"location":"ponyzip-ZipSTATCompMethod/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSTATCompMethod/#create","text":"[Source] new val create() : ZipSTATCompMethod val^","title":"create"},{"location":"ponyzip-ZipSTATCompMethod/#returns","text":"ZipSTATCompMethod val^","title":"Returns"},{"location":"ponyzip-ZipSTATCompMethod/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSTATCompMethod/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipSTATCompMethod/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipSTATCompMethod/#eq","text":"[Source] fun box eq( that: ZipSTATCompMethod val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSTATCompMethod/#parameters","text":"that: ZipSTATCompMethod val","title":"Parameters"},{"location":"ponyzip-ZipSTATCompMethod/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSTATCompMethod/#ne","text":"[Source] fun box ne( that: ZipSTATCompMethod val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSTATCompMethod/#parameters_1","text":"that: ZipSTATCompMethod val","title":"Parameters"},{"location":"ponyzip-ZipSTATCompMethod/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSTATCompSize/","text":"ZipSTATCompSize \u00b6 [Source] primitive val ZipSTATCompSize Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSTATCompSize val^ Returns \u00b6 ZipSTATCompSize val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipSTATCompSize val) : Bool val Parameters \u00b6 that: ZipSTATCompSize val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSTATCompSize val) : Bool val Parameters \u00b6 that: ZipSTATCompSize val Returns \u00b6 Bool val","title":"primitive ZipSTATCompSize"},{"location":"ponyzip-ZipSTATCompSize/#zipstatcompsize","text":"[Source] primitive val ZipSTATCompSize","title":"ZipSTATCompSize"},{"location":"ponyzip-ZipSTATCompSize/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSTATCompSize/#create","text":"[Source] new val create() : ZipSTATCompSize val^","title":"create"},{"location":"ponyzip-ZipSTATCompSize/#returns","text":"ZipSTATCompSize val^","title":"Returns"},{"location":"ponyzip-ZipSTATCompSize/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSTATCompSize/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipSTATCompSize/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipSTATCompSize/#eq","text":"[Source] fun box eq( that: ZipSTATCompSize val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSTATCompSize/#parameters","text":"that: ZipSTATCompSize val","title":"Parameters"},{"location":"ponyzip-ZipSTATCompSize/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSTATCompSize/#ne","text":"[Source] fun box ne( that: ZipSTATCompSize val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSTATCompSize/#parameters_1","text":"that: ZipSTATCompSize val","title":"Parameters"},{"location":"ponyzip-ZipSTATCompSize/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSTATCrc/","text":"ZipSTATCrc \u00b6 [Source] primitive val ZipSTATCrc Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSTATCrc val^ Returns \u00b6 ZipSTATCrc val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipSTATCrc val) : Bool val Parameters \u00b6 that: ZipSTATCrc val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSTATCrc val) : Bool val Parameters \u00b6 that: ZipSTATCrc val Returns \u00b6 Bool val","title":"primitive ZipSTATCrc"},{"location":"ponyzip-ZipSTATCrc/#zipstatcrc","text":"[Source] primitive val ZipSTATCrc","title":"ZipSTATCrc"},{"location":"ponyzip-ZipSTATCrc/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSTATCrc/#create","text":"[Source] new val create() : ZipSTATCrc val^","title":"create"},{"location":"ponyzip-ZipSTATCrc/#returns","text":"ZipSTATCrc val^","title":"Returns"},{"location":"ponyzip-ZipSTATCrc/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSTATCrc/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipSTATCrc/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipSTATCrc/#eq","text":"[Source] fun box eq( that: ZipSTATCrc val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSTATCrc/#parameters","text":"that: ZipSTATCrc val","title":"Parameters"},{"location":"ponyzip-ZipSTATCrc/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSTATCrc/#ne","text":"[Source] fun box ne( that: ZipSTATCrc val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSTATCrc/#parameters_1","text":"that: ZipSTATCrc val","title":"Parameters"},{"location":"ponyzip-ZipSTATCrc/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSTATEncryptionMethod/","text":"ZipSTATEncryptionMethod \u00b6 [Source] primitive val ZipSTATEncryptionMethod Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSTATEncryptionMethod val^ Returns \u00b6 ZipSTATEncryptionMethod val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipSTATEncryptionMethod val) : Bool val Parameters \u00b6 that: ZipSTATEncryptionMethod val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSTATEncryptionMethod val) : Bool val Parameters \u00b6 that: ZipSTATEncryptionMethod val Returns \u00b6 Bool val","title":"primitive ZipSTATEncryptionMethod"},{"location":"ponyzip-ZipSTATEncryptionMethod/#zipstatencryptionmethod","text":"[Source] primitive val ZipSTATEncryptionMethod","title":"ZipSTATEncryptionMethod"},{"location":"ponyzip-ZipSTATEncryptionMethod/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSTATEncryptionMethod/#create","text":"[Source] new val create() : ZipSTATEncryptionMethod val^","title":"create"},{"location":"ponyzip-ZipSTATEncryptionMethod/#returns","text":"ZipSTATEncryptionMethod val^","title":"Returns"},{"location":"ponyzip-ZipSTATEncryptionMethod/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSTATEncryptionMethod/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipSTATEncryptionMethod/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipSTATEncryptionMethod/#eq","text":"[Source] fun box eq( that: ZipSTATEncryptionMethod val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSTATEncryptionMethod/#parameters","text":"that: ZipSTATEncryptionMethod val","title":"Parameters"},{"location":"ponyzip-ZipSTATEncryptionMethod/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSTATEncryptionMethod/#ne","text":"[Source] fun box ne( that: ZipSTATEncryptionMethod val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSTATEncryptionMethod/#parameters_1","text":"that: ZipSTATEncryptionMethod val","title":"Parameters"},{"location":"ponyzip-ZipSTATEncryptionMethod/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSTATFlag/","text":"ZipSTATFlag \u00b6 [Source] primitive val ZipSTATFlag Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSTATFlag val^ Returns \u00b6 ZipSTATFlag val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipSTATFlag val) : Bool val Parameters \u00b6 that: ZipSTATFlag val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSTATFlag val) : Bool val Parameters \u00b6 that: ZipSTATFlag val Returns \u00b6 Bool val","title":"primitive ZipSTATFlag"},{"location":"ponyzip-ZipSTATFlag/#zipstatflag","text":"[Source] primitive val ZipSTATFlag","title":"ZipSTATFlag"},{"location":"ponyzip-ZipSTATFlag/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSTATFlag/#create","text":"[Source] new val create() : ZipSTATFlag val^","title":"create"},{"location":"ponyzip-ZipSTATFlag/#returns","text":"ZipSTATFlag val^","title":"Returns"},{"location":"ponyzip-ZipSTATFlag/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSTATFlag/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipSTATFlag/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipSTATFlag/#eq","text":"[Source] fun box eq( that: ZipSTATFlag val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSTATFlag/#parameters","text":"that: ZipSTATFlag val","title":"Parameters"},{"location":"ponyzip-ZipSTATFlag/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSTATFlag/#ne","text":"[Source] fun box ne( that: ZipSTATFlag val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSTATFlag/#parameters_1","text":"that: ZipSTATFlag val","title":"Parameters"},{"location":"ponyzip-ZipSTATFlag/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSTATIndex/","text":"ZipSTATIndex \u00b6 [Source] primitive val ZipSTATIndex Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSTATIndex val^ Returns \u00b6 ZipSTATIndex val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipSTATIndex val) : Bool val Parameters \u00b6 that: ZipSTATIndex val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSTATIndex val) : Bool val Parameters \u00b6 that: ZipSTATIndex val Returns \u00b6 Bool val","title":"primitive ZipSTATIndex"},{"location":"ponyzip-ZipSTATIndex/#zipstatindex","text":"[Source] primitive val ZipSTATIndex","title":"ZipSTATIndex"},{"location":"ponyzip-ZipSTATIndex/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSTATIndex/#create","text":"[Source] new val create() : ZipSTATIndex val^","title":"create"},{"location":"ponyzip-ZipSTATIndex/#returns","text":"ZipSTATIndex val^","title":"Returns"},{"location":"ponyzip-ZipSTATIndex/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSTATIndex/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipSTATIndex/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipSTATIndex/#eq","text":"[Source] fun box eq( that: ZipSTATIndex val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSTATIndex/#parameters","text":"that: ZipSTATIndex val","title":"Parameters"},{"location":"ponyzip-ZipSTATIndex/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSTATIndex/#ne","text":"[Source] fun box ne( that: ZipSTATIndex val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSTATIndex/#parameters_1","text":"that: ZipSTATIndex val","title":"Parameters"},{"location":"ponyzip-ZipSTATIndex/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSTATMtime/","text":"ZipSTATMtime \u00b6 [Source] primitive val ZipSTATMtime Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSTATMtime val^ Returns \u00b6 ZipSTATMtime val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipSTATMtime val) : Bool val Parameters \u00b6 that: ZipSTATMtime val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSTATMtime val) : Bool val Parameters \u00b6 that: ZipSTATMtime val Returns \u00b6 Bool val","title":"primitive ZipSTATMtime"},{"location":"ponyzip-ZipSTATMtime/#zipstatmtime","text":"[Source] primitive val ZipSTATMtime","title":"ZipSTATMtime"},{"location":"ponyzip-ZipSTATMtime/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSTATMtime/#create","text":"[Source] new val create() : ZipSTATMtime val^","title":"create"},{"location":"ponyzip-ZipSTATMtime/#returns","text":"ZipSTATMtime val^","title":"Returns"},{"location":"ponyzip-ZipSTATMtime/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSTATMtime/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipSTATMtime/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipSTATMtime/#eq","text":"[Source] fun box eq( that: ZipSTATMtime val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSTATMtime/#parameters","text":"that: ZipSTATMtime val","title":"Parameters"},{"location":"ponyzip-ZipSTATMtime/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSTATMtime/#ne","text":"[Source] fun box ne( that: ZipSTATMtime val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSTATMtime/#parameters_1","text":"that: ZipSTATMtime val","title":"Parameters"},{"location":"ponyzip-ZipSTATMtime/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSTATName/","text":"ZipSTATName \u00b6 [Source] primitive val ZipSTATName Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSTATName val^ Returns \u00b6 ZipSTATName val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipSTATName val) : Bool val Parameters \u00b6 that: ZipSTATName val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSTATName val) : Bool val Parameters \u00b6 that: ZipSTATName val Returns \u00b6 Bool val","title":"primitive ZipSTATName"},{"location":"ponyzip-ZipSTATName/#zipstatname","text":"[Source] primitive val ZipSTATName","title":"ZipSTATName"},{"location":"ponyzip-ZipSTATName/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSTATName/#create","text":"[Source] new val create() : ZipSTATName val^","title":"create"},{"location":"ponyzip-ZipSTATName/#returns","text":"ZipSTATName val^","title":"Returns"},{"location":"ponyzip-ZipSTATName/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSTATName/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipSTATName/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipSTATName/#eq","text":"[Source] fun box eq( that: ZipSTATName val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSTATName/#parameters","text":"that: ZipSTATName val","title":"Parameters"},{"location":"ponyzip-ZipSTATName/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSTATName/#ne","text":"[Source] fun box ne( that: ZipSTATName val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSTATName/#parameters_1","text":"that: ZipSTATName val","title":"Parameters"},{"location":"ponyzip-ZipSTATName/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSTATSize/","text":"ZipSTATSize \u00b6 [Source] primitive val ZipSTATSize Constructors \u00b6 create \u00b6 [Source] new val create() : ZipSTATSize val^ Returns \u00b6 ZipSTATSize val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U16 val Returns \u00b6 U16 val eq \u00b6 [Source] fun box eq( that: ZipSTATSize val) : Bool val Parameters \u00b6 that: ZipSTATSize val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipSTATSize val) : Bool val Parameters \u00b6 that: ZipSTATSize val Returns \u00b6 Bool val","title":"primitive ZipSTATSize"},{"location":"ponyzip-ZipSTATSize/#zipstatsize","text":"[Source] primitive val ZipSTATSize","title":"ZipSTATSize"},{"location":"ponyzip-ZipSTATSize/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipSTATSize/#create","text":"[Source] new val create() : ZipSTATSize val^","title":"create"},{"location":"ponyzip-ZipSTATSize/#returns","text":"ZipSTATSize val^","title":"Returns"},{"location":"ponyzip-ZipSTATSize/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipSTATSize/#value","text":"[Source] fun box value() : U16 val","title":"value"},{"location":"ponyzip-ZipSTATSize/#returns_1","text":"U16 val","title":"Returns"},{"location":"ponyzip-ZipSTATSize/#eq","text":"[Source] fun box eq( that: ZipSTATSize val) : Bool val","title":"eq"},{"location":"ponyzip-ZipSTATSize/#parameters","text":"that: ZipSTATSize val","title":"Parameters"},{"location":"ponyzip-ZipSTATSize/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipSTATSize/#ne","text":"[Source] fun box ne( that: ZipSTATSize val) : Bool val","title":"ne"},{"location":"ponyzip-ZipSTATSize/#parameters_1","text":"that: ZipSTATSize val","title":"Parameters"},{"location":"ponyzip-ZipSTATSize/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipStatFlags/","text":"ZipStatFlags \u00b6 [Source] type ZipStatFlags is Flags[(ZipSTATName val | ZipSTATIndex val | ZipSTATSize val | ZipSTATCompSize val | ZipSTATMtime val | ZipSTATCrc val | ZipSTATCompMethod val | ZipSTATEncryptionMethod val | ZipSTATFlag val), U16 val] ref Type Alias For \u00b6 Flags [( ZipSTATName val | ZipSTATIndex val | ZipSTATSize val | ZipSTATCompSize val | ZipSTATMtime val | ZipSTATCrc val | ZipSTATCompMethod val | ZipSTATEncryptionMethod val | ZipSTATFlag val), U16 val] ref","title":"type ZipStatFlags"},{"location":"ponyzip-ZipStatFlags/#zipstatflags","text":"[Source] type ZipStatFlags is Flags[(ZipSTATName val | ZipSTATIndex val | ZipSTATSize val | ZipSTATCompSize val | ZipSTATMtime val | ZipSTATCrc val | ZipSTATCompMethod val | ZipSTATEncryptionMethod val | ZipSTATFlag val), U16 val] ref","title":"ZipStatFlags"},{"location":"ponyzip-ZipStatFlags/#type-alias-for","text":"Flags [( ZipSTATName val | ZipSTATIndex val | ZipSTATSize val | ZipSTATCompSize val | ZipSTATMtime val | ZipSTATCrc val | ZipSTATCompMethod val | ZipSTATEncryptionMethod val | ZipSTATFlag val), U16 val] ref","title":"Type Alias For"},{"location":"ponyzip-ZipTruncate/","text":"ZipTruncate \u00b6 [Source] primitive val ZipTruncate Constructors \u00b6 create \u00b6 [Source] new val create() : ZipTruncate val^ Returns \u00b6 ZipTruncate val^ Public Functions \u00b6 value \u00b6 [Source] fun box value() : U32 val Returns \u00b6 U32 val eq \u00b6 [Source] fun box eq( that: ZipTruncate val) : Bool val Parameters \u00b6 that: ZipTruncate val Returns \u00b6 Bool val ne \u00b6 [Source] fun box ne( that: ZipTruncate val) : Bool val Parameters \u00b6 that: ZipTruncate val Returns \u00b6 Bool val","title":"primitive ZipTruncate"},{"location":"ponyzip-ZipTruncate/#ziptruncate","text":"[Source] primitive val ZipTruncate","title":"ZipTruncate"},{"location":"ponyzip-ZipTruncate/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-ZipTruncate/#create","text":"[Source] new val create() : ZipTruncate val^","title":"create"},{"location":"ponyzip-ZipTruncate/#returns","text":"ZipTruncate val^","title":"Returns"},{"location":"ponyzip-ZipTruncate/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-ZipTruncate/#value","text":"[Source] fun box value() : U32 val","title":"value"},{"location":"ponyzip-ZipTruncate/#returns_1","text":"U32 val","title":"Returns"},{"location":"ponyzip-ZipTruncate/#eq","text":"[Source] fun box eq( that: ZipTruncate val) : Bool val","title":"eq"},{"location":"ponyzip-ZipTruncate/#parameters","text":"that: ZipTruncate val","title":"Parameters"},{"location":"ponyzip-ZipTruncate/#returns_2","text":"Bool val","title":"Returns"},{"location":"ponyzip-ZipTruncate/#ne","text":"[Source] fun box ne( that: ZipTruncate val) : Bool val","title":"ne"},{"location":"ponyzip-ZipTruncate/#parameters_1","text":"that: ZipTruncate val","title":"Parameters"},{"location":"ponyzip-ZipTruncate/#returns_3","text":"Bool val","title":"Returns"},{"location":"ponyzip-Zipbufferfragment/","text":"Zipbufferfragment \u00b6 [Source] struct ref Zipbufferfragment Constructors \u00b6 create \u00b6 [Source] new iso create() : Zipbufferfragment iso^ Returns \u00b6 Zipbufferfragment iso^ Public fields \u00b6 var pdata: Pointer [ U8 val] ref \u00b6 [Source] var plength: U64 val \u00b6 [Source]","title":"struct Zipbufferfragment"},{"location":"ponyzip-Zipbufferfragment/#zipbufferfragment","text":"[Source] struct ref Zipbufferfragment","title":"Zipbufferfragment"},{"location":"ponyzip-Zipbufferfragment/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-Zipbufferfragment/#create","text":"[Source] new iso create() : Zipbufferfragment iso^","title":"create"},{"location":"ponyzip-Zipbufferfragment/#returns","text":"Zipbufferfragment iso^","title":"Returns"},{"location":"ponyzip-Zipbufferfragment/#public-fields","text":"","title":"Public fields"},{"location":"ponyzip-Zipbufferfragment/#var-pdata-pointeru8-val-ref","text":"[Source]","title":"var pdata: Pointer[U8 val] ref"},{"location":"ponyzip-Zipbufferfragment/#var-plength-u64-val","text":"[Source]","title":"var plength: U64 val"},{"location":"ponyzip-Ziperror/","text":"Ziperror \u00b6 [Source] struct ref Ziperror Constructors \u00b6 create \u00b6 [Source] new iso create() : Ziperror iso^ Returns \u00b6 Ziperror iso^ Public fields \u00b6 var pziperr: I32 val \u00b6 [Source] var psyserr: I32 val \u00b6 [Source] var pstr: Pointer [ U8 val] ref \u00b6 [Source]","title":"struct Ziperror"},{"location":"ponyzip-Ziperror/#ziperror","text":"[Source] struct ref Ziperror","title":"Ziperror"},{"location":"ponyzip-Ziperror/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-Ziperror/#create","text":"[Source] new iso create() : Ziperror iso^","title":"create"},{"location":"ponyzip-Ziperror/#returns","text":"Ziperror iso^","title":"Returns"},{"location":"ponyzip-Ziperror/#public-fields","text":"","title":"Public fields"},{"location":"ponyzip-Ziperror/#var-pziperr-i32-val","text":"[Source]","title":"var pziperr: I32 val"},{"location":"ponyzip-Ziperror/#var-psyserr-i32-val","text":"[Source]","title":"var psyserr: I32 val"},{"location":"ponyzip-Ziperror/#var-pstr-pointeru8-val-ref","text":"[Source]","title":"var pstr: Pointer[U8 val] ref"},{"location":"ponyzip-Zipfile/","text":"Zipfile \u00b6 [Source] struct ref Zipfile Constructors \u00b6 create \u00b6 [Source] new iso create() : Zipfile iso^ Returns \u00b6 Zipfile iso^","title":"struct Zipfile"},{"location":"ponyzip-Zipfile/#zipfile","text":"[Source] struct ref Zipfile","title":"Zipfile"},{"location":"ponyzip-Zipfile/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-Zipfile/#create","text":"[Source] new iso create() : Zipfile iso^","title":"create"},{"location":"ponyzip-Zipfile/#returns","text":"Zipfile iso^","title":"Returns"},{"location":"ponyzip-Zipfileattributes/","text":"Zipfileattributes \u00b6 [Source] struct ref Zipfileattributes Constructors \u00b6 create \u00b6 [Source] new iso create() : Zipfileattributes iso^ Returns \u00b6 Zipfileattributes iso^ Public fields \u00b6 var pvalid: U64 val \u00b6 [Source] var pversion: U8 val \u00b6 [Source] var phostsystem: U8 val \u00b6 [Source] var pascii: U8 val \u00b6 [Source] var pversionneeded: U8 val \u00b6 [Source] var pexternalfileattributes: U32 val \u00b6 [Source] var pgeneralpurposebitflags: U16 val \u00b6 [Source] var pgeneralpurposebitmask: U16 val \u00b6 [Source]","title":"struct Zipfileattributes"},{"location":"ponyzip-Zipfileattributes/#zipfileattributes","text":"[Source] struct ref Zipfileattributes","title":"Zipfileattributes"},{"location":"ponyzip-Zipfileattributes/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-Zipfileattributes/#create","text":"[Source] new iso create() : Zipfileattributes iso^","title":"create"},{"location":"ponyzip-Zipfileattributes/#returns","text":"Zipfileattributes iso^","title":"Returns"},{"location":"ponyzip-Zipfileattributes/#public-fields","text":"","title":"Public fields"},{"location":"ponyzip-Zipfileattributes/#var-pvalid-u64-val","text":"[Source]","title":"var pvalid: U64 val"},{"location":"ponyzip-Zipfileattributes/#var-pversion-u8-val","text":"[Source]","title":"var pversion: U8 val"},{"location":"ponyzip-Zipfileattributes/#var-phostsystem-u8-val","text":"[Source]","title":"var phostsystem: U8 val"},{"location":"ponyzip-Zipfileattributes/#var-pascii-u8-val","text":"[Source]","title":"var pascii: U8 val"},{"location":"ponyzip-Zipfileattributes/#var-pversionneeded-u8-val","text":"[Source]","title":"var pversionneeded: U8 val"},{"location":"ponyzip-Zipfileattributes/#var-pexternalfileattributes-u32-val","text":"[Source]","title":"var pexternalfileattributes: U32 val"},{"location":"ponyzip-Zipfileattributes/#var-pgeneralpurposebitflags-u16-val","text":"[Source]","title":"var pgeneralpurposebitflags: U16 val"},{"location":"ponyzip-Zipfileattributes/#var-pgeneralpurposebitmask-u16-val","text":"[Source]","title":"var pgeneralpurposebitmask: U16 val"},{"location":"ponyzip-Zipsource/","text":"Zipsource \u00b6 [Source] struct ref Zipsource Constructors \u00b6 create \u00b6 [Source] new iso create() : Zipsource iso^ Returns \u00b6 Zipsource iso^","title":"struct Zipsource"},{"location":"ponyzip-Zipsource/#zipsource","text":"[Source] struct ref Zipsource","title":"Zipsource"},{"location":"ponyzip-Zipsource/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-Zipsource/#create","text":"[Source] new iso create() : Zipsource iso^","title":"create"},{"location":"ponyzip-Zipsource/#returns","text":"Zipsource iso^","title":"Returns"},{"location":"ponyzip-Zipsourceargsseek/","text":"Zipsourceargsseek \u00b6 [Source] struct ref Zipsourceargsseek Constructors \u00b6 create \u00b6 [Source] new iso create() : Zipsourceargsseek iso^ Returns \u00b6 Zipsourceargsseek iso^ Public fields \u00b6 var poffset: I64 val \u00b6 [Source] var pwhence: I32 val \u00b6 [Source]","title":"struct Zipsourceargsseek"},{"location":"ponyzip-Zipsourceargsseek/#zipsourceargsseek","text":"[Source] struct ref Zipsourceargsseek","title":"Zipsourceargsseek"},{"location":"ponyzip-Zipsourceargsseek/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-Zipsourceargsseek/#create","text":"[Source] new iso create() : Zipsourceargsseek iso^","title":"create"},{"location":"ponyzip-Zipsourceargsseek/#returns","text":"Zipsourceargsseek iso^","title":"Returns"},{"location":"ponyzip-Zipsourceargsseek/#public-fields","text":"","title":"Public fields"},{"location":"ponyzip-Zipsourceargsseek/#var-poffset-i64-val","text":"[Source]","title":"var poffset: I64 val"},{"location":"ponyzip-Zipsourceargsseek/#var-pwhence-i32-val","text":"[Source]","title":"var pwhence: I32 val"},{"location":"ponyzip-Zipstat/","text":"Zipstat \u00b6 [Source] struct ref Zipstat Constructors \u00b6 create \u00b6 [Source] new iso create() : Zipstat iso^ Returns \u00b6 Zipstat iso^ Public fields \u00b6 var pvalid: U64 val \u00b6 [Source] var pname: Pointer [ U8 val] ref \u00b6 [Source] var pindex: U64 val \u00b6 [Source] var psize: U64 val \u00b6 [Source] var pcompsize: U64 val \u00b6 [Source] var pmtime: I64 val \u00b6 [Source] var pcrc: U32 val \u00b6 [Source] var pcompmethod: U16 val \u00b6 [Source] var pencryptionmethod: U16 val \u00b6 [Source] var pflags: U32 val \u00b6 [Source] Public Functions \u00b6 name \u00b6 [Source] fun ref name() : String iso^ Returns \u00b6 String iso^ index \u00b6 [Source] fun box index() : USize val Returns \u00b6 USize val size \u00b6 [Source] fun box size() : USize val Returns \u00b6 USize val compsize \u00b6 [Source] fun box compsize() : USize val Returns \u00b6 USize val mtime \u00b6 [Source] fun box mtime() : PosixDate ref Returns \u00b6 PosixDate ref crc \u00b6 [Source] fun box crc() : U32 val Returns \u00b6 U32 val","title":"struct Zipstat"},{"location":"ponyzip-Zipstat/#zipstat","text":"[Source] struct ref Zipstat","title":"Zipstat"},{"location":"ponyzip-Zipstat/#constructors","text":"","title":"Constructors"},{"location":"ponyzip-Zipstat/#create","text":"[Source] new iso create() : Zipstat iso^","title":"create"},{"location":"ponyzip-Zipstat/#returns","text":"Zipstat iso^","title":"Returns"},{"location":"ponyzip-Zipstat/#public-fields","text":"","title":"Public fields"},{"location":"ponyzip-Zipstat/#var-pvalid-u64-val","text":"[Source]","title":"var pvalid: U64 val"},{"location":"ponyzip-Zipstat/#var-pname-pointeru8-val-ref","text":"[Source]","title":"var pname: Pointer[U8 val] ref"},{"location":"ponyzip-Zipstat/#var-pindex-u64-val","text":"[Source]","title":"var pindex: U64 val"},{"location":"ponyzip-Zipstat/#var-psize-u64-val","text":"[Source]","title":"var psize: U64 val"},{"location":"ponyzip-Zipstat/#var-pcompsize-u64-val","text":"[Source]","title":"var pcompsize: U64 val"},{"location":"ponyzip-Zipstat/#var-pmtime-i64-val","text":"[Source]","title":"var pmtime: I64 val"},{"location":"ponyzip-Zipstat/#var-pcrc-u32-val","text":"[Source]","title":"var pcrc: U32 val"},{"location":"ponyzip-Zipstat/#var-pcompmethod-u16-val","text":"[Source]","title":"var pcompmethod: U16 val"},{"location":"ponyzip-Zipstat/#var-pencryptionmethod-u16-val","text":"[Source]","title":"var pencryptionmethod: U16 val"},{"location":"ponyzip-Zipstat/#var-pflags-u32-val","text":"[Source]","title":"var pflags: U32 val"},{"location":"ponyzip-Zipstat/#public-functions","text":"","title":"Public Functions"},{"location":"ponyzip-Zipstat/#name","text":"[Source] fun ref name() : String iso^","title":"name"},{"location":"ponyzip-Zipstat/#returns_1","text":"String iso^","title":"Returns"},{"location":"ponyzip-Zipstat/#index","text":"[Source] fun box index() : USize val","title":"index"},{"location":"ponyzip-Zipstat/#returns_2","text":"USize val","title":"Returns"},{"location":"ponyzip-Zipstat/#size","text":"[Source] fun box size() : USize val","title":"size"},{"location":"ponyzip-Zipstat/#returns_3","text":"USize val","title":"Returns"},{"location":"ponyzip-Zipstat/#compsize","text":"[Source] fun box compsize() : USize val","title":"compsize"},{"location":"ponyzip-Zipstat/#returns_4","text":"USize val","title":"Returns"},{"location":"ponyzip-Zipstat/#mtime","text":"[Source] fun box mtime() : PosixDate ref","title":"mtime"},{"location":"ponyzip-Zipstat/#returns_5","text":"PosixDate ref","title":"Returns"},{"location":"ponyzip-Zipstat/#crc","text":"[Source] fun box crc() : U32 val","title":"crc"},{"location":"ponyzip-Zipstat/#returns_6","text":"U32 val","title":"Returns"},{"location":"src/ponyzip/crc32/","text":"primitive CRC32 fun calc(data: Array[U8] val): U32 => \"\"\" Returns the CRC32 of a blob of data \"\"\" @crc32(0, data.cpointer(), data.size().i32())","title":"Crc32"},{"location":"src/ponyzip/defines/","text":"use \"collections\" /* Manually written alas */ // Flags for zip_open type ZipFlags is Flags[(ZipCreate|ZipExcl|ZipCheckcons|ZipTruncate|ZipRDOnly), U32] primitive ZipCreate fun value(): U32 => 1 primitive ZipExcl fun value(): U32 => 2 primitive ZipCheckcons fun value(): U32 => 4 primitive ZipTruncate fun value(): U32 => 8 primitive ZipRDOnly fun value(): U32 => 16 /* flags for zip_name_locate, zip_fopen, zip_stat, ... */ type ZipFLFlags is Flags[(ZipFLNocase|ZipFLNodir|ZipFLCompressed|ZipFLUnchanged|ZipFLRecompress|ZipFLEncrypted|ZipFLEncGuess|ZipFLEncRaw|ZipFLEncStrict|ZipFLLocal|ZipFLCentral|ZipFLEncUtf8|ZipFLEncCp437|ZipFLOverwrite), U32] primitive ZipFLNocase fun value(): U32 => 1 /* ignore case on name lookup */ primitive ZipFLNodir fun value(): U32 => 2 /* ignore directory component */ primitive ZipFLCompressed fun value(): U32 => 4 /* read compressed data */ primitive ZipFLUnchanged fun value(): U32 => 8 /* use original data, ignoring changes */ primitive ZipFLRecompress fun value(): U32 => 16 /* force recompression of data */ primitive ZipFLEncrypted fun value(): U32 => 32 /* read encrypted data (implies ZipFLCOMPRESSED) */ primitive ZipFLEncGuess fun value(): U32 => 0 /* guess string encoding (is default) */ primitive ZipFLEncRaw fun value(): U32 => 64 /* get unmodified string */ primitive ZipFLEncStrict fun value(): U32 => 128 /* follow specification strictly */ primitive ZipFLLocal fun value(): U32 => 256 /* in local header */ primitive ZipFLCentral fun value(): U32 => 512 /* in central directory */ /* 1024u reserved for internal use */ primitive ZipFLEncUtf8 fun value(): U32 => 2048 /* string is UTF-8 encoded */ primitive ZipFLEncCp437 fun value(): U32 => 4096 /* string is CP437 encoded */ primitive ZipFLOverwrite fun value(): U32 => 8192 /* zip_file_add: if file with name exists, overwrite (replace) it */ /* archive global flags flags */ type ZipAflFlags is Flags[(ZipAFLRDOnly), U32] primitive ZipAFLRDOnly fun value(): U32 => 2 /* libzip error codes */ type ZipER is (ZipEROK|ZipERMultidisk|ZipERRename|ZipERClose|ZipERSeek|ZipERRead|ZipERWrite|ZipERCRC|ZipERZipclosed|ZipERNoent|ZipERExists|ZipEROpen|ZipERTmpopen|ZipERZlib|ZipERMemory|ZipERChanged|ZipERCompnotsupp|ZipEREof|ZipERInval|ZipERNozip|ZipERInternal|ZipERIncons|ZipERRemove|ZipERDeleted|ZipEREncrnotsupp|ZipERRDOnly|ZipERNopasswd|ZipERWrongpasswd|ZipEROpnotsupp|ZipERInuse|ZipERTell|ZipERCompresseddata|ZipERCancelled) primitive ZipERR fun decode(value: I32): ZipER => match value | let x: I32 if (x == 0) => ZipEROK | let x: I32 if (x == 1) => ZipERMultidisk | let x: I32 if (x == 2) => ZipERRename | let x: I32 if (x == 3) => ZipERClose | let x: I32 if (x == 4) => ZipERSeek | let x: I32 if (x == 5) => ZipERRead | let x: I32 if (x == 6) => ZipERWrite | let x: I32 if (x == 7) => ZipERCRC | let x: I32 if (x == 8) => ZipERZipclosed | let x: I32 if (x == 9) => ZipERNoent | let x: I32 if (x == 10) => ZipERExists | let x: I32 if (x == 11) => ZipEROpen | let x: I32 if (x == 12) => ZipERTmpopen | let x: I32 if (x == 13) => ZipERZlib | let x: I32 if (x == 14) => ZipERMemory | let x: I32 if (x == 15) => ZipERChanged | let x: I32 if (x == 16) => ZipERCompnotsupp | let x: I32 if (x == 17) => ZipEREof | let x: I32 if (x == 18) => ZipERInval | let x: I32 if (x == 19) => ZipERNozip | let x: I32 if (x == 20) => ZipERInternal | let x: I32 if (x == 21) => ZipERIncons | let x: I32 if (x == 22) => ZipERRemove | let x: I32 if (x == 23) => ZipERDeleted | let x: I32 if (x == 24) => ZipEREncrnotsupp | let x: I32 if (x == 25) => ZipERRDOnly | let x: I32 if (x == 26) => ZipERNopasswd | let x: I32 if (x == 27) => ZipERWrongpasswd | let x: I32 if (x == 28) => ZipEROpnotsupp | let x: I32 if (x == 29) => ZipERInuse | let x: I32 if (x == 30) => ZipERTell | let x: I32 if (x == 31) => ZipERCompresseddata | let x: I32 if (x == 32) => ZipERCancelled else ZipEROK end primitive ZipEROK fun value(): I32 => 0 /* N No error */ primitive ZipERMultidisk fun value(): I32 => 1 /* N Multi-disk zip archives not supported */ primitive ZipERRename fun value(): I32 => 2 /* S Renaming temporary file failed */ primitive ZipERClose fun value(): I32 => 3 /* S Closing zip archive failed */ primitive ZipERSeek fun value(): I32 => 4 /* S Seek error */ primitive ZipERRead fun value(): I32 => 5 /* S Read error */ primitive ZipERWrite fun value(): I32 => 6 /* S Write error */ primitive ZipERCRC fun value(): I32 => 7 /* N CRC error */ primitive ZipERZipclosed fun value(): I32 => 8 /* N Containing zip archive was closed */ primitive ZipERNoent fun value(): I32 => 9 /* N No such file */ primitive ZipERExists fun value(): I32 => 10 /* N File already exists */ primitive ZipEROpen fun value(): I32 => 11 /* S Can't open file */ primitive ZipERTmpopen fun value(): I32 => 12 /* S Failure to create temporary file */ primitive ZipERZlib fun value(): I32 => 13 /* Z Zlib error */ primitive ZipERMemory fun value(): I32 => 14 /* N Malloc failure */ primitive ZipERChanged fun value(): I32 => 15 /* N Entry has been changed */ primitive ZipERCompnotsupp fun value(): I32 => 16 /* N Compression method not supported */ primitive ZipEREof fun value(): I32 => 17 /* N Premature end of file */ primitive ZipERInval fun value(): I32 => 18 /* N Invalid argument */ primitive ZipERNozip fun value(): I32 => 19 /* N Not a zip archive */ primitive ZipERInternal fun value(): I32 => 20 /* N Internal error */ primitive ZipERIncons fun value(): I32 => 21 /* N Zip archive inconsistent */ primitive ZipERRemove fun value(): I32 => 22 /* S Can't remove file */ primitive ZipERDeleted fun value(): I32 => 23 /* N Entry has been deleted */ primitive ZipEREncrnotsupp fun value(): I32 => 24 /* N Encryption method not supported */ primitive ZipERRDOnly fun value(): I32 => 25 /* N Read-only archive */ primitive ZipERNopasswd fun value(): I32 => 26 /* N No password provided */ primitive ZipERWrongpasswd fun value(): I32 => 27 /* N Wrong password provided */ primitive ZipEROpnotsupp fun value(): I32 => 28 /* N Operation not supported */ primitive ZipERInuse fun value(): I32 => 29 /* N Resource still in use */ primitive ZipERTell fun value(): I32 => 30 /* S Tell error */ primitive ZipERCompresseddata fun value(): I32 => 31 /* N Compressed data invalid */ primitive ZipERCancelled fun value(): I32 => 32 /* N Operation cancelled */ /* type of system error value */ primitive ZipETNone fun value(): I32 => 0 /* sys_err unused */ primitive ZipETSys fun value(): I32 => 1 /* sys_err is errno */ primitive ZipETZlib fun value(): I32 => 2 /* sys_err is zlib error code */ /* compression methods */ primitive ZipCMDefault fun value(): I32 => -1 /* better of deflate or store */ primitive ZipCMStore fun value(): I32 => 0 /* stored (uncompressed) */ primitive ZipCMShrink fun value(): I32 => 1 /* shrunk */ primitive ZipCMReduce1 fun value(): I32 => 2 /* reduced with factor 1 */ primitive ZipCMReduce2 fun value(): I32 => 3 /* reduced with factor 2 */ primitive ZipCMReduce3 fun value(): I32 => 4 /* reduced with factor 3 */ primitive ZipCMReduce4 fun value(): I32 => 5 /* reduced with factor 4 */ primitive ZipCMImplode fun value(): I32 => 6 /* imploded */ /* 7 - Reserved for Tokenizing compression algorithm */ primitive ZipCMDeflate fun value(): I32 => 8 /* deflated */ primitive ZipCMDeflate64 fun value(): I32 => 9 /* deflate64 */ primitive ZipCMPkwareimplode fun value(): I32 => 10 /* PKWARE imploding */ /* 11 - Reserved by PKWARE */ primitive ZipCMBzip2 fun value(): I32 => 12 /* compressed using BZIP2 algorithm */ /* 13 - Reserved by PKWARE */ primitive ZipCMLzma fun value(): I32 => 14 /* LZMA (EFS) */ /* 15-17 - Reserved by PKWARE */ primitive ZipCMTerse fun value(): I32 => 18 /* compressed using IBM TERSE (new) */ primitive ZipCMLz77 fun value(): I32 => 19 /* IBM LZ77 z Architecture (PFS) */ primitive ZipCMLzma2 fun value(): I32 => 33 primitive ZipCMxz fun value(): I32 => 95 /* XZ compressed data */ primitive ZipCMJpeg fun value(): I32 => 96 /* Compressed Jpeg data */ primitive ZipCMWavpack fun value(): I32 => 97 /* WavPack compressed data */ primitive ZipCMPpmd fun value(): I32 => 98 /* PPMd version I, Rev 1 */ /* encryption methods */ type ZipEMType is (ZipEMNone|ZipEMTradpkware|ZipEMDes|ZipEMRc2old|ZipEM3des168|ZipEM3des112|ZipEMPkzipaes128|ZipEMPkzipaes192|ZipEMPkzipaes256|ZipEMRc2|ZipEMRc4|ZipEMAes128|ZipEMAes192|ZipEMAes256|ZipEMUnknown) primitive ZipEMNone fun value(): U16 => 0 /* not encrypted */ primitive ZipEMTradpkware fun value(): U16 => 1 /* traditional PKWARE encryption */ primitive ZipEMDes fun value(): U16 => 0x6601 /* strong encryption: DES */ primitive ZipEMRc2old fun value(): U16 => 0X6602 /* strong encryption: RC2, version < 5.2 */ primitive ZipEM3des168 fun value(): U16 => 0x6603 primitive ZipEM3des112 fun value(): U16 => 0X6609 primitive ZipEMPkzipaes128 fun value(): U16 => 0X660e primitive ZipEMPkzipaes192 fun value(): U16 => 0x660f primitive ZipEMPkzipaes256 fun value(): U16 => 0x6610 primitive ZipEMRc2 fun value(): U16 => 0x6702 /* strong encryption: RC2, version >= 5.2 */ primitive ZipEMRc4 fun value(): U16 => 0x6801 primitive ZipEMAes128 fun value(): U16 => 0X0101 /* Winzip AES encryption */ primitive ZipEMAes192 fun value(): U16 => 0x0102 primitive ZipEMAes256 fun value(): U16 => 0x0103 primitive ZipEMUnknown fun value(): U16 => 0xffff /* unknown algorithm */ /* System Type */ primitive ZipOPSYSDos fun value(): U8 => 0x00 primitive ZipOPSYSAmiga fun value(): U8 => 0x01 primitive ZipOPSYSOpenvms fun value(): U8 => 0x02 primitive ZipOPSYSUnix fun value(): U8 => 0x03 primitive ZipOPSYSVmcms fun value(): U8 => 0x04 primitive ZipOPSYSAtarist fun value(): U8 => 0x05 primitive ZipOPSYSOs2 fun value(): U8 => 0x06 primitive ZipOPSYSMacintosh fun value(): U8 => 0x07 primitive ZipOPSYSZsystem fun value(): U8 => 0X08 primitive ZipOPSYSCpm fun value(): U8 => 0x09 primitive ZipOPSYSWindowsntfs fun value(): U8 => 0x0a primitive ZipOPSYSMvs fun value(): U8 => 0x0b primitive ZipOPSYSVse fun value(): U8 => 0x0c primitive ZipOPSYSAcornrisc fun value(): U8 => 0X0d primitive ZipOPSYSVfat fun value(): U8 => 0x0e primitive ZipOPSYSAlternatemvs fun value(): U8 => 0x0f primitive ZipOPSYSBeos fun value(): U8 => 0x10 primitive ZipOPSYSTandem fun value(): U8 => 0X11 primitive ZipOPSYSOs400 fun value(): U8 => 0x12 primitive ZipOPSYSOsx fun value(): U8 => 0x13 type ZipOPSYSDefault is ZipOPSYSUnix type ZipSOURCESupportsReadable is (ZipSOURCEOpen|ZipSOURCERead|ZipSOURCEClose|ZipSOURCEStat|ZipSOURCEError|ZipSOURCEFree) type ZipSOURCESupportsReadableFlags is Flags[(ZipSOURCESupportsReadable), U32] primitive ZipSOURCEOpen fun value(): U32 => 1 << 0 /* prepare for reading */ primitive ZipSOURCERead fun value(): U32 => 1 << 1 /* read data */ primitive ZipSOURCEClose fun value(): U32 => 1 << 2 /* reading is done */ primitive ZipSOURCEStat fun value(): U32 => 1 << 3 /* get meta information */ primitive ZipSOURCEError fun value(): U32 =>1 << 4 /* get error information */ primitive ZipSOURCEFree fun value(): U32 => 1 << 5 /* cleanup and free resources */ type ZipSOURCESupportsSeekable is (ZipSOURCESupportsReadable|ZipSOURCESeek|ZipSOURCETell|ZipSOURCESupports) type ZipSOURCESupportsSeekableFlags is Flags[(ZipSOURCESupportsSeekable|ZipSOURCESupportsReadable), U32] primitive ZipSOURCESeek fun value(): U32 => 1 << 6 /* set position for reading */ primitive ZipSOURCETell fun value(): U32 => 1 << 7 /* get read position */ primitive ZipSOURCESupports fun value(): U32 => 1 << 14 /* check whether source supports command */ type ZipSOURCESupportsWritable is (ZipSOURCESupportsSeekable|ZipSOURCEBeginWrite|ZipSOURCECommitWrite|ZipSOURCERollbackWrite|ZipSOURCEWrite|ZipSOURCESeekWrite|ZipSOURCETellWrite|ZipSOURCERemove) type ZipSOURCESupportsWritableFlags is Flags[(ZipSOURCESupportsWritable|ZipSOURCESupportsSeekable), U32] primitive ZipSOURCEBeginWrite fun value(): U32 => 1 << 8 /* prepare for writing */ primitive ZipSOURCECommitWrite fun value(): U32 => 1 << 9 /* writing is done */ primitive ZipSOURCERollbackWrite fun value(): U32 => 1 << 10 /* discard written changes */ primitive ZipSOURCEWrite fun value(): U32 => 1 << 11 /* write data */ primitive ZipSOURCESeekWrite fun value(): U32 => 1 << 12 /* set position for writing */ primitive ZipSOURCETellWrite fun value(): U32 => 1 << 13 /* get write position */ primitive ZipSOURCERemove fun value(): U32 => 1 << 15 /* remove file */ // FIXME - These should be defined in the flags somehow. // What am I missing? primitive ZipSOURCEReserved1 fun value(): U32 => 1 << 16 /* previously used internally */ primitive ZipSOURCEBeginWriteCloning fun value(): U32 => 1 << 17 /* like ZIP_SOURCE_BEGIN_WRITE, but keep part of original file */ primitive ZipSOURCEAcceptEmpty fun value(): U32 => 1 << 18 /* whether empty files are valid archives */ primitive ZipSOURCEGetFileAttributes fun value(): U32 => 1 << 19 /* get additional file attributes */ type ZipStatFlags is Flags[(ZipSTATName|ZipSTATIndex|ZipSTATSize|ZipSTATCompSize|ZipSTATMtime|ZipSTATCrc|ZipSTATCompMethod|ZipSTATEncryptionMethod|ZipSTATFlag), U16] primitive ZipSTATName fun value(): U16 => 0x0001 primitive ZipSTATIndex fun value(): U16 => 0x0002 primitive ZipSTATSize fun value(): U16 => 0x0004 primitive ZipSTATCompSize fun value(): U16 => 0x0008 primitive ZipSTATMtime fun value(): U16 => 0x0010 primitive ZipSTATCrc fun value(): U16 => 0x0020 primitive ZipSTATCompMethod fun value(): U16 => 0x0040 primitive ZipSTATEncryptionMethod fun value(): U16 => 0x0080 primitive ZipSTATFlag fun value(): U16 => 0x0100 type ZipFileAttributesFlags is Flags[(ZipFileAttributesHostSystem|ZipFileAttributesAscii|ZipFileAttributesVersionNeeded|ZipFileAttributesExternalFileAttributes|ZipFileAttributesGeneralPurposeBitFlags), U16] primitive ZipFileAttributesHostSystem fun value(): U16 => 0x0001 primitive ZipFileAttributesAscii fun value(): U16 => 0x0002 primitive ZipFileAttributesVersionNeeded fun value(): U16 => 0x0004 primitive ZipFileAttributesExternalFileAttributes fun value(): U16 => 0x0008 primitive ZipFileAttributesGeneralPurposeBitFlags fun value(): U16 => 0x0010","title":"Defines"},{"location":"src/ponyzip/functions/","text":"use \"lib:zip\" use \"lib:z\" use @crc32[U32](crc32: U32, data: Pointer[U8] tag, length: I32) primitive ABLibZIP /* Open Archive */ fun pzip_open(path: String, flags: U32, errorp: Pointer[I32] tag): NullablePointer[Zip] => \"\"\" #### DESCRIPTION The pzip_open() function opens the zip archive specified by path and returns a pointer to a struct zip, used to manipulate the archive. The flags are specified by or'ing the following values, or 0 for none of them. * ZipCheckcons Perform additional stricter consistency checks on the archive, and error if they fail. * ZipCreate Create the archive if it does not exist. * ZipExcl Error if archive already exists. * ZipTruncate If archive exists, ignore its current contents. In other words, handle it the same way as an empty archive. * ZipRDOnly Open archive in read-only mode. If an error occurs and errorp is non-NULL, it will be set to the corresponding error code. The pzip_open_from_source() function opens a zip archive encapsulated by the zip_source zs using the provided flags. In case of error, the ZipError ze is filled in. #### RETURN VALUES Upon successful completion pzip_open() and pzip_open_from_source() return a struct zip pointer. Otherwise, NULL is returned and pzip_open() sets *errorp to indicate the error, while zip_open_from(source) sets ze to indicate the error. #### ERRORS The archive specified by path is opened unless: * ZipERExists The file specified by path exists and ZIP_EXCL is set. * ZipERIncons Inconsistencies were found in the file specified by path. This error is often caused by specifying ZIP_CHECKCONS but can also happen without it. * ZipERInval The path argument is NULL. * ZipERMemory Required memory could not be allocated. * ZipERNoent The file specified by path does not exist and ZIP_CREATE is not set. * ZipERNozip The file specified by path is not a zip archive. * ZipEROpen The file specified by path could not be opened. * ZipERRead A read error occurred; see errno for details. * ZipERSeek The file specified by path does not allow seeks. \"\"\" @zip_open(path.cstring(), flags, errorp) fun pzip_fdopen(filedescriptor: I32, flags: I32, errorp: Pointer[I32] tag): NullablePointer[Zip] => @zip_fdopen(filedescriptor, flags, errorp) fun pzip_open_from_source(zipsource: NullablePointer[Zipsource] tag, flags: U32, errorp: Pointer[I32] tag): NullablePointer[Zip] => @zip_open_from_source(zipsource, flags, errorp) /* Find Files */ fun pzip_name_locate(archive: NullablePointer[Zip] tag, filename: String, flags: U32): I64 => @zip_name_locate(archive, filename.cstring(), flags) /* Read Files */ fun pzip_stat(archive: NullablePointer[Zip] tag, filename: String, flags: U32, zipstat: NullablePointer[Zipstat] tag): I32 => @zip_stat(archive, filename.cstring(), flags, zipstat) fun pzip_stat_index(archive: NullablePointer[Zip] tag, index: U64, flags: U32, zipstat: NullablePointer[Zipstat] tag): I32 => @zip_stat_index(archive, index, flags, zipstat) fun pzip_stat_init(zipstat: NullablePointer[Zipstat] tag): None => @zip_stat_init(zipstat) fun pzip_fopen(archive: NullablePointer[Zip] tag, filename: String, flags: U32): NullablePointer[Zipfile] => @zip_fopen(archive, filename.cstring(), flags) fun pzip_fopen_encrypted(archive: NullablePointer[Zip] tag, filename: String, flags: U32, password: String): NullablePointer[Zipfile] => @zip_fopen_encrypted(archive, filename.cstring(), flags, password.cstring()) fun pzip_fopen_index(archive: NullablePointer[Zip] tag, index: U64, flags: U32): NullablePointer[Zipfile] => @zip_fopen_index(archive, index, flags) fun pzip_fopen_index_encrypted(archive: NullablePointer[Zip] tag, index: U64, flags: U32, password: String): NullablePointer[Zipfile] => @zip_fopen_index_encrypted(archive, index, flags, password.cstring()) fun pzip_fread(file: NullablePointer[Zipfile] tag, buffer: Pointer[U8] tag, length: U64): I64 => @zip_fread(file, buffer, length) fun pzip_fseek(file: NullablePointer[Zipfile] tag, offset: I64, whence: I32): I8 => @zip_fseek(file, offset, whence) fun pzip_ftell(file: NullablePointer[Zipfile] tag): I64 => @zip_ftell(file) fun pzip_fclose(file: NullablePointer[Zipfile] tag): I32 => @zip_fclose(file) fun pzip_file_extra_fields_count(archive: NullablePointer[Zip] tag, index: U64, flags: U32): I16 => @zip_file_extra_fields_count(archive, index, flags) fun pzip_file_extra_fields_count_by_id(archive: NullablePointer[Zip] tag, index: U64, extra_field_id: U16, flags: U32): I16 => @zip_file_extra_fields_count_by_id(archive, index, extra_field_id, flags) fun pzip_file_extra_field_get(archive: NullablePointer[Zip] tag, index: U64, extra_field_index: U16, idp: Pointer[U16] tag, lenp: Pointer[U16] tag, flags: U32): String => var pcstring: Pointer[U8] = @zip_file_extra_field_get(archive, index, extra_field_index, idp, lenp, flags) let p: String iso = String.from_cstring(pcstring).clone() consume p fun pzip_file_extra_field_get_by_id(archive: NullablePointer[Zip] tag, index: U64, extra_field_id: U16, extra_field_index: U16, lenp: Pointer[U16] tag, flags: U32): String => var pcstring: Pointer[U8] = @zip_file_extra_field_get_by_id(archive, index, extra_field_id, extra_field_index, lenp, flags) let p: String iso = String.from_cstring(pcstring).clone() consume p fun pzip_file_get_comment(archive: NullablePointer[Zip] tag, index: U64, lenp: Pointer[U32] tag, flags: U32): String => var pcstring: Pointer[U8] = @zip_file_get_comment(archive, index, lenp, flags) let p: String iso = String.from_cstring(pcstring).clone() consume p fun pzip_file_get_external_attributes(archive: NullablePointer[Zip] tag, index: U64, flags: U32, opsys: String, attributes: Pointer[U32] tag): I32 => @zip_file_get_external_attributes(archive, index, flags, opsys.cstring(), attributes) // String -> Aray[U8](1) fun pzip_get_archive_comment(archive: NullablePointer[Zip] tag, lenp: Pointer[I32] tag, flags: U32): String => var pcstring: Pointer[U8] = @zip_get_archive_comment(archive, lenp, flags) let p: String iso = String.from_cstring(pcstring).clone() consume p fun pzip_get_archive_flag(archive: NullablePointer[Zip] tag, flag: U32, flags: U32): I32 => @zip_get_archive_flag(archive, flag, flags) fun pzip_get_name(archive: NullablePointer[Zip] tag, index: U64, flags: U32): String => var pcstring: Pointer[U8] = @zip_get_name(archive, index, flags) let p: String iso = String.from_cstring(pcstring).clone() consume p fun pzip_get_num_entries(archive: NullablePointer[Zip] tag, flags: U32): I64 => @zip_get_num_entries(archive, flags) fun pzip_source_get_file_attributes(archive: NullablePointer[Zipsource] tag, attributes: NullablePointer[Zipfileattributes] tag): I32 => @zip_source_get_file_attributes(archive, attributes) /* Close Archive */ fun pzip_close(archive: NullablePointer[Zip] tag): I32 => @zip_close(archive) fun pzip_discard(archive: NullablePointer[Zip] tag): None => @zip_discard(archive) /* Creating / Modifying Archives */ fun pzip_delete(archive: NullablePointer[Zip] tag, index: U64): I32 => @zip_delete(archive, index) fun pzip_dir_add(archive: NullablePointer[Zip] tag, filename: String, flags: U32): I64 => @zip_dir_add(archive, filename.cstring(), flags) fun pzip_file_add(archive: NullablePointer[Zip] tag, filename: String, zipsource: NullablePointer[Zipsource] tag, flags: U32): I64 => @zip_file_add(archive, filename.cstring(), zipsource, flags) fun pzip_file_replace(archive: NullablePointer[Zip] tag, index: U64, zipsource: NullablePointer[Zipsource] tag, flags: U32): I32 => @zip_file_replace(archive, index, zipsource, flags) fun pzip_file_attributes_init(attributes: NullablePointer[Zipfileattributes] tag): None => @zip_file_attributes_init(attributes) fun pzip_file_extra_field_delete(archive: NullablePointer[Zip] tag, index: U64, extra_field_index: U16, flags: U32): I32 => @zip_file_extra_field_delete(archive, index, extra_field_index, flags) fun pzip_file_extra_field_delete_by_id(archive: NullablePointer[Zip] tag, index: U64, extra_field_id: U16, extra_field_index: U16, flags: U32): I32 => @zip_file_extra_field_delete_by_id(archive, index, extra_field_id, extra_field_index, flags) fun pzip_file_extra_field_set(archive: NullablePointer[Zip] tag, index: U64, extra_field_id: U16, extra_field_index: U16, extra_field_data: String, len: U16, flags: U32): I32 => @zip_file_extra_field_set(archive, index, extra_field_id, extra_field_index, extra_field_data.cstring(), len, flags) // FIXME - not a string fun pzip_file_rename(archive: NullablePointer[Zip] tag, index: U64, filename: String, flags: U32): I32 => @zip_file_rename(archive, index, filename.cstring(), flags) fun pzip_file_set_comment(archive: NullablePointer[Zip] tag, index: U64, comment: String, length: U16, flags: U32): I32 => @zip_file_set_comment(archive, index, comment.cstring(), length, flags) fun pzip_file_set_dostime(archive: NullablePointer[Zip] tag, index: U64, dostime: U16, dosdate: U16, flags: U32): I32 => @zip_file_set_dostime(archive, index, dostime, dosdate, flags) fun pzip_file_set_mtime(archive: NullablePointer[Zip] tag, index: U64, mtime: I64, flags: U32): I32 => @zip_file_set_mtime(archive, index, mtime, flags) fun pzip_file_set_encryption(archive: NullablePointer[Zip] tag, index: U64, method: U16, password: String): I32 => @zip_file_set_encryption(archive, index, method, password.cstring()) fun pzip_file_set_external_attributes(archive: NullablePointer[Zip] tag, index: U64, flags: U32, opsys: U8, attributes: U32): I32 => @zip_file_set_external_attributes(archive, index, flags, opsys, attributes) fun pzip_set_archive_comment(archive: NullablePointer[Zip] tag, comment: String, length: U16): I32 => @zip_set_archive_comment(archive, comment.cstring(), length) fun pzip_set_archive_flag(archive: NullablePointer[Zip] tag, flags: U32, value: I32): I32 => @zip_set_archive_flag(archive, flags, value) fun pzip_set_default_password(archive: NullablePointer[Zip] tag, password: String): I32 => @zip_set_default_password(archive, password.cstring()) fun pzip_set_file_compression(archive: NullablePointer[Zip] tag, index: U64, comp: I32, compflags: U32): I32 => @zip_set_file_compression(archive, index, comp, compflags) fun pzip_source_begin_write(source: NullablePointer[Zipsource] tag): I32 => @zip_source_begin_write(source) fun pzip_source_begin_write_cloning(source: NullablePointer[Zipsource] tag, offset: U64): I32 => @zip_source_begin_write_cloning(source, offset) fun pzip_source_buffer(archive: NullablePointer[Zip] tag, data: Pointer[U8] tag, length: U64, free: I32): NullablePointer[Zipsource] => @zip_source_buffer(archive, data, length, free) fun pzip_source_buffer_create(data: Pointer[U8] tag, length: U64, free: I32, errorp: NullablePointer[Ziperror] tag): NullablePointer[Zipsource] => @zip_source_buffer_create(data, length, free, errorp) fun pzip_source_buffer_fragment(archive: NullablePointer[Zip] tag, fragment: NullablePointer[Zipbufferfragment] tag, nfrags: U64, free: I32): NullablePointer[Zipsource] => @zip_source_buffer_fragment(archive, fragment, nfrags, free) fun pzip_source_buffer_fragment_create(fragment: NullablePointer[Zipbufferfragment] tag, nfrags: U64, free: I32, errorp: NullablePointer[Ziperror] tag): NullablePointer[Zipsource] => @zip_source_buffer_fragment_create(fragment, nfrags, free, errorp) fun pzip_source_close(source: NullablePointer[Zipsource] tag): I32 => @zip_source_close(source) fun pzip_source_commit_write(source: NullablePointer[Zipsource] tag): I32 => @zip_source_commit_write(source) fun pzip_source_error(source: NullablePointer[Zipsource] tag): NullablePointer[Ziperror] => @zip_source_error(source) fun pzip_source_file(zip: NullablePointer[Zip] tag, filename: String, start: U64, length: I64): NullablePointer[Zipsource] => @zip_source_file(zip, filename.cstring(), start, length) fun pzip_source_file_create(filename: String, start: U64, length: I64, errorp: NullablePointer[Ziperror] tag): NullablePointer[Zipsource] => @zip_source_file_create(filename.cstring(), start, length, errorp) fun pzip_source_free(source: NullablePointer[Zipsource] tag): None => @zip_source_free(source) fun pzip_source_keep(source: NullablePointer[Zipsource] tag): None => @zip_source_keep(source) fun pzip_source_open(source: NullablePointer[Zipsource] tag): I32 => @zip_source_open(source) fun pzip_source_read(source: NullablePointer[Zipsource] tag, data: Pointer[U8] tag, length: U64): I64 => @zip_source_read(source, data, length) fun pzip_source_rollback_write(source: NullablePointer[Zipsource] tag): None => @zip_source_rollback_write(source) fun pzip_source_seek(source: NullablePointer[Zipsource] tag, offset: I64, whence: I32): I32 => @zip_source_seek(source, offset, whence) fun pzip_source_seek_compute_offset(offset: U64, length: U64, data: Pointer[U8] tag, data_length: U64, errorp: NullablePointer[Ziperror] tag): I64 => @zip_source_seek_compute_offset(offset, length, data, data_length, errorp) fun pzip_source_seek_write(source: NullablePointer[Zipsource] tag, offset: I64, whence: I32): I32 => @zip_source_seek_write(source, offset, whence) fun pzip_source_stat(source: NullablePointer[Zipsource] tag, zipstat: NullablePointer[Zipstat] tag): I32 => @zip_source_stat(source, zipstat) fun pzip_source_tell(source: NullablePointer[Zipsource] tag): I64 => @zip_source_tell(source) fun pzip_source_tell_write(source: NullablePointer[Zipsource] tag): I64 => @zip_source_tell_write(source) fun pzip_source_write(source: NullablePointer[Zipsource] tag, data: Pointer[U8] tag, length: U64): I64 => @zip_source_write(source, data, length) fun pzip_source_zip(archive: NullablePointer[Zip] tag, sourcearchive: NullablePointer[Zip] tag, srcindex: U64, flags: U32, start: U64, length: I64): NullablePointer[Zipsource] => @zip_source_zip(archive, sourcearchive, srcindex, flags, start, length) fun pzip_unchange(archive: NullablePointer[Zip] tag, index: U64): I32 => @zip_unchange(archive, index) fun pzip_unchange_all(archive: NullablePointer[Zip] tag): I32 => @zip_unchange_all(archive) fun pzip_unchange_archive(archive: NullablePointer[Zip] tag): I32 => @zip_unchange_archive(archive) fun pzip_compression_method_supported(pmethod: I32, pcompress: I32): I32 => @zip_compression_method_supported(pmethod, pcompress) fun pzip_encryption_method_supported(pmethod: U16, pencode: I32): I32 => @zip_encryption_method_supported(pmethod, pencode) /* Error Handling */ fun pzip_get_error(archive: NullablePointer[Zip] tag): NullablePointer[Ziperror] => @zip_get_error(archive) fun pzip_error_clear(archive: NullablePointer[Zip] tag): None => @zip_error_clear(archive) fun pzip_error_code_zip(perror: NullablePointer[Ziperror] tag): I32 => @zip_error_code_zip(perror) fun pzip_error_code_system(perror: NullablePointer[Ziperror] tag): I32 => @zip_error_code_system(perror) fun pzip_error_fini(perror: NullablePointer[Ziperror] tag): None => @zip_error_fini(perror) fun pzip_error_init(perror: NullablePointer[Ziperror] tag): None => @zip_error_init(perror) fun pzip_error_init_with_code(perror: NullablePointer[Ziperror] tag, errorno: I32): None => @zip_error_init_with_code(perror, errorno) fun pzip_error_set(errorp: NullablePointer[Ziperror] tag, le: I32, se: I32): None => @zip_error_set(errorp, le, se) fun pzip_error_strerror(errorp: NullablePointer[Ziperror] tag): String => var pcstring: Pointer[U8] = @zip_error_strerror(errorp) let p: String iso = String.from_cstring(pcstring).clone() consume p fun pzip_error_system_type(errorp: NullablePointer[Ziperror] tag): I32 => @zip_error_system_type(errorp) fun pzip_error_to_data(errorp: NullablePointer[Ziperror] tag, data: Pointer[U8] tag, length: U64): I64 => @zip_error_to_data(errorp, data, length) fun pzip_file_error_clear(file: NullablePointer[Zipfile] tag): None => @zip_file_error_clear(file) fun pzip_file_get_error(file: NullablePointer[Zipfile] tag): NullablePointer[Ziperror] => @zip_file_get_error(file) fun pzip_file_strerror(file: NullablePointer[Zipfile] tag): String => var pcstring: Pointer[U8] = @zip_file_strerror(file) let p: String iso = String.from_cstring(pcstring).clone() consume p fun pzip_strerror(archive: NullablePointer[Zip] tag): String => var pcstring: Pointer[U8] = @zip_strerror(archive) let p: String iso = String.from_cstring(pcstring).clone() consume p /* Misc */ fun pzip_libzip_version(): String => var pcstring: Pointer[U8] = @zip_libzip_version() let p: String iso = String.from_cstring(pcstring).clone() consume p fun pzip_source_is_deleted(source: NullablePointer[Zipsource] tag): I32 => @zip_source_is_deleted(source) /* Obsolete Functions */ fun obsolete_pzip_add(pparg0: NullablePointer[Zip] tag, pparg1: String, pparg2: NullablePointer[Zipsource] tag): I64 => @zip_add(pparg0, pparg1.cstring(), pparg2) fun obsolete_pzip_add_dir(pparg0: NullablePointer[Zip] tag, pparg1: String): I64 => @zip_add_dir(pparg0, pparg1.cstring()) fun obsolete_pzip_get_file_comment(pparg0: NullablePointer[Zip] tag, pparg1: U64, pparg2: Pointer[I32] tag, pparg3: I32): String => var pcstring: Pointer[U8] = @zip_get_file_comment(pparg0, pparg1, pparg2, pparg3) let p: String iso = String.from_cstring(pcstring).clone() consume p fun obsolete_pzip_get_num_files(pparg0: NullablePointer[Zip] tag): I32 => @zip_get_num_files(pparg0) fun obsolete_pzip_rename(pparg0: NullablePointer[Zip] tag, pparg1: U64, pparg2: String): I32 => @zip_rename(pparg0, pparg1, pparg2.cstring()) fun obsolete_pzip_replace(pparg0: NullablePointer[Zip] tag, pparg1: U64, pparg2: NullablePointer[Zipsource] tag): I32 => @zip_replace(pparg0, pparg1, pparg2) fun obsolete_pzip_set_file_comment(pparg0: NullablePointer[Zip] tag, pparg1: U64, pparg2: String, pparg3: I32): I32 => @zip_set_file_comment(pparg0, pparg1, pparg2.cstring(), pparg3) fun obsolete_pzip_error_get_sys_type(pparg0: I32): I32 => @zip_error_get_sys_type(pparg0) fun obsolete_pzip_error_get(pparg0: NullablePointer[Zip] tag, pparg1: Pointer[I32] tag, pparg2: Pointer[I32] tag): None => @zip_error_get(pparg0, pparg1, pparg2) fun obsolete_pzip_error_to_str(pparg0: String, pparg1: U64, pparg2: I32, pparg3: I32): I32 => @zip_error_to_str(pparg0.cstring(), pparg1, pparg2, pparg3) fun obsolete_pzip_file_error_get(pparg0: NullablePointer[Zipfile] tag, pparg1: Pointer[I32] tag, pparg2: Pointer[I32] tag): None => @zip_file_error_get(pparg0, pparg1, pparg2)","title":"Functions"},{"location":"src/ponyzip/ponyzip/","text":"\"\"\" # PonyZip Package This package consists of two APIs: 1. ABLibZIP - A direct 1:1 mapping of the libzip C API to Pony C-FFI calls. 2. PonyZip - A safer 'Ponyesque' API which is designed to not crash if you do something which is not safe or supported. As a general rule you should prefer the PonyZip API over ABLibZIP and only use ABLibZIP if one of the functions you need isn't implemented. If there is functionality that is missing the PonyZip that is present in ABLibZIP please either open an Issue to request it or a Pull Request to add it. \"\"\" use \"debug\" use \"collections\" use @printf[I32](...) class PonyZip var zip: NullablePointer[Zip] = NullablePointer[Zip].none() var errortype: ZipER = ZipEROK var errorstr: String = \"\" var initflags: U32 = 0 new create(filename: String, flags: ZipFlags) => \"\"\" The create() constructor opens the zip archive specified by filename and returns a PonyZip object instance. The flags available are: * ZipCheckcons Perform additional stricter consistency checks on the archive, and error if they fail. * ZipCreate Create the archive if it does not exist. * ZipExcl Error if archive already exists. * ZipTruncate If archive exists, ignore its current contents. In other words, handle it the same way as an empty archive. * ZipRDOnly Open archive in read-only mode. After creation you should immediately verify that the creation was successful by calling the valid() function. \"\"\" initflags = flags.value() var errno: Array[I32] = [I32(0)] zip = ABLibZIP.pzip_open(filename, initflags, errno.cpointer()) if (zip.is_none()) then try var errorno = errno.apply(0)? var ziperr: Ziperror = Ziperror var ziperrp: NullablePointer[Ziperror] = NullablePointer[Ziperror](ziperr) errortype = ZipERR.decode(errorno) ABLibZIP.pzip_error_init_with_code(ziperrp, errorno) errorstr = ABLibZIP.pzip_error_strerror(ziperrp) end end new create_from_source(source: NullablePointer[Zipsource], flags: ZipFlags) => \"\"\" The create_from_source() constructor opens the zip archive referenced by the provided Zipsource and returns a PonyZip object instance. The flags available are: * ZipCheckcons Perform additional stricter consistency checks on the archive, and error if they fail. * ZipCreate Create the archive if it does not exist. * ZipExcl Error if archive already exists. * ZipTruncate If archive exists, ignore its current contents. In other words, handle it the same way as an empty archive. * ZipRDOnly Open archive in read-only mode. After creation you should immediately verify that the creation was successful by calling the valid() function. \"\"\" initflags = flags.value() var errno: Array[I32] = [I32(0)] zip = ABLibZIP.pzip_open_from_source(source, initflags, errno.cpointer()) if (zip.is_none()) then try var errorno = errno.apply(0)? var ziperr: Ziperror = Ziperror var ziperrp: NullablePointer[Ziperror] = NullablePointer[Ziperror](ziperr) errortype = ZipERR.decode(errorno) ABLibZIP.pzip_error_init_with_code(ziperrp, errorno) errorstr = ABLibZIP.pzip_error_strerror(ziperrp) end end fun valid(): Bool => \"\"\" Validatates if the associated open* creator was successful in opening the specified zip archive. Returns boolean true/false. If creation was unsuccessful, the cause of the error can be accessed via the errorstr field. \"\"\" if (zip.is_none()) then false else true end fun count(flags: ZipFLFlags = ZipFLFlags): USize ? => \"\"\" Returns the total number of entries in the provided zip archive. \"\"\" if (zip.is_none()) then error else ABLibZIP.pzip_get_num_entries(zip, flags.value()).usize() end fun zip_stat_index(index: USize): Zipstat ? => \"\"\" Returns a Zipstat struct containing the file metadata for the file at the provided index value. \"\"\" if (zip.is_none()) then error end var zfile: Zipstat = Zipstat var zfilep: NullablePointer[Zipstat] = NullablePointer[Zipstat](zfile) var ii: I32 = ABLibZIP.pzip_stat_index(zip, index.u64(), U32(0), zfilep) if (zfilep.is_none()) then error else zfile end fun ref readfile(zipstat: Zipstat): Array[U8] iso^ ? => \"\"\" Returns the contents of the file defined by the provided Zipstat. Currently only supports unencrypted files. \"\"\" if (zipstat.pencryptionmethod != ZipEMNone.value()) then error // We should probably automatically call // a decrypt function here... cos we're nice end let bytes: USize = zipstat.size() Debug.out(\"CompressedFilesize: \" + zipstat.compsize().string()) Debug.out(\"Filesize: \" + bytes.string()) var zf: NullablePointer[Zipfile] = ABLibZIP.pzip_fopen_index(zip, zipstat.index().u64(), U32(0)) if (zf.is_none()) then error end var data: Array[U8] iso = recover iso Array[U8].>undefined(bytes) end var cnt: I64 = ABLibZIP.pzip_fread(zf, data.cpointer(), bytes.u64()) Debug.out(\"Read: \" + cnt.string() + \" bytes out of \" + bytes.string()) consume data fun ref add_file(filename: String, data: Array[U8] val, flags: Array[ZipFLFlags]): USize ? => \"\"\" Adds the contents of the provided data-field to the archive with the specified filename. This is a convenience function which combines Source creation and file addition. \"\"\" if (zip.is_none()) then error end var ziperr: Ziperror = Ziperror var ziperrp: NullablePointer[Ziperror] = NullablePointer[Ziperror](ziperr) let zs: NullablePointer[Zipsource] = ABLibZIP.pzip_source_buffer_create(data.cpointer(), data.size().u64(), I32(1), ziperrp) if (zs.is_none()) then errorstr = ABLibZIP.pzip_error_strerror(ziperrp) error end ABLibZIP.pzip_file_add(zip, filename, zs, U32(0)).usize() // FIXME //// Check here for -1 too for writing issues... fun add_file_from_source(filename: String, source: NullablePointer[Zipsource], flags: ZipFLFlags = ZipFLFlags): I64 ? => \"\"\" Adds the file represented by the provided NullablePointer[Zipsource] to the archive. \"\"\" if (zip.is_none()) then error end if (source.is_none()) then error end ABLibZIP.pzip_file_add(zip, filename, source, flags.value()) fun ref zip_source_file(filename: String, start: U64, length: I64): NullablePointer[Zipsource] ? => \"\"\" Creates a NullablePointer[Zipsource] for a specified file. This can either be used to read a zip archive in a zip archive... Zipception! ... or to directly write files into a zip archive without having to do the memory allocation yourself. \"\"\" let rs: NullablePointer[Zipsource] = ABLibZIP.pzip_source_file(zip, filename, start, length) var errno: Array[I32] = [I32(0)] if (rs.is_none()) then var errorno = errno.apply(0)? var ziperr: Ziperror = Ziperror var ziperrp: NullablePointer[Ziperror] = NullablePointer[Ziperror](ziperr) errortype = ZipERR.decode(errorno) ABLibZIP.pzip_error_init_with_code(ziperrp, errorno) errorstr = ABLibZIP.pzip_error_strerror(ziperrp) error end rs fun close(): I32 => \"\"\" Closes the specified archive. Will not complete until any changes to the archive have been committed to disk. Success results in a return-code of 0. \"\"\" ABLibZIP.pzip_close(zip)","title":"Ponyzip"},{"location":"src/ponyzip/structs/","text":"use \"time\" struct Zipsourceargsseek var poffset: I64 = I64(0) var pwhence: I32 = I32(0) struct Ziperror var pziperr: I32 = I32(0) var psyserr: I32 = I32(0) var pstr: Pointer[U8] = Pointer[U8] struct Zipstat var pvalid: U64 = U64(0) var pname: Pointer[U8] = Pointer[U8] var pindex: U64 = U64(0) var psize: U64 = U64(0) var pcompsize: U64 = U64(0) var pmtime: I64 = I64(0) var pcrc: U32 = U32(0) var pcompmethod: U16 = U16(0) var pencryptionmethod: U16 = U16(0) var pflags: U32 = U32(0) fun ref name(): String iso^ => let s: String iso = String.from_cstring(pname).clone() consume s fun index(): USize => pindex.usize() fun size(): USize => psize.usize() fun compsize(): USize => pcompsize.usize() fun mtime(): PosixDate => PosixDate(pmtime, I64(0)) fun crc(): U32 => pcrc struct Zipbufferfragment var pdata: Pointer[U8] = Pointer[U8] var plength: U64 = U64(0) struct Zipfileattributes var pvalid: U64 = U64(0) var pversion: U8 = U8(0) var phostsystem: U8 = U8(0) var pascii: U8 = U8(0) var pversionneeded: U8 = U8(0) var pexternalfileattributes: U32 = U32(0) var pgeneralpurposebitflags: U16 = U16(0) var pgeneralpurposebitmask: U16 = U16(0) struct Zip struct Zipfile struct Zipsource struct IOFILE","title":"Structs"}]}